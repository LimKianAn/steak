const ActiveExitingQueueProgress = {"body":{"type":"object","description":"List of Ethereum validator ids.","required":["public_keys"],"properties":{"public_keys":{"type":"array","items":{"type":"string","description":"Public Key of an asymmetric key-pair.","format":"hex","examples":["0xa1d1ad0714035353258038e964ae9675dc0252ee22cea896825c01458e1807bfad2f9969338798548d9858a571f7425c"]}}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"network":{"type":"string","description":"Ethereum network","enum":["mainnet","holesky"],"$schema":"https://json-schema.org/draft/2020-12/schema#"}},"required":["network"]}]},"response":{"200":{"type":"object","required":["validators","last_updated"],"properties":{"last_updated":{"type":"string","description":"Time validator state was recorded","examples":["2024-04-15 08:23:00"]},"validators":{"type":"array","items":{"type":"object","description":"Ethereum validator queue progress validator","required":["public_key","epochs_remaining"],"properties":{"public_key":{"type":"string","description":"Public Key of an asymmetric key-pair.","format":"hex","examples":["0xa1d1ad0714035353258038e964ae9675dc0252ee22cea896825c01458e1807bfad2f9969338798548d9858a571f7425c"]},"epochs_remaining":{"description":"the number of epochs remaining in the current queue","type":"integer","format":"int64","examples":[280312],"minimum":-9223372036854776000,"maximum":9223372036854776000}}}}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"400":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[400],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["Detailed human-readable diagnostic message regarding any invalid request parameters"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"401":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[401],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A human-readable diagnostic message detailing any authorization failure"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"500":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[500],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A descriptive error message"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"}}} as const
;
const CancelNearDeactivationIntent = {"body":{"type":"object","description":"Intent id.","required":["intent_id"],"properties":{"intent_id":{"type":"string","format":"uuid","description":"Unique idenifier for deactivate intent.","examples":["4ba06e89-8c29-483e-ac36-318de5aa7364"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"network":{"type":"string","description":"NEAR network","enum":["mainnet","testnet","localnet"],"$schema":"https://json-schema.org/draft/2020-12/schema#"}},"required":["network"]}]},"response":{"400":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[400],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["Detailed human-readable diagnostic message regarding any invalid request parameters"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"401":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[401],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A human-readable diagnostic message detailing any authorization failure"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"500":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[500],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A descriptive error message"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"}}} as const
;
const CancelPolygonDeactivationIntent = {"body":{"type":"object","description":"Intent id.","required":["intent_id"],"properties":{"intent_id":{"type":"string","format":"uuid","description":"Unique idenifier for deactivate intent.","examples":["4ba06e89-8c29-483e-ac36-318de5aa7364"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"network":{"type":"string","description":"Polygon network","enum":["mainnet","goerli","prater"],"$schema":"https://json-schema.org/draft/2020-12/schema#"}},"required":["network"]}]},"response":{"200":{"type":"object","description":"Success Response","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Status Code","examples":[201],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Confirmation Message","examples":["Canceled"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"400":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[400],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["Detailed human-readable diagnostic message regarding any invalid request parameters"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"401":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[401],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A human-readable diagnostic message detailing any authorization failure"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"500":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[500],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A descriptive error message"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"}}} as const
;
const CancelSolanaDeactivationIntent = {"body":{"type":"object","description":"Intent id.","required":["intent_id"],"properties":{"intent_id":{"type":"string","format":"uuid","description":"Unique idenifier for deactivate intent.","examples":["4ba06e89-8c29-483e-ac36-318de5aa7364"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"network":{"type":"string","description":"Solana network","enum":["mainnet","testnet"],"$schema":"https://json-schema.org/draft/2020-12/schema#"}},"required":["network"]}]},"response":{"200":{"type":"object","description":"Success Response","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Status Code","examples":[201],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Confirmation Message","examples":["Canceled"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"400":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[400],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["Detailed human-readable diagnostic message regarding any invalid request parameters"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"401":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[401],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A human-readable diagnostic message detailing any authorization failure"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"500":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[500],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A descriptive error message"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"}}} as const
;
const CancelSolanaWithdrawalIntent = {"body":{"type":"object","description":"Intent id.","required":["intent_id"],"properties":{"intent_id":{"type":"string","format":"uuid","description":"Unique idenifier for deactivate intent.","examples":["4ba06e89-8c29-483e-ac36-318de5aa7364"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"network":{"type":"string","description":"Solana network","enum":["mainnet","testnet"],"$schema":"https://json-schema.org/draft/2020-12/schema#"}},"required":["network"]}]},"response":{"200":{"type":"object","description":"Success Response","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Status Code","examples":[201],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Confirmation Message","examples":["Canceled"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"400":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[400],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["Detailed human-readable diagnostic message regarding any invalid request parameters"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"401":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[401],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A human-readable diagnostic message detailing any authorization failure"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"500":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[500],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A descriptive error message"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"}}} as const
;
const ExitEthereumValidator = {"body":{"type":"object","description":"Data about validator to exit.","required":["validator_identifier"],"properties":{"validator_identifier":{"type":"object","description":"Information to identify validator. Only either validator index or validator public key is required.","properties":{"validator_public_key":{"type":"string","description":"Public Key of an asymmetric key-pair.","format":"hex","examples":["0xa1d1ad0714035353258038e964ae9675dc0252ee22cea896825c01458e1807bfad2f9969338798548d9858a571f7425c"]},"validator_index":{"type":"string","description":"Validator index","examples":["25"]}},"additionalProperties":false,"minProperties":1}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"network":{"type":"string","description":"Ethereum network","enum":["mainnet","holesky"],"$schema":"https://json-schema.org/draft/2020-12/schema#"}},"required":["network"]}]},"response":{"400":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[400],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["Detailed human-readable diagnostic message regarding any invalid request parameters"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"401":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[401],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A human-readable diagnostic message detailing any authorization failure"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"404":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[500],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A descriptive error message"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"500":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[500],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A descriptive error message"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"503":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[500],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A descriptive error message"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"}}} as const
;
const ExitEthereumValidators = {"body":{"type":"object","description":"Data about a list of validators (up to 500) to exit.","required":["validator_identifiers"],"properties":{"validator_identifiers":{"type":"array","items":{"type":"object","description":"Information to identify validator. Only either validator index or validator public key is required.","properties":{"validator_public_key":{"type":"string","description":"Public Key of an asymmetric key-pair.","format":"hex","examples":["0xa1d1ad0714035353258038e964ae9675dc0252ee22cea896825c01458e1807bfad2f9969338798548d9858a571f7425c"]},"validator_index":{"type":"string","description":"Validator index","examples":["25"]}},"additionalProperties":false,"minProperties":1},"maxItems":500,"description":"Contains a list of validators to exit."}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"network":{"type":"string","description":"Ethereum network","enum":["mainnet","holesky"],"$schema":"https://json-schema.org/draft/2020-12/schema#"}},"required":["network"]}]},"response":{"200":{"type":"object","description":"A list of validators was exited correctly.","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Correct execution","examples":[200],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Confirmation message","examples":["Detailed human-readable diagnostic message"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"400":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[400],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["Detailed human-readable diagnostic message regarding any invalid request parameters"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"401":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[401],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A human-readable diagnostic message detailing any authorization failure"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"404":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[500],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A descriptive error message"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"500":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[500],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A descriptive error message"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"503":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[500],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A descriptive error message"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"}}} as const
;
const GenerateEthereumLaunchpadDeposit = {"body":{"type":"object","description":"Request for generating an Ethereum Launchpad deposit string","required":["validators"],"properties":{"validators":{"description":"Validators public keys","type":"array","items":{"type":"string","description":"A BLS public Key.","format":"base64","examples":["0xa1d1ad0714035353258038e964ae9675dc0252ee22cea896825c01458e1807bfad2f9969338798548d9858a571f7425c"]}}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"response":{"200":{"description":"An array of data that should be submitted to launchpad.ethereum.org to register the validators it describes.","type":"array","items":{"type":"object","description":"Data about a validator that can be registered at launchpad.ethereum.org","required":["pubkey","withdrawal_credentials","amount","signature","deposit_message_root","deposit_data_root","fork_version","network_name","deposit_cli_version"],"properties":{"pubkey":{"type":"string","description":"Validator public key, 96 hex digits, no `0x` prefix"},"withdrawal_credentials":{"type":"string","description":"Validator withdrawal credentials, 64 hex digits, no `0x` prefix"},"amount":{"type":"integer","format":"uint64","description":"Amount of ether that this validator has staked","minimum":0,"maximum":18446744073709552000},"signature":{"type":"string","description":"Signed validator domain root, hex digits, no `0x` prefix"},"deposit_message_root":{"type":"string","description":"Merkle root for the deposit message, 32 hex digits, no `0x` prefix"},"deposit_data_root":{"type":"string","description":"Merkle root for the deposit data, 32 hex digits, no `0x` prefix"},"fork_version":{"type":"string","description":"Network fork version, 8 hex digits, no `0x` prefix"},"network_name":{"type":"string","description":"Name for the deposit network (mainnet, holesky...), lowercase"},"deposit_cli_version":{"type":"string","description":"String form of 3-number generator version, eg. `2.3.0`"}}},"format":"json","$schema":"https://json-schema.org/draft/2020-12/schema#"},"400":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[400],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["Detailed human-readable diagnostic message regarding any invalid request parameters"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"401":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[401],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A human-readable diagnostic message detailing any authorization failure"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"404":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[500],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A descriptive error message"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"500":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[500],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A descriptive error message"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"503":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[500],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A descriptive error message"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"}}} as const
;
const GenerateSignedVoluntaryExit = {"metadata":{"allOf":[{"type":"object","properties":{"network":{"type":"string","description":"Ethereum network","enum":["mainnet","holesky"],"$schema":"https://json-schema.org/draft/2020-12/schema#"}},"required":["network"]},{"type":"object","properties":{"show_fork_version":{"type":"boolean","$schema":"https://json-schema.org/draft/2020-12/schema#","description":"When this parameter is set to `true`, the response will include the field `fork_version` indicating the fork version constant for the currently active fork.\n\nThe fork versions values are unique for each network and each fork. As an example, here is the constants preset file for Mainnet:\nhttps://github.com/ethereum/consensus-specs/blob/dev/configs/mainnet.yaml"},"validator_index":{"type":"integer","description":"Validator index","format":"uint64","examples":[25],"minimum":0,"maximum":18446744073709552000,"$schema":"https://json-schema.org/draft/2020-12/schema#"},"validator_public_key":{"type":"string","description":"Validator public key","format":"hex","examples":["0xa1d1ad0714035353258038e964ae9675dc0252ee22cea896825c01458e1807bfad2f9969338798548d9858a571f7425c"],"$schema":"https://json-schema.org/draft/2020-12/schema#"},"epoch":{"type":"integer","description":"Earliest epoch when voluntary exit can be processed.\nIf not provided the earliest possible epoch will be fetched from the network.\n","format":"uint64","examples":[1001],"minimum":0,"maximum":18446744073709552000,"$schema":"https://json-schema.org/draft/2020-12/schema#"}},"required":[]}]},"response":{"200":{"type":"object","description":"Ethereum exit validator transaction response","required":["message","signature","fork_version"],"properties":{"message":{"type":"object","description":"Ethereum exit validator message","required":["validator_index","epoch"],"properties":{"validator_index":{"type":"string","description":"Validator index","examples":["25"]},"epoch":{"type":"string","description":"The numeric index of an [Ethereum epoch](https://ethereum.org/en/glossary/#epoch).","examples":["1001"]}}},"signature":{"type":"string","format":"hex","description":"Ethereum signature","examples":["0x22895118000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000120087fed394b43849eebef1e88873cd9efdbe33136656e5148e659b8b2f33625d40000000000000000000000000000000000000000000000000000000000000030b81748644e23c4d950f9dd709f3eb73d5eacd9657997e1d9dde7c4ebd8a6519ecb9d0a7fb603d3b68e023278f9650122000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020010000000000000000000000c509bb854c526af4cee5e037089f7aa8e091d8870000000000000000000000000000000000000000000000000000000000000060b36b79b4b206c0310472c117fa40c05342b5dc3e89f98f42c9da3ce6450d4c603cad55248017fd4eca3ab277cca64569193e4d487f5b2ea78a2bcdc81926c313c05842a3af318967a775783bba22519e8b8886587efa99aa7dab5784f792b187"]},"fork_version":{"type":"string","description":"A hex-encoded Ethereum fork version value.\n\nThe fork versions values are unique for each network and each fork. As an example, here is the constants preset file for Mainnet:\nhttps://github.com/ethereum/consensus-specs/blob/dev/configs/mainnet.yaml","examples":["0x03000000"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"400":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[400],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["Detailed human-readable diagnostic message regarding any invalid request parameters"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"401":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[401],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A human-readable diagnostic message detailing any authorization failure"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"404":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[500],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A descriptive error message"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"500":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[500],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A descriptive error message"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"503":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[500],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A descriptive error message"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"}}} as const
;
const GetBinanceDeactivatableAmount = {"metadata":{"allOf":[{"type":"object","properties":{"network":{"type":"string","description":"Binance network","enum":["mainnet","testnet"],"$schema":"https://json-schema.org/draft/2020-12/schema#"}},"required":["network"]},{"type":"object","properties":{"wallets":{"type":"array","items":{"type":"string","description":"Binance beacon chain address.","format":"bech32","pattern":"^bnb[0-9a-z]+$","examples":["bnb13ym5szfmwh0wz9j8wr2lu2gaml94h895u9el2e"]},"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"Array of Binance wallets"}},"required":[]}]},"response":{"200":{"type":"object","description":"The deactivatable amount","required":["protocol","network","amount","currency"],"properties":{"protocol":{"type":"string","description":"Binance beacon chain protocol\n\n`binance`","enum":["binance"]},"network":{"type":"string","description":"Binance beacon chain network\n\n`mainnet` `testnet`","enum":["mainnet","testnet"]},"currency":{"type":"string","description":"The smallest denomination of Binance Coin (BNB) is called Jager. 1 Jager =0.00000001 BNB.","pattern":"^[1-9]\\d+$","examples":["10000000000"]},"amount":{"type":"string","pattern":"^[1-9]\\d+$","examples":["123456"]},"wallets":{"type":"array","items":{"type":"object","description":"Amount per wallet","required":["wallet","amount","validator"],"properties":{"wallet":{"type":"string"},"amount":{"type":"string","pattern":"^[1-9]\\d+$"},"validator":{"type":"string"}}}}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"400":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[400],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["Detailed human-readable diagnostic message regarding any invalid request parameters"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"401":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[401],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A human-readable diagnostic message detailing any authorization failure"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"500":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[500],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A descriptive error message"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"}}} as const
;
const GetBinanceDeactivationIntents = {"metadata":{"allOf":[{"type":"object","properties":{"network":{"type":"string","description":"Binance network","enum":["mainnet","testnet"],"$schema":"https://json-schema.org/draft/2020-12/schema#"}},"required":["network"]}]},"response":{"200":{"type":"object","description":"Deactivation intents","required":["protocol","network","customer_id"],"properties":{"protocol":{"type":"string","description":"Blockchain protocol.\n\n`ethereum` `polkadot` `solana` `cosmos` `polygon` `near` `cardano` `avalanche` `binance`","enum":["ethereum","polkadot","solana","cosmos","polygon","near","cardano","avalanche","binance"]},"network":{"type":"string","description":"Protocol-specific network.\n\n`mainnet` `localnet` `goerli` `prater` `holesky` `testnet` `devnet` `kusama` `westend` `preprod` `fuji` `local`","enum":["mainnet","localnet","goerli","prater","holesky","testnet","devnet","kusama","westend","preprod","fuji","local"]},"polygon":{"type":"object","required":["items","wallet_address"],"properties":{"items":{"type":"array","items":{"type":"object","description":"Unbond information","required":["nonce","amount","withdraw_epoch"],"properties":{"nonce":{"type":"integer","description":"Number for one use only","examples":[1]},"amount":{"type":"string","description":"Denomination of the cryptocurrency Polygon.","pattern":"^[1-9]\\d+$","examples":["100"]},"withdraw_epoch":{"type":"integer"}}}},"wallet_address":{"type":"string","description":"Hex-encoded Ethereum [account or smart contract address](https://ethereum.org/en/developers/docs/accounts/).","format":"hex","pattern":"^0x[a-fA-F0-9]{40}$","examples":["0x00000000219ab540356cBB839Cbe05303d7705Fa"]}}},"solana":{"description":"List of deactivation intents","type":"array","items":{"type":"object","required":["customer_id","deactivate_intent_id","network","protocol","solana"],"description":"Response to a new deactivation intent request.","properties":{"deactivate_intent_id":{"type":"string","format":"uuid","description":"Unique idenifier for deactivate intent.","examples":["4ba06e89-8c29-483e-ac36-318de5aa7364"]},"customer_id":{"type":"string","description":"Unique identifier for a customer","minimum":1,"examples":["SatoshiNakamoto-xUYJbPw9hw"]},"protocol":{"type":"string","description":"Solana protocol\n\n`solana`","enum":["solana"]},"network":{"type":"string","description":"Solana network\n\n`mainnet` `testnet`","enum":["mainnet","testnet"]},"solana":{"type":"object","description":"Result of the new Deactivate Intent request.","required":["total_deactivated_amount","deactivates","splits"],"properties":{"deactivates":{"type":"array","items":{"type":"object","description":"Result of the deactivation transaction request","required":["unsigned_transaction","stake_account_authority","stake_account_address","withdrawal_authority","stake_id","amount","expiration_time"],"properties":{"unsigned_transaction":{"type":"string","format":"base64","description":"Generated unsigned transaction smart contract call data.","examples":["0x22895118000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000120087fed394b43849eebef1e88873cd9efdbe33136656e5148e659b8b2f33625d40000000000000000000000000000000000000000000000000000000000000030b81748644e23c4d950f9dd709f3eb73d5eacd9657997e1d9dde7c4ebd8a6519ecb9d0a7fb603d3b68e023278f9650122000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020010000000000000000000000c509bb854c526af4cee5e037089f7aa8e091d8870000000000000000000000000000000000000000000000000000000000000060b36b79b4b206c0310472c117fa40c05342b5dc3e89f98f42c9da3ce6450d4c603cad55248017fd4eca3ab277cca64569193e4d487f5b2ea78a2bcdc81926c313c05842a3af318967a775783bba22519e8b8886587efa99aa7dab5784f792b187\n"]},"stake_account_authority":{"type":"string","description":"Public Key of an asymmetric key-pair.","format":"base58","pattern":"^[1-9A-HJ-NP-Za-km-z]{44}$","examples":["5xot9PVkphiX2adznghwrAuxGs2zeWisNSxMW6hU6Hkj"]},"stake_account_address":{"type":"string","description":"Public Key of an asymmetric key-pair.","format":"base58","pattern":"^[1-9A-HJ-NP-Za-km-z]{44}$","examples":["5xot9PVkphiX2adznghwrAuxGs2zeWisNSxMW6hU6Hkj"]},"withdrawal_authority":{"type":"string","description":"Public Key of an asymmetric key-pair.","format":"base58","pattern":"^[1-9A-HJ-NP-Za-km-z]{44}$","examples":["5xot9PVkphiX2adznghwrAuxGs2zeWisNSxMW6hU6Hkj"]},"stake_id":{"description":"Unique stake identifier.","type":"string","format":"base58","examples":["stake_Wgx98Rbi8nQuL9ddn3mTk1"]},"amount":{"type":"string","description":"Denomination of the cryptocurrency Solana.","pattern":"^[1-9]\\d+$","examples":["100"]},"expiration_time":{"type":"integer","description":"Transaction expiration time","format":"int64","examples":[1689939023],"minimum":-9223372036854776000,"maximum":9223372036854776000}}}},"splits":{"type":"array","items":{"type":"object","description":"Result of the split transaction request","required":["unsigned_transaction","stake_account_authority","new_stake_account_address","new_stake_id","splitted_stake_account_address","splitted_stake_id","amount"],"properties":{"unsigned_transaction":{"type":"string","format":"base64","description":"Generated unsigned transaction smart contract call data.","examples":["0x22895118000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000120087fed394b43849eebef1e88873cd9efdbe33136656e5148e659b8b2f33625d40000000000000000000000000000000000000000000000000000000000000030b81748644e23c4d950f9dd709f3eb73d5eacd9657997e1d9dde7c4ebd8a6519ecb9d0a7fb603d3b68e023278f9650122000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020010000000000000000000000c509bb854c526af4cee5e037089f7aa8e091d8870000000000000000000000000000000000000000000000000000000000000060b36b79b4b206c0310472c117fa40c05342b5dc3e89f98f42c9da3ce6450d4c603cad55248017fd4eca3ab277cca64569193e4d487f5b2ea78a2bcdc81926c313c05842a3af318967a775783bba22519e8b8886587efa99aa7dab5784f792b187\n"]},"stake_account_authority":{"type":"string","description":"Public Key of an asymmetric key-pair.","format":"base58","pattern":"^[1-9A-HJ-NP-Za-km-z]{44}$","examples":["5xot9PVkphiX2adznghwrAuxGs2zeWisNSxMW6hU6Hkj"]},"new_stake_account_address":{"type":"string","description":"Public Key of an asymmetric key-pair.","format":"base58","pattern":"^[1-9A-HJ-NP-Za-km-z]{44}$","examples":["5xot9PVkphiX2adznghwrAuxGs2zeWisNSxMW6hU6Hkj"]},"new_stake_id":{"description":"Unique stake identifier.","type":"string","format":"base58","examples":["stake_Wgx98Rbi8nQuL9ddn3mTk1"]},"splitted_stake_account_address":{"type":"string","description":"Public Key of an asymmetric key-pair.","format":"base58","pattern":"^[1-9A-HJ-NP-Za-km-z]{44}$","examples":["5xot9PVkphiX2adznghwrAuxGs2zeWisNSxMW6hU6Hkj"]},"splitted_stake_id":{"description":"Unique stake identifier.","type":"string","format":"base58","examples":["stake_Wgx98Rbi8nQuL9ddn3mTk1"]},"amount":{"type":"string","description":"Denomination of the cryptocurrency Solana.","pattern":"^[1-9]\\d+$","examples":["100"]}}}},"total_deactivated_amount":{"type":"string","description":"Denomination of the cryptocurrency Solana.","pattern":"^[1-9]\\d+$","examples":["100"]}}}}}},"near":{"type":"array","description":"List of deactivation intents","items":{"type":"object","required":["customer_id","deactivate_intent_id","near","network","protocol"],"description":"Response to a new deactivation intent request.","properties":{"deactivate_intent_id":{"type":"string","format":"uuid","description":"Unique idenifier for deactivate intent.","examples":["4ba06e89-8c29-483e-ac36-318de5aa7364"]},"customer_id":{"type":"string","description":"Unique identifier for a customer","minimum":1,"examples":["SatoshiNakamoto-xUYJbPw9hw"]},"protocol":{"type":"string","description":"Near protocol\n\n`near`","enum":["near"]},"network":{"type":"string","description":"NEAR network\n\n`mainnet` `testnet` `localnet`","enum":["mainnet","testnet","localnet"]},"near":{"type":"object","description":"NEAR Protocol Deactivate Intent","required":["to","unsigned_transaction","amount","wallet_address","public_key","expiration_time"],"properties":{"to":{"type":"string","description":"Base58 encoded public key or registered named account. [Accounts](https://docs.near.org/concepts/basics/accounts/account-id/).","pattern":"^([a-km-zA-HJ-NP-Z1-9]{22,44})|((([a-z\\d]+[-_])*[a-z\\d]+\\.)*([a-z\\d]+[-_])*[a-z\\d]+)$","examples":["alice.near"]},"unsigned_transaction":{"type":"string","format":"base64","description":"Generated unsigned transaction smart contract call data.","examples":["0x22895118000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000120087fed394b43849eebef1e88873cd9efdbe33136656e5148e659b8b2f33625d40000000000000000000000000000000000000000000000000000000000000030b81748644e23c4d950f9dd709f3eb73d5eacd9657997e1d9dde7c4ebd8a6519ecb9d0a7fb603d3b68e023278f9650122000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020010000000000000000000000c509bb854c526af4cee5e037089f7aa8e091d8870000000000000000000000000000000000000000000000000000000000000060b36b79b4b206c0310472c117fa40c05342b5dc3e89f98f42c9da3ce6450d4c603cad55248017fd4eca3ab277cca64569193e4d487f5b2ea78a2bcdc81926c313c05842a3af318967a775783bba22519e8b8886587efa99aa7dab5784f792b187\n"]},"amount":{"type":"string","description":"Denomination of NEAR Protocol.","pattern":"^[1-9]\\d+$","examples":["100000000000000000000000000"]},"wallet_address":{"type":"string","description":"Base58 encoded public key or registered named account. [Accounts](https://docs.near.org/concepts/basics/accounts/account-id/).","pattern":"^([a-km-zA-HJ-NP-Z1-9]{22,44})|((([a-z\\d]+[-_])*[a-z\\d]+\\.)*([a-z\\d]+[-_])*[a-z\\d]+)$","examples":["alice.near"]},"public_key":{"type":"string","description":"Base58 encoded public key prefixed by ed25519, associated with the private key that will be used to sign the transaction.","pattern":"^ed25519:[a-km-zA-HJ-NP-Z1-9]{22,44}$","examples":["ed25519:Cxg2wgFYrdLTEkMu6j5D6aEZqTb3kXbmJygS48ZKbo1S"]},"expiration_time":{"type":"integer","description":"Transaction expiration time","format":"int64","examples":[1689939023],"minimum":-9223372036854776000,"maximum":9223372036854776000}}}}}},"cardano":{"type":"array","description":"List of deactivation intents","items":{"type":"object","description":"Cardano Protocol Deactivate Intent","required":["deactivate_intent_id","base_address","unsigned_transaction"],"properties":{"deactivate_intent_id":{"type":"string","format":"uuid","description":"Unique idenifier for deactivate intent.","examples":["4ba06e89-8c29-483e-ac36-318de5aa7364"]},"base_address":{"type":"string","description":"bech32 encoded base address. [Accounts](https://cips.cardano.org/cips/cip19/).","format":"bech32","examples":["addr1vpu5vlrf4xkxv2qpwngf6cjhtw542ayty80v8dyr49rf5eg0yu80w"]},"unsigned_transaction":{"type":"string","format":"base64","description":"Generated unsigned transaction smart contract call data.","examples":["0x22895118000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000120087fed394b43849eebef1e88873cd9efdbe33136656e5148e659b8b2f33625d40000000000000000000000000000000000000000000000000000000000000030b81748644e23c4d950f9dd709f3eb73d5eacd9657997e1d9dde7c4ebd8a6519ecb9d0a7fb603d3b68e023278f9650122000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020010000000000000000000000c509bb854c526af4cee5e037089f7aa8e091d8870000000000000000000000000000000000000000000000000000000000000060b36b79b4b206c0310472c117fa40c05342b5dc3e89f98f42c9da3ce6450d4c603cad55248017fd4eca3ab277cca64569193e4d487f5b2ea78a2bcdc81926c313c05842a3af318967a775783bba22519e8b8886587efa99aa7dab5784f792b187\n"]}}}},"cosmos":{"type":"array","description":"List of deactivation intents","items":{"type":"object","required":["cosmos","customer_id","deactivate_intent_id","network","protocol"],"description":"Response to a new deactivation intent request.","properties":{"deactivate_intent_id":{"type":"string","format":"uuid","description":"Unique idenifier for deactivate intent.","examples":["4ba06e89-8c29-483e-ac36-318de5aa7364"]},"customer_id":{"type":"string","description":"Unique identifier for a customer","minimum":1,"examples":["SatoshiNakamoto-xUYJbPw9hw"]},"protocol":{"type":"string","description":"Cosmos protocol\n\n`cosmos`","enum":["cosmos"]},"network":{"type":"string","description":"Cosmos network\n\n`mainnet` `testnet`","enum":["mainnet","testnet"]},"cosmos":{"type":"object","description":"Cosmos Deactivate Intent","required":["unsigned_transaction","delegator_address","validator_address","amount"],"properties":{"unsigned_transaction":{"type":"string","format":"base64","description":"Generated unsigned transaction smart contract call data.","examples":["0x22895118000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000120087fed394b43849eebef1e88873cd9efdbe33136656e5148e659b8b2f33625d40000000000000000000000000000000000000000000000000000000000000030b81748644e23c4d950f9dd709f3eb73d5eacd9657997e1d9dde7c4ebd8a6519ecb9d0a7fb603d3b68e023278f9650122000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020010000000000000000000000c509bb854c526af4cee5e037089f7aa8e091d8870000000000000000000000000000000000000000000000000000000000000060b36b79b4b206c0310472c117fa40c05342b5dc3e89f98f42c9da3ce6450d4c603cad55248017fd4eca3ab277cca64569193e4d487f5b2ea78a2bcdc81926c313c05842a3af318967a775783bba22519e8b8886587efa99aa7dab5784f792b187\n"]},"delegator_address":{"type":"string","description":"Public Key of an asymmetric key-pair.","format":"bech32","pattern":"^cosmos[1-9a-zA-Z]{39}$","examples":["cosmos1wvvhhfm387xvfnqshmdaunnpujjrdxznr5d5x9"]},"validator_address":{"type":"string","description":"Public Key of an asymmetric key-pair.","format":"bech32","pattern":"^cosmos[1-9a-zA-Z]{39}$","examples":["cosmos1wvvhhfm387xvfnqshmdaunnpujjrdxznr5d5x9"]},"amount":{"type":"string","description":"Denomination of the cryptocurrency Cosmos.","pattern":"^[1-9]\\d+$","examples":["100"]}}}}}},"binance":{"type":"array","description":"List of deactivation intents","items":{"type":"object","required":["binance","customer_id","deactivate_intent_id","network","protocol"],"description":"Response to a new deactivation intent request.","properties":{"deactivate_intent_id":{"type":"string","format":"uuid","description":"Unique idenifier for deactivate intent.","examples":["4ba06e89-8c29-483e-ac36-318de5aa7364"]},"customer_id":{"type":"string","description":"Unique identifier for a customer","minimum":1,"examples":["SatoshiNakamoto-xUYJbPw9hw"]},"protocol":{"type":"string","description":"Binance beacon chain protocol\n\n`binance`","enum":["binance"]},"network":{"type":"string","description":"Binance beacon chain network\n\n`mainnet` `testnet`","enum":["mainnet","testnet"]},"binance":{"type":"object","description":"Binance Deactivate Intent","required":["unsigned_transaction","delegator_address","validator_address","amount"],"properties":{"unsigned_transaction":{"type":"string","format":"base64","description":"Generated unsigned transaction smart contract call data.","examples":["0x22895118000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000120087fed394b43849eebef1e88873cd9efdbe33136656e5148e659b8b2f33625d40000000000000000000000000000000000000000000000000000000000000030b81748644e23c4d950f9dd709f3eb73d5eacd9657997e1d9dde7c4ebd8a6519ecb9d0a7fb603d3b68e023278f9650122000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020010000000000000000000000c509bb854c526af4cee5e037089f7aa8e091d8870000000000000000000000000000000000000000000000000000000000000060b36b79b4b206c0310472c117fa40c05342b5dc3e89f98f42c9da3ce6450d4c603cad55248017fd4eca3ab277cca64569193e4d487f5b2ea78a2bcdc81926c313c05842a3af318967a775783bba22519e8b8886587efa99aa7dab5784f792b187\n"]},"delegator_address":{"type":"string","description":"Binance beacon chain address.","format":"bech32","pattern":"^bnb[0-9a-z]+$","examples":["bnb13ym5szfmwh0wz9j8wr2lu2gaml94h895u9el2e"]},"validator_address":{"type":"string","description":"Binance beacon chain validator address.","format":"bech32","pattern":"^bva[0-9a-zA-Z]*$","examples":["bva1mrpf5n5e5knn3z9qng5pnex3m9pvyhg6434j0t"]},"amount":{"type":"string","description":"The smallest denomination of Binance Coin (BNB) is called Jager. 1 Jager =0.00000001 BNB.","pattern":"^[1-9]\\d+$","examples":["10000000000"]}}}}}},"customer_id":{"type":"string","description":"Unique identifier for a customer","minimum":1,"examples":["SatoshiNakamoto-xUYJbPw9hw"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"400":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[400],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["Detailed human-readable diagnostic message regarding any invalid request parameters"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"401":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[401],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A human-readable diagnostic message detailing any authorization failure"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"500":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[500],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A descriptive error message"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"}}} as const
;
const GetBinanceRestakeIntents = {"metadata":{"allOf":[{"type":"object","properties":{"network":{"type":"string","description":"Binance network","enum":["mainnet","testnet"],"$schema":"https://json-schema.org/draft/2020-12/schema#"}},"required":["network"]}]},"response":{"200":{"type":"object","description":"Restake intents","required":["protocol","network","customer_id"],"properties":{"protocol":{"type":"string","description":"Blockchain protocol.\n\n`ethereum` `polkadot` `solana` `cosmos` `polygon` `near` `cardano` `avalanche` `binance`","enum":["ethereum","polkadot","solana","cosmos","polygon","near","cardano","avalanche","binance"]},"network":{"type":"string","description":"Protocol-specific network.\n\n`mainnet` `localnet` `goerli` `prater` `holesky` `testnet` `devnet` `kusama` `westend` `preprod` `fuji` `local`","enum":["mainnet","localnet","goerli","prater","holesky","testnet","devnet","kusama","westend","preprod","fuji","local"]},"cosmos":{"type":"array","description":"List of restake intents","items":{"type":"object","required":["cosmos","customer_id","network","protocol","restake_intent_id"],"description":"Response to a new restake intent request.","properties":{"restake_intent_id":{"type":"string","format":"uuid","description":"Unique idenifier for a restake intent.","examples":["4ba06e89-8c29-483e-ac36-318de5aa7364"]},"customer_id":{"type":"string","description":"Unique identifier for a customer","minimum":1,"examples":["SatoshiNakamoto-xUYJbPw9hw"]},"protocol":{"type":"string","description":"Cosmos protocol\n\n`cosmos`","enum":["cosmos"]},"network":{"type":"string","description":"Cosmos network\n\n`mainnet` `testnet`","enum":["mainnet","testnet"]},"cosmos":{"type":"object","description":"Cosmos Restake Intent","required":["unsigned_transaction","delegator_address","old_validator_address","new_validator_address","amount"],"properties":{"unsigned_transaction":{"type":"string","format":"base64","description":"Generated unsigned transaction smart contract call data.","examples":["0x22895118000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000120087fed394b43849eebef1e88873cd9efdbe33136656e5148e659b8b2f33625d40000000000000000000000000000000000000000000000000000000000000030b81748644e23c4d950f9dd709f3eb73d5eacd9657997e1d9dde7c4ebd8a6519ecb9d0a7fb603d3b68e023278f9650122000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020010000000000000000000000c509bb854c526af4cee5e037089f7aa8e091d8870000000000000000000000000000000000000000000000000000000000000060b36b79b4b206c0310472c117fa40c05342b5dc3e89f98f42c9da3ce6450d4c603cad55248017fd4eca3ab277cca64569193e4d487f5b2ea78a2bcdc81926c313c05842a3af318967a775783bba22519e8b8886587efa99aa7dab5784f792b187\n"]},"delegator_address":{"type":"string","description":"Public Key of an asymmetric key-pair.","format":"bech32","pattern":"^cosmos[1-9a-zA-Z]{39}$","examples":["cosmos1wvvhhfm387xvfnqshmdaunnpujjrdxznr5d5x9"]},"old_validator_address":{"type":"string","description":"Public Key of an asymmetric key-pair.","format":"bech32","pattern":"^cosmos[1-9a-zA-Z]{39}$","examples":["cosmos1wvvhhfm387xvfnqshmdaunnpujjrdxznr5d5x9"]},"new_validator_address":{"type":"string","description":"Public Key of an asymmetric key-pair.","format":"bech32","pattern":"^cosmos[1-9a-zA-Z]{39}$","examples":["cosmos1wvvhhfm387xvfnqshmdaunnpujjrdxznr5d5x9"]},"amount":{"type":"string","description":"Denomination of the cryptocurrency Cosmos.","pattern":"^[1-9]\\d+$","examples":["100"]}}}}}},"binance":{"type":"array","description":"List of restake intents","items":{"type":"object","required":["binance","customer_id","network","protocol","restake_intent_id"],"description":"Response to a new restake intent request.","properties":{"restake_intent_id":{"type":"string","format":"uuid","description":"Unique idenifier for a restake intent.","examples":["4ba06e89-8c29-483e-ac36-318de5aa7364"]},"customer_id":{"type":"string","description":"Unique identifier for a customer","minimum":1,"examples":["SatoshiNakamoto-xUYJbPw9hw"]},"protocol":{"type":"string","description":"Binance beacon chain protocol\n\n`binance`","enum":["binance"]},"network":{"type":"string","description":"Binance beacon chain network\n\n`mainnet` `testnet`","enum":["mainnet","testnet"]},"binance":{"type":"object","description":"Binance Restake Intent","required":["unsigned_transaction","delegator_address","old_validator_address","new_validator_address","amount"],"properties":{"unsigned_transaction":{"type":"string","format":"base64","description":"Generated unsigned transaction smart contract call data.","examples":["0x22895118000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000120087fed394b43849eebef1e88873cd9efdbe33136656e5148e659b8b2f33625d40000000000000000000000000000000000000000000000000000000000000030b81748644e23c4d950f9dd709f3eb73d5eacd9657997e1d9dde7c4ebd8a6519ecb9d0a7fb603d3b68e023278f9650122000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020010000000000000000000000c509bb854c526af4cee5e037089f7aa8e091d8870000000000000000000000000000000000000000000000000000000000000060b36b79b4b206c0310472c117fa40c05342b5dc3e89f98f42c9da3ce6450d4c603cad55248017fd4eca3ab277cca64569193e4d487f5b2ea78a2bcdc81926c313c05842a3af318967a775783bba22519e8b8886587efa99aa7dab5784f792b187\n"]},"delegator_address":{"type":"string","description":"Binance beacon chain address.","format":"bech32","pattern":"^bnb[0-9a-z]+$","examples":["bnb13ym5szfmwh0wz9j8wr2lu2gaml94h895u9el2e"]},"old_validator_address":{"type":"string","description":"Binance beacon chain validator address.","format":"bech32","pattern":"^bva[0-9a-zA-Z]*$","examples":["bva1mrpf5n5e5knn3z9qng5pnex3m9pvyhg6434j0t"]},"new_validator_address":{"type":"string","description":"Binance beacon chain validator address.","format":"bech32","pattern":"^bva[0-9a-zA-Z]*$","examples":["bva1mrpf5n5e5knn3z9qng5pnex3m9pvyhg6434j0t"]},"amount":{"type":"string","description":"The smallest denomination of Binance Coin (BNB) is called Jager. 1 Jager =0.00000001 BNB.","pattern":"^[1-9]\\d+$","examples":["10000000000"]}}}}}},"customer_id":{"type":"string","description":"Unique identifier for a customer","minimum":1,"examples":["SatoshiNakamoto-xUYJbPw9hw"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"400":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[400],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["Detailed human-readable diagnostic message regarding any invalid request parameters"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"401":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[401],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A human-readable diagnostic message detailing any authorization failure"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"500":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[500],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A descriptive error message"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"}}} as const
;
const GetCardanoDeactivationIntents = {"metadata":{"allOf":[{"type":"object","properties":{"network":{"type":"string","description":"Cardano network","enum":["mainnet","preprod","localnet"],"$schema":"https://json-schema.org/draft/2020-12/schema#"}},"required":["network"]}]},"response":{"200":{"type":"object","description":"Deactivation intents","required":["protocol","network","customer_id"],"properties":{"protocol":{"type":"string","description":"Cardano protocol\n\n`cardano`","enum":["cardano"]},"network":{"type":"string","description":"Cardano network\n\n`mainnet` `preprod` `localnet`","enum":["mainnet","preprod","localnet"]},"cardano":{"type":"array","description":"List of deactivation intents","items":{"type":"object","description":"Cardano Protocol Deactivate Intent","required":["deactivate_intent_id","base_address","unsigned_transaction"],"properties":{"deactivate_intent_id":{"type":"string","format":"uuid","description":"Unique idenifier for deactivate intent.","examples":["4ba06e89-8c29-483e-ac36-318de5aa7364"]},"base_address":{"type":"string","description":"bech32 encoded base address. [Accounts](https://cips.cardano.org/cips/cip19/).","format":"bech32","examples":["addr1vpu5vlrf4xkxv2qpwngf6cjhtw542ayty80v8dyr49rf5eg0yu80w"]},"unsigned_transaction":{"type":"string","format":"base64","description":"Generated unsigned transaction smart contract call data.","examples":["0x22895118000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000120087fed394b43849eebef1e88873cd9efdbe33136656e5148e659b8b2f33625d40000000000000000000000000000000000000000000000000000000000000030b81748644e23c4d950f9dd709f3eb73d5eacd9657997e1d9dde7c4ebd8a6519ecb9d0a7fb603d3b68e023278f9650122000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020010000000000000000000000c509bb854c526af4cee5e037089f7aa8e091d8870000000000000000000000000000000000000000000000000000000000000060b36b79b4b206c0310472c117fa40c05342b5dc3e89f98f42c9da3ce6450d4c603cad55248017fd4eca3ab277cca64569193e4d487f5b2ea78a2bcdc81926c313c05842a3af318967a775783bba22519e8b8886587efa99aa7dab5784f792b187\n"]}}}},"customer_id":{"type":"string","description":"Unique identifier for a customer","minimum":1,"examples":["SatoshiNakamoto-xUYJbPw9hw"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"400":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[400],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["Detailed human-readable diagnostic message regarding any invalid request parameters"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"401":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[401],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A human-readable diagnostic message detailing any authorization failure"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"500":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[500],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A descriptive error message"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"}}} as const
;
const GetCardanoRewardsWithdrawalIntents = {"metadata":{"allOf":[{"type":"object","properties":{"network":{"type":"string","description":"Cardano network","enum":["mainnet","preprod","localnet"],"$schema":"https://json-schema.org/draft/2020-12/schema#"}},"required":["network"]}]},"response":{"200":{"type":"object","description":"Rewards withdrawal intents.","required":["protocol","network","customer_id"],"properties":{"protocol":{"type":"string","description":"Cardano protocol\n\n`cardano`","enum":["cardano"]},"network":{"type":"string","description":"Cardano network\n\n`mainnet` `preprod` `localnet`","enum":["mainnet","preprod","localnet"]},"cardano":{"type":"array","description":"List of Rewards Withdrawal Intents","items":{"type":"object","description":"Cardano Protocol Reward Withdrawal Intent","required":["base_address","rewards_amount","unsigned_transaction"],"properties":{"base_address":{"type":"string","description":"bech32 encoded base address. [Accounts](https://cips.cardano.org/cips/cip19/).","format":"bech32","examples":["addr1vpu5vlrf4xkxv2qpwngf6cjhtw542ayty80v8dyr49rf5eg0yu80w"]},"rewards_amount":{"type":"string","description":"Denomination of the cryptocurrency Cardano.","pattern":"^[1-9]\\d+$","examples":["100"]},"unsigned_transaction":{"type":"string","format":"base64","description":"Generated unsigned transaction smart contract call data.","examples":["0x22895118000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000120087fed394b43849eebef1e88873cd9efdbe33136656e5148e659b8b2f33625d40000000000000000000000000000000000000000000000000000000000000030b81748644e23c4d950f9dd709f3eb73d5eacd9657997e1d9dde7c4ebd8a6519ecb9d0a7fb603d3b68e023278f9650122000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020010000000000000000000000c509bb854c526af4cee5e037089f7aa8e091d8870000000000000000000000000000000000000000000000000000000000000060b36b79b4b206c0310472c117fa40c05342b5dc3e89f98f42c9da3ce6450d4c603cad55248017fd4eca3ab277cca64569193e4d487f5b2ea78a2bcdc81926c313c05842a3af318967a775783bba22519e8b8886587efa99aa7dab5784f792b187\n"]}}}},"customer_id":{"type":"string","description":"Unique identifier for a customer","minimum":1,"examples":["SatoshiNakamoto-xUYJbPw9hw"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"400":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[400],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["Detailed human-readable diagnostic message regarding any invalid request parameters"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"401":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[401],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A human-readable diagnostic message detailing any authorization failure"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"500":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[500],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A descriptive error message"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"}}} as const
;
const GetCosmosDeactivatableAmount = {"metadata":{"allOf":[{"type":"object","properties":{"network":{"type":"string","description":"Cosmos network","enum":["mainnet","testnet"],"$schema":"https://json-schema.org/draft/2020-12/schema#"}},"required":["network"]},{"type":"object","properties":{"wallets":{"type":"array","items":{"type":"string","description":"Public Key of an asymmetric key-pair.","format":"bech32","pattern":"^cosmos[1-9a-zA-Z]{39}$","examples":["cosmos1wvvhhfm387xvfnqshmdaunnpujjrdxznr5d5x9"]},"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"Array of Cosmos wallets"}},"required":[]}]},"response":{"200":{"type":"object","description":"The deactivatable amount","required":["protocol","network","amount","currency"],"properties":{"protocol":{"type":"string","description":"Cosmos protocol\n\n`cosmos`","enum":["cosmos"]},"network":{"type":"string","description":"Cosmos network\n\n`mainnet` `testnet`","enum":["mainnet","testnet"]},"currency":{"type":"string","description":"Denomination of the cryptocurrency Cosmos.","pattern":"^[1-9]\\d+$","examples":["100"]},"amount":{"type":"string","pattern":"^[1-9]\\d+$","examples":["123456"]},"wallets":{"type":"array","items":{"type":"object","description":"Amount per wallet","required":["wallet","amount","validator"],"properties":{"wallet":{"type":"string"},"amount":{"type":"string","pattern":"^[1-9]\\d+$"},"validator":{"type":"string"}}}}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"400":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[400],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["Detailed human-readable diagnostic message regarding any invalid request parameters"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"401":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[401],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A human-readable diagnostic message detailing any authorization failure"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"500":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[500],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A descriptive error message"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"}}} as const
;
const GetCosmosDeactivationIntents = {"metadata":{"allOf":[{"type":"object","properties":{"network":{"type":"string","description":"Cosmos network","enum":["mainnet","testnet"],"$schema":"https://json-schema.org/draft/2020-12/schema#"}},"required":["network"]}]},"response":{"200":{"type":"object","description":"Deactivation intents","required":["protocol","network","customer_id"],"properties":{"protocol":{"type":"string","description":"Blockchain protocol.\n\n`ethereum` `polkadot` `solana` `cosmos` `polygon` `near` `cardano` `avalanche` `binance`","enum":["ethereum","polkadot","solana","cosmos","polygon","near","cardano","avalanche","binance"]},"network":{"type":"string","description":"Protocol-specific network.\n\n`mainnet` `localnet` `goerli` `prater` `holesky` `testnet` `devnet` `kusama` `westend` `preprod` `fuji` `local`","enum":["mainnet","localnet","goerli","prater","holesky","testnet","devnet","kusama","westend","preprod","fuji","local"]},"polygon":{"type":"object","required":["items","wallet_address"],"properties":{"items":{"type":"array","items":{"type":"object","description":"Unbond information","required":["nonce","amount","withdraw_epoch"],"properties":{"nonce":{"type":"integer","description":"Number for one use only","examples":[1]},"amount":{"type":"string","description":"Denomination of the cryptocurrency Polygon.","pattern":"^[1-9]\\d+$","examples":["100"]},"withdraw_epoch":{"type":"integer"}}}},"wallet_address":{"type":"string","description":"Hex-encoded Ethereum [account or smart contract address](https://ethereum.org/en/developers/docs/accounts/).","format":"hex","pattern":"^0x[a-fA-F0-9]{40}$","examples":["0x00000000219ab540356cBB839Cbe05303d7705Fa"]}}},"solana":{"description":"List of deactivation intents","type":"array","items":{"type":"object","required":["customer_id","deactivate_intent_id","network","protocol","solana"],"description":"Response to a new deactivation intent request.","properties":{"deactivate_intent_id":{"type":"string","format":"uuid","description":"Unique idenifier for deactivate intent.","examples":["4ba06e89-8c29-483e-ac36-318de5aa7364"]},"customer_id":{"type":"string","description":"Unique identifier for a customer","minimum":1,"examples":["SatoshiNakamoto-xUYJbPw9hw"]},"protocol":{"type":"string","description":"Solana protocol\n\n`solana`","enum":["solana"]},"network":{"type":"string","description":"Solana network\n\n`mainnet` `testnet`","enum":["mainnet","testnet"]},"solana":{"type":"object","description":"Result of the new Deactivate Intent request.","required":["total_deactivated_amount","deactivates","splits"],"properties":{"deactivates":{"type":"array","items":{"type":"object","description":"Result of the deactivation transaction request","required":["unsigned_transaction","stake_account_authority","stake_account_address","withdrawal_authority","stake_id","amount","expiration_time"],"properties":{"unsigned_transaction":{"type":"string","format":"base64","description":"Generated unsigned transaction smart contract call data.","examples":["0x22895118000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000120087fed394b43849eebef1e88873cd9efdbe33136656e5148e659b8b2f33625d40000000000000000000000000000000000000000000000000000000000000030b81748644e23c4d950f9dd709f3eb73d5eacd9657997e1d9dde7c4ebd8a6519ecb9d0a7fb603d3b68e023278f9650122000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020010000000000000000000000c509bb854c526af4cee5e037089f7aa8e091d8870000000000000000000000000000000000000000000000000000000000000060b36b79b4b206c0310472c117fa40c05342b5dc3e89f98f42c9da3ce6450d4c603cad55248017fd4eca3ab277cca64569193e4d487f5b2ea78a2bcdc81926c313c05842a3af318967a775783bba22519e8b8886587efa99aa7dab5784f792b187\n"]},"stake_account_authority":{"type":"string","description":"Public Key of an asymmetric key-pair.","format":"base58","pattern":"^[1-9A-HJ-NP-Za-km-z]{44}$","examples":["5xot9PVkphiX2adznghwrAuxGs2zeWisNSxMW6hU6Hkj"]},"stake_account_address":{"type":"string","description":"Public Key of an asymmetric key-pair.","format":"base58","pattern":"^[1-9A-HJ-NP-Za-km-z]{44}$","examples":["5xot9PVkphiX2adznghwrAuxGs2zeWisNSxMW6hU6Hkj"]},"withdrawal_authority":{"type":"string","description":"Public Key of an asymmetric key-pair.","format":"base58","pattern":"^[1-9A-HJ-NP-Za-km-z]{44}$","examples":["5xot9PVkphiX2adznghwrAuxGs2zeWisNSxMW6hU6Hkj"]},"stake_id":{"description":"Unique stake identifier.","type":"string","format":"base58","examples":["stake_Wgx98Rbi8nQuL9ddn3mTk1"]},"amount":{"type":"string","description":"Denomination of the cryptocurrency Solana.","pattern":"^[1-9]\\d+$","examples":["100"]},"expiration_time":{"type":"integer","description":"Transaction expiration time","format":"int64","examples":[1689939023],"minimum":-9223372036854776000,"maximum":9223372036854776000}}}},"splits":{"type":"array","items":{"type":"object","description":"Result of the split transaction request","required":["unsigned_transaction","stake_account_authority","new_stake_account_address","new_stake_id","splitted_stake_account_address","splitted_stake_id","amount"],"properties":{"unsigned_transaction":{"type":"string","format":"base64","description":"Generated unsigned transaction smart contract call data.","examples":["0x22895118000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000120087fed394b43849eebef1e88873cd9efdbe33136656e5148e659b8b2f33625d40000000000000000000000000000000000000000000000000000000000000030b81748644e23c4d950f9dd709f3eb73d5eacd9657997e1d9dde7c4ebd8a6519ecb9d0a7fb603d3b68e023278f9650122000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020010000000000000000000000c509bb854c526af4cee5e037089f7aa8e091d8870000000000000000000000000000000000000000000000000000000000000060b36b79b4b206c0310472c117fa40c05342b5dc3e89f98f42c9da3ce6450d4c603cad55248017fd4eca3ab277cca64569193e4d487f5b2ea78a2bcdc81926c313c05842a3af318967a775783bba22519e8b8886587efa99aa7dab5784f792b187\n"]},"stake_account_authority":{"type":"string","description":"Public Key of an asymmetric key-pair.","format":"base58","pattern":"^[1-9A-HJ-NP-Za-km-z]{44}$","examples":["5xot9PVkphiX2adznghwrAuxGs2zeWisNSxMW6hU6Hkj"]},"new_stake_account_address":{"type":"string","description":"Public Key of an asymmetric key-pair.","format":"base58","pattern":"^[1-9A-HJ-NP-Za-km-z]{44}$","examples":["5xot9PVkphiX2adznghwrAuxGs2zeWisNSxMW6hU6Hkj"]},"new_stake_id":{"description":"Unique stake identifier.","type":"string","format":"base58","examples":["stake_Wgx98Rbi8nQuL9ddn3mTk1"]},"splitted_stake_account_address":{"type":"string","description":"Public Key of an asymmetric key-pair.","format":"base58","pattern":"^[1-9A-HJ-NP-Za-km-z]{44}$","examples":["5xot9PVkphiX2adznghwrAuxGs2zeWisNSxMW6hU6Hkj"]},"splitted_stake_id":{"description":"Unique stake identifier.","type":"string","format":"base58","examples":["stake_Wgx98Rbi8nQuL9ddn3mTk1"]},"amount":{"type":"string","description":"Denomination of the cryptocurrency Solana.","pattern":"^[1-9]\\d+$","examples":["100"]}}}},"total_deactivated_amount":{"type":"string","description":"Denomination of the cryptocurrency Solana.","pattern":"^[1-9]\\d+$","examples":["100"]}}}}}},"near":{"type":"array","description":"List of deactivation intents","items":{"type":"object","required":["customer_id","deactivate_intent_id","near","network","protocol"],"description":"Response to a new deactivation intent request.","properties":{"deactivate_intent_id":{"type":"string","format":"uuid","description":"Unique idenifier for deactivate intent.","examples":["4ba06e89-8c29-483e-ac36-318de5aa7364"]},"customer_id":{"type":"string","description":"Unique identifier for a customer","minimum":1,"examples":["SatoshiNakamoto-xUYJbPw9hw"]},"protocol":{"type":"string","description":"Near protocol\n\n`near`","enum":["near"]},"network":{"type":"string","description":"NEAR network\n\n`mainnet` `testnet` `localnet`","enum":["mainnet","testnet","localnet"]},"near":{"type":"object","description":"NEAR Protocol Deactivate Intent","required":["to","unsigned_transaction","amount","wallet_address","public_key","expiration_time"],"properties":{"to":{"type":"string","description":"Base58 encoded public key or registered named account. [Accounts](https://docs.near.org/concepts/basics/accounts/account-id/).","pattern":"^([a-km-zA-HJ-NP-Z1-9]{22,44})|((([a-z\\d]+[-_])*[a-z\\d]+\\.)*([a-z\\d]+[-_])*[a-z\\d]+)$","examples":["alice.near"]},"unsigned_transaction":{"type":"string","format":"base64","description":"Generated unsigned transaction smart contract call data.","examples":["0x22895118000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000120087fed394b43849eebef1e88873cd9efdbe33136656e5148e659b8b2f33625d40000000000000000000000000000000000000000000000000000000000000030b81748644e23c4d950f9dd709f3eb73d5eacd9657997e1d9dde7c4ebd8a6519ecb9d0a7fb603d3b68e023278f9650122000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020010000000000000000000000c509bb854c526af4cee5e037089f7aa8e091d8870000000000000000000000000000000000000000000000000000000000000060b36b79b4b206c0310472c117fa40c05342b5dc3e89f98f42c9da3ce6450d4c603cad55248017fd4eca3ab277cca64569193e4d487f5b2ea78a2bcdc81926c313c05842a3af318967a775783bba22519e8b8886587efa99aa7dab5784f792b187\n"]},"amount":{"type":"string","description":"Denomination of NEAR Protocol.","pattern":"^[1-9]\\d+$","examples":["100000000000000000000000000"]},"wallet_address":{"type":"string","description":"Base58 encoded public key or registered named account. [Accounts](https://docs.near.org/concepts/basics/accounts/account-id/).","pattern":"^([a-km-zA-HJ-NP-Z1-9]{22,44})|((([a-z\\d]+[-_])*[a-z\\d]+\\.)*([a-z\\d]+[-_])*[a-z\\d]+)$","examples":["alice.near"]},"public_key":{"type":"string","description":"Base58 encoded public key prefixed by ed25519, associated with the private key that will be used to sign the transaction.","pattern":"^ed25519:[a-km-zA-HJ-NP-Z1-9]{22,44}$","examples":["ed25519:Cxg2wgFYrdLTEkMu6j5D6aEZqTb3kXbmJygS48ZKbo1S"]},"expiration_time":{"type":"integer","description":"Transaction expiration time","format":"int64","examples":[1689939023],"minimum":-9223372036854776000,"maximum":9223372036854776000}}}}}},"cardano":{"type":"array","description":"List of deactivation intents","items":{"type":"object","description":"Cardano Protocol Deactivate Intent","required":["deactivate_intent_id","base_address","unsigned_transaction"],"properties":{"deactivate_intent_id":{"type":"string","format":"uuid","description":"Unique idenifier for deactivate intent.","examples":["4ba06e89-8c29-483e-ac36-318de5aa7364"]},"base_address":{"type":"string","description":"bech32 encoded base address. [Accounts](https://cips.cardano.org/cips/cip19/).","format":"bech32","examples":["addr1vpu5vlrf4xkxv2qpwngf6cjhtw542ayty80v8dyr49rf5eg0yu80w"]},"unsigned_transaction":{"type":"string","format":"base64","description":"Generated unsigned transaction smart contract call data.","examples":["0x22895118000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000120087fed394b43849eebef1e88873cd9efdbe33136656e5148e659b8b2f33625d40000000000000000000000000000000000000000000000000000000000000030b81748644e23c4d950f9dd709f3eb73d5eacd9657997e1d9dde7c4ebd8a6519ecb9d0a7fb603d3b68e023278f9650122000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020010000000000000000000000c509bb854c526af4cee5e037089f7aa8e091d8870000000000000000000000000000000000000000000000000000000000000060b36b79b4b206c0310472c117fa40c05342b5dc3e89f98f42c9da3ce6450d4c603cad55248017fd4eca3ab277cca64569193e4d487f5b2ea78a2bcdc81926c313c05842a3af318967a775783bba22519e8b8886587efa99aa7dab5784f792b187\n"]}}}},"cosmos":{"type":"array","description":"List of deactivation intents","items":{"type":"object","required":["cosmos","customer_id","deactivate_intent_id","network","protocol"],"description":"Response to a new deactivation intent request.","properties":{"deactivate_intent_id":{"type":"string","format":"uuid","description":"Unique idenifier for deactivate intent.","examples":["4ba06e89-8c29-483e-ac36-318de5aa7364"]},"customer_id":{"type":"string","description":"Unique identifier for a customer","minimum":1,"examples":["SatoshiNakamoto-xUYJbPw9hw"]},"protocol":{"type":"string","description":"Cosmos protocol\n\n`cosmos`","enum":["cosmos"]},"network":{"type":"string","description":"Cosmos network\n\n`mainnet` `testnet`","enum":["mainnet","testnet"]},"cosmos":{"type":"object","description":"Cosmos Deactivate Intent","required":["unsigned_transaction","delegator_address","validator_address","amount"],"properties":{"unsigned_transaction":{"type":"string","format":"base64","description":"Generated unsigned transaction smart contract call data.","examples":["0x22895118000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000120087fed394b43849eebef1e88873cd9efdbe33136656e5148e659b8b2f33625d40000000000000000000000000000000000000000000000000000000000000030b81748644e23c4d950f9dd709f3eb73d5eacd9657997e1d9dde7c4ebd8a6519ecb9d0a7fb603d3b68e023278f9650122000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020010000000000000000000000c509bb854c526af4cee5e037089f7aa8e091d8870000000000000000000000000000000000000000000000000000000000000060b36b79b4b206c0310472c117fa40c05342b5dc3e89f98f42c9da3ce6450d4c603cad55248017fd4eca3ab277cca64569193e4d487f5b2ea78a2bcdc81926c313c05842a3af318967a775783bba22519e8b8886587efa99aa7dab5784f792b187\n"]},"delegator_address":{"type":"string","description":"Public Key of an asymmetric key-pair.","format":"bech32","pattern":"^cosmos[1-9a-zA-Z]{39}$","examples":["cosmos1wvvhhfm387xvfnqshmdaunnpujjrdxznr5d5x9"]},"validator_address":{"type":"string","description":"Public Key of an asymmetric key-pair.","format":"bech32","pattern":"^cosmos[1-9a-zA-Z]{39}$","examples":["cosmos1wvvhhfm387xvfnqshmdaunnpujjrdxznr5d5x9"]},"amount":{"type":"string","description":"Denomination of the cryptocurrency Cosmos.","pattern":"^[1-9]\\d+$","examples":["100"]}}}}}},"binance":{"type":"array","description":"List of deactivation intents","items":{"type":"object","required":["binance","customer_id","deactivate_intent_id","network","protocol"],"description":"Response to a new deactivation intent request.","properties":{"deactivate_intent_id":{"type":"string","format":"uuid","description":"Unique idenifier for deactivate intent.","examples":["4ba06e89-8c29-483e-ac36-318de5aa7364"]},"customer_id":{"type":"string","description":"Unique identifier for a customer","minimum":1,"examples":["SatoshiNakamoto-xUYJbPw9hw"]},"protocol":{"type":"string","description":"Binance beacon chain protocol\n\n`binance`","enum":["binance"]},"network":{"type":"string","description":"Binance beacon chain network\n\n`mainnet` `testnet`","enum":["mainnet","testnet"]},"binance":{"type":"object","description":"Binance Deactivate Intent","required":["unsigned_transaction","delegator_address","validator_address","amount"],"properties":{"unsigned_transaction":{"type":"string","format":"base64","description":"Generated unsigned transaction smart contract call data.","examples":["0x22895118000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000120087fed394b43849eebef1e88873cd9efdbe33136656e5148e659b8b2f33625d40000000000000000000000000000000000000000000000000000000000000030b81748644e23c4d950f9dd709f3eb73d5eacd9657997e1d9dde7c4ebd8a6519ecb9d0a7fb603d3b68e023278f9650122000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020010000000000000000000000c509bb854c526af4cee5e037089f7aa8e091d8870000000000000000000000000000000000000000000000000000000000000060b36b79b4b206c0310472c117fa40c05342b5dc3e89f98f42c9da3ce6450d4c603cad55248017fd4eca3ab277cca64569193e4d487f5b2ea78a2bcdc81926c313c05842a3af318967a775783bba22519e8b8886587efa99aa7dab5784f792b187\n"]},"delegator_address":{"type":"string","description":"Binance beacon chain address.","format":"bech32","pattern":"^bnb[0-9a-z]+$","examples":["bnb13ym5szfmwh0wz9j8wr2lu2gaml94h895u9el2e"]},"validator_address":{"type":"string","description":"Binance beacon chain validator address.","format":"bech32","pattern":"^bva[0-9a-zA-Z]*$","examples":["bva1mrpf5n5e5knn3z9qng5pnex3m9pvyhg6434j0t"]},"amount":{"type":"string","description":"The smallest denomination of Binance Coin (BNB) is called Jager. 1 Jager =0.00000001 BNB.","pattern":"^[1-9]\\d+$","examples":["10000000000"]}}}}}},"customer_id":{"type":"string","description":"Unique identifier for a customer","minimum":1,"examples":["SatoshiNakamoto-xUYJbPw9hw"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"400":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[400],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["Detailed human-readable diagnostic message regarding any invalid request parameters"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"401":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[401],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A human-readable diagnostic message detailing any authorization failure"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"500":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[500],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A descriptive error message"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"}}} as const
;
const GetCosmosRestakeIntents = {"metadata":{"allOf":[{"type":"object","properties":{"network":{"type":"string","description":"Cosmos network","enum":["mainnet","testnet"],"$schema":"https://json-schema.org/draft/2020-12/schema#"}},"required":["network"]}]},"response":{"200":{"type":"object","description":"Restake intents","required":["protocol","network","customer_id"],"properties":{"protocol":{"type":"string","description":"Blockchain protocol.\n\n`ethereum` `polkadot` `solana` `cosmos` `polygon` `near` `cardano` `avalanche` `binance`","enum":["ethereum","polkadot","solana","cosmos","polygon","near","cardano","avalanche","binance"]},"network":{"type":"string","description":"Protocol-specific network.\n\n`mainnet` `localnet` `goerli` `prater` `holesky` `testnet` `devnet` `kusama` `westend` `preprod` `fuji` `local`","enum":["mainnet","localnet","goerli","prater","holesky","testnet","devnet","kusama","westend","preprod","fuji","local"]},"cosmos":{"type":"array","description":"List of restake intents","items":{"type":"object","required":["cosmos","customer_id","network","protocol","restake_intent_id"],"description":"Response to a new restake intent request.","properties":{"restake_intent_id":{"type":"string","format":"uuid","description":"Unique idenifier for a restake intent.","examples":["4ba06e89-8c29-483e-ac36-318de5aa7364"]},"customer_id":{"type":"string","description":"Unique identifier for a customer","minimum":1,"examples":["SatoshiNakamoto-xUYJbPw9hw"]},"protocol":{"type":"string","description":"Cosmos protocol\n\n`cosmos`","enum":["cosmos"]},"network":{"type":"string","description":"Cosmos network\n\n`mainnet` `testnet`","enum":["mainnet","testnet"]},"cosmos":{"type":"object","description":"Cosmos Restake Intent","required":["unsigned_transaction","delegator_address","old_validator_address","new_validator_address","amount"],"properties":{"unsigned_transaction":{"type":"string","format":"base64","description":"Generated unsigned transaction smart contract call data.","examples":["0x22895118000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000120087fed394b43849eebef1e88873cd9efdbe33136656e5148e659b8b2f33625d40000000000000000000000000000000000000000000000000000000000000030b81748644e23c4d950f9dd709f3eb73d5eacd9657997e1d9dde7c4ebd8a6519ecb9d0a7fb603d3b68e023278f9650122000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020010000000000000000000000c509bb854c526af4cee5e037089f7aa8e091d8870000000000000000000000000000000000000000000000000000000000000060b36b79b4b206c0310472c117fa40c05342b5dc3e89f98f42c9da3ce6450d4c603cad55248017fd4eca3ab277cca64569193e4d487f5b2ea78a2bcdc81926c313c05842a3af318967a775783bba22519e8b8886587efa99aa7dab5784f792b187\n"]},"delegator_address":{"type":"string","description":"Public Key of an asymmetric key-pair.","format":"bech32","pattern":"^cosmos[1-9a-zA-Z]{39}$","examples":["cosmos1wvvhhfm387xvfnqshmdaunnpujjrdxznr5d5x9"]},"old_validator_address":{"type":"string","description":"Public Key of an asymmetric key-pair.","format":"bech32","pattern":"^cosmos[1-9a-zA-Z]{39}$","examples":["cosmos1wvvhhfm387xvfnqshmdaunnpujjrdxznr5d5x9"]},"new_validator_address":{"type":"string","description":"Public Key of an asymmetric key-pair.","format":"bech32","pattern":"^cosmos[1-9a-zA-Z]{39}$","examples":["cosmos1wvvhhfm387xvfnqshmdaunnpujjrdxznr5d5x9"]},"amount":{"type":"string","description":"Denomination of the cryptocurrency Cosmos.","pattern":"^[1-9]\\d+$","examples":["100"]}}}}}},"binance":{"type":"array","description":"List of restake intents","items":{"type":"object","required":["binance","customer_id","network","protocol","restake_intent_id"],"description":"Response to a new restake intent request.","properties":{"restake_intent_id":{"type":"string","format":"uuid","description":"Unique idenifier for a restake intent.","examples":["4ba06e89-8c29-483e-ac36-318de5aa7364"]},"customer_id":{"type":"string","description":"Unique identifier for a customer","minimum":1,"examples":["SatoshiNakamoto-xUYJbPw9hw"]},"protocol":{"type":"string","description":"Binance beacon chain protocol\n\n`binance`","enum":["binance"]},"network":{"type":"string","description":"Binance beacon chain network\n\n`mainnet` `testnet`","enum":["mainnet","testnet"]},"binance":{"type":"object","description":"Binance Restake Intent","required":["unsigned_transaction","delegator_address","old_validator_address","new_validator_address","amount"],"properties":{"unsigned_transaction":{"type":"string","format":"base64","description":"Generated unsigned transaction smart contract call data.","examples":["0x22895118000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000120087fed394b43849eebef1e88873cd9efdbe33136656e5148e659b8b2f33625d40000000000000000000000000000000000000000000000000000000000000030b81748644e23c4d950f9dd709f3eb73d5eacd9657997e1d9dde7c4ebd8a6519ecb9d0a7fb603d3b68e023278f9650122000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020010000000000000000000000c509bb854c526af4cee5e037089f7aa8e091d8870000000000000000000000000000000000000000000000000000000000000060b36b79b4b206c0310472c117fa40c05342b5dc3e89f98f42c9da3ce6450d4c603cad55248017fd4eca3ab277cca64569193e4d487f5b2ea78a2bcdc81926c313c05842a3af318967a775783bba22519e8b8886587efa99aa7dab5784f792b187\n"]},"delegator_address":{"type":"string","description":"Binance beacon chain address.","format":"bech32","pattern":"^bnb[0-9a-z]+$","examples":["bnb13ym5szfmwh0wz9j8wr2lu2gaml94h895u9el2e"]},"old_validator_address":{"type":"string","description":"Binance beacon chain validator address.","format":"bech32","pattern":"^bva[0-9a-zA-Z]*$","examples":["bva1mrpf5n5e5knn3z9qng5pnex3m9pvyhg6434j0t"]},"new_validator_address":{"type":"string","description":"Binance beacon chain validator address.","format":"bech32","pattern":"^bva[0-9a-zA-Z]*$","examples":["bva1mrpf5n5e5knn3z9qng5pnex3m9pvyhg6434j0t"]},"amount":{"type":"string","description":"The smallest denomination of Binance Coin (BNB) is called Jager. 1 Jager =0.00000001 BNB.","pattern":"^[1-9]\\d+$","examples":["10000000000"]}}}}}},"customer_id":{"type":"string","description":"Unique identifier for a customer","minimum":1,"examples":["SatoshiNakamoto-xUYJbPw9hw"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"400":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[400],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["Detailed human-readable diagnostic message regarding any invalid request parameters"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"401":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[401],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A human-readable diagnostic message detailing any authorization failure"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"500":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[500],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A descriptive error message"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"}}} as const
;
const GetCosmosWithdrawableRewardsAmount = {"metadata":{"allOf":[{"type":"object","properties":{"network":{"type":"string","description":"Cosmos network","enum":["mainnet","testnet"],"$schema":"https://json-schema.org/draft/2020-12/schema#"}},"required":["network"]},{"type":"object","properties":{"wallets":{"type":"array","items":{"type":"string","description":"Public Key of an asymmetric key-pair.","format":"bech32","pattern":"^cosmos[1-9a-zA-Z]{39}$","examples":["cosmos1wvvhhfm387xvfnqshmdaunnpujjrdxznr5d5x9"]},"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"Array of Cosmos wallets"}},"required":[]}]},"response":{"200":{"type":"object","description":"The withdrawable rewards amount","required":["protocol","network","amount","currency"],"properties":{"protocol":{"type":"string","description":"Cosmos protocol\n\n`cosmos`","enum":["cosmos"]},"network":{"type":"string","description":"Cosmos network\n\n`mainnet` `testnet`","enum":["mainnet","testnet"]},"currency":{"type":"string","description":"Denomination of the cryptocurrency Cosmos.","pattern":"^[1-9]\\d+$","examples":["100"]},"amount":{"type":"string","pattern":"^[1-9]\\d+$","examples":["123456"]},"wallets":{"type":"array","items":{"type":"object","description":"Amount per wallet","required":["wallet","amount","validator"],"properties":{"wallet":{"type":"string"},"amount":{"type":"string","pattern":"^[1-9]\\d+$"},"validator":{"type":"string"}}}}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"400":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[400],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["Detailed human-readable diagnostic message regarding any invalid request parameters"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"401":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[401],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A human-readable diagnostic message detailing any authorization failure"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"500":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[500],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A descriptive error message"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"}}} as const
;
const GetNearDeactivatableAmount = {"metadata":{"allOf":[{"type":"object","properties":{"network":{"type":"string","description":"NEAR network","enum":["mainnet","testnet","localnet"],"$schema":"https://json-schema.org/draft/2020-12/schema#"}},"required":["network"]},{"type":"object","properties":{"wallets":{"type":"array","items":{"type":"string","description":"Base58 encoded public key or registered named account. [Accounts](https://docs.near.org/concepts/basics/accounts/account-id/).","pattern":"^([a-km-zA-HJ-NP-Z1-9]{22,44})|((([a-z\\d]+[-_])*[a-z\\d]+\\.)*([a-z\\d]+[-_])*[a-z\\d]+)$","examples":["alice.near"]},"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"Array of NEAR wallets"}},"required":[]}]},"response":{"200":{"type":"object","description":"The deactivatable amount","required":["protocol","network","amount","currency"],"properties":{"protocol":{"type":"string","description":"Near protocol\n\n`near`","enum":["near"]},"network":{"type":"string","description":"NEAR network\n\n`mainnet` `testnet` `localnet`","enum":["mainnet","testnet","localnet"]},"currency":{"type":"string","description":"Denomination of NEAR Protocol.","pattern":"^[1-9]\\d+$","examples":["100000000000000000000000000"]},"amount":{"type":"string","pattern":"^[1-9]\\d+$","examples":["123456"]},"wallets":{"type":"array","items":{"type":"object","description":"Amount per wallet","required":["wallet","amount","validator"],"properties":{"wallet":{"type":"string"},"amount":{"type":"string","pattern":"^[1-9]\\d+$"},"validator":{"type":"string"}}}}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"400":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[400],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["Detailed human-readable diagnostic message regarding any invalid request parameters"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"401":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[401],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A human-readable diagnostic message detailing any authorization failure"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"500":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[500],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A descriptive error message"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"}}} as const
;
const GetNearDeactivationIntents = {"metadata":{"allOf":[{"type":"object","properties":{"network":{"type":"string","description":"NEAR network","enum":["mainnet","testnet","localnet"],"$schema":"https://json-schema.org/draft/2020-12/schema#"}},"required":["network"]}]},"response":{"200":{"type":"object","description":"Deactivation intents","required":["protocol","network","customer_id"],"properties":{"protocol":{"type":"string","description":"Near protocol\n\n`near`","enum":["near"]},"network":{"type":"string","description":"NEAR network\n\n`mainnet` `testnet` `localnet`","enum":["mainnet","testnet","localnet"]},"near":{"type":"array","description":"List of deactivation intents","items":{"type":"object","required":["customer_id","deactivate_intent_id","near","network","protocol"],"description":"Response to a new deactivation intent request.","properties":{"deactivate_intent_id":{"type":"string","format":"uuid","description":"Unique idenifier for deactivate intent.","examples":["4ba06e89-8c29-483e-ac36-318de5aa7364"]},"customer_id":{"type":"string","description":"Unique identifier for a customer","minimum":1,"examples":["SatoshiNakamoto-xUYJbPw9hw"]},"protocol":{"type":"string","description":"Near protocol\n\n`near`","enum":["near"]},"network":{"type":"string","description":"NEAR network\n\n`mainnet` `testnet` `localnet`","enum":["mainnet","testnet","localnet"]},"near":{"type":"object","description":"NEAR Protocol Deactivate Intent","required":["to","unsigned_transaction","amount","wallet_address","public_key","expiration_time"],"properties":{"to":{"type":"string","description":"Base58 encoded public key or registered named account. [Accounts](https://docs.near.org/concepts/basics/accounts/account-id/).","pattern":"^([a-km-zA-HJ-NP-Z1-9]{22,44})|((([a-z\\d]+[-_])*[a-z\\d]+\\.)*([a-z\\d]+[-_])*[a-z\\d]+)$","examples":["alice.near"]},"unsigned_transaction":{"type":"string","format":"base64","description":"Generated unsigned transaction smart contract call data.","examples":["0x22895118000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000120087fed394b43849eebef1e88873cd9efdbe33136656e5148e659b8b2f33625d40000000000000000000000000000000000000000000000000000000000000030b81748644e23c4d950f9dd709f3eb73d5eacd9657997e1d9dde7c4ebd8a6519ecb9d0a7fb603d3b68e023278f9650122000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020010000000000000000000000c509bb854c526af4cee5e037089f7aa8e091d8870000000000000000000000000000000000000000000000000000000000000060b36b79b4b206c0310472c117fa40c05342b5dc3e89f98f42c9da3ce6450d4c603cad55248017fd4eca3ab277cca64569193e4d487f5b2ea78a2bcdc81926c313c05842a3af318967a775783bba22519e8b8886587efa99aa7dab5784f792b187\n"]},"amount":{"type":"string","description":"Denomination of NEAR Protocol.","pattern":"^[1-9]\\d+$","examples":["100000000000000000000000000"]},"wallet_address":{"type":"string","description":"Base58 encoded public key or registered named account. [Accounts](https://docs.near.org/concepts/basics/accounts/account-id/).","pattern":"^([a-km-zA-HJ-NP-Z1-9]{22,44})|((([a-z\\d]+[-_])*[a-z\\d]+\\.)*([a-z\\d]+[-_])*[a-z\\d]+)$","examples":["alice.near"]},"public_key":{"type":"string","description":"Base58 encoded public key prefixed by ed25519, associated with the private key that will be used to sign the transaction.","pattern":"^ed25519:[a-km-zA-HJ-NP-Z1-9]{22,44}$","examples":["ed25519:Cxg2wgFYrdLTEkMu6j5D6aEZqTb3kXbmJygS48ZKbo1S"]},"expiration_time":{"type":"integer","description":"Transaction expiration time","format":"int64","examples":[1689939023],"minimum":-9223372036854776000,"maximum":9223372036854776000}}}}}},"customer_id":{"type":"string","description":"Unique identifier for a customer","minimum":1,"examples":["SatoshiNakamoto-xUYJbPw9hw"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"400":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[400],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["Detailed human-readable diagnostic message regarding any invalid request parameters"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"401":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[401],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A human-readable diagnostic message detailing any authorization failure"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"500":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[500],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A descriptive error message"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"}}} as const
;
const GetNearWithdrawableAmount = {"metadata":{"allOf":[{"type":"object","properties":{"network":{"type":"string","description":"NEAR network","enum":["mainnet","testnet","localnet"],"$schema":"https://json-schema.org/draft/2020-12/schema#"}},"required":["network"]},{"type":"object","properties":{"wallets":{"type":"array","items":{"type":"string","description":"Base58 encoded public key or registered named account. [Accounts](https://docs.near.org/concepts/basics/accounts/account-id/).","pattern":"^([a-km-zA-HJ-NP-Z1-9]{22,44})|((([a-z\\d]+[-_])*[a-z\\d]+\\.)*([a-z\\d]+[-_])*[a-z\\d]+)$","examples":["alice.near"]},"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"Array of NEAR wallets"}},"required":[]}]},"response":{"200":{"type":"object","description":"Result of the get withdrawable amount","required":["protocol","network","amount","currency"],"properties":{"protocol":{"type":"string","description":"Near protocol\n\n`near`","enum":["near"]},"network":{"type":"string","description":"NEAR network\n\n`mainnet` `testnet` `localnet`","enum":["mainnet","testnet","localnet"]},"currency":{"type":"string","description":"Denomination of NEAR Protocol.","pattern":"^[1-9]\\d+$","examples":["100000000000000000000000000"]},"amount":{"type":"string","pattern":"^[1-9]\\d+$","examples":["123456"]},"wallets":{"type":"array","items":{"type":"object","description":"Amount per wallet","required":["wallet","amount","validator"],"properties":{"wallet":{"type":"string"},"amount":{"type":"string","pattern":"^[1-9]\\d+$"},"validator":{"type":"string"}}}}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"400":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[400],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["Detailed human-readable diagnostic message regarding any invalid request parameters"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"401":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[401],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A human-readable diagnostic message detailing any authorization failure"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"500":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[500],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A descriptive error message"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"}}} as const
;
const GetNearWithdrawalIntents = {"metadata":{"allOf":[{"type":"object","properties":{"network":{"type":"string","description":"NEAR network","enum":["mainnet","testnet","localnet"],"$schema":"https://json-schema.org/draft/2020-12/schema#"}},"required":["network"]}]},"response":{"200":{"type":"object","description":"Withdrawal intents","required":["protocol","network","customer_id"],"properties":{"protocol":{"type":"string","description":"Near protocol\n\n`near`","enum":["near"]},"network":{"type":"string","description":"NEAR network\n\n`mainnet` `testnet` `localnet`","enum":["mainnet","testnet","localnet"]},"near":{"type":"array","description":"List of withdrawal intents","items":{"type":"object","description":"NEAR Protocol Withdrawal Intent","required":["to","unsigned_transaction","wallet_address","public_key","withdrawal_intent_id","expiration_time"],"properties":{"withdrawal_intent_id":{"type":"string","format":"uuid","description":"Unique idenifier for deactivate intent.","examples":["4ba06e89-8c29-483e-ac36-318de5aa7364"]},"to":{"type":"string","description":"Base58 encoded public key or registered named account. [Accounts](https://docs.near.org/concepts/basics/accounts/account-id/).","pattern":"^([a-km-zA-HJ-NP-Z1-9]{22,44})|((([a-z\\d]+[-_])*[a-z\\d]+\\.)*([a-z\\d]+[-_])*[a-z\\d]+)$","examples":["alice.near"]},"unsigned_transaction":{"type":"string","format":"base64","description":"Generated unsigned transaction smart contract call data.","examples":["0x22895118000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000120087fed394b43849eebef1e88873cd9efdbe33136656e5148e659b8b2f33625d40000000000000000000000000000000000000000000000000000000000000030b81748644e23c4d950f9dd709f3eb73d5eacd9657997e1d9dde7c4ebd8a6519ecb9d0a7fb603d3b68e023278f9650122000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020010000000000000000000000c509bb854c526af4cee5e037089f7aa8e091d8870000000000000000000000000000000000000000000000000000000000000060b36b79b4b206c0310472c117fa40c05342b5dc3e89f98f42c9da3ce6450d4c603cad55248017fd4eca3ab277cca64569193e4d487f5b2ea78a2bcdc81926c313c05842a3af318967a775783bba22519e8b8886587efa99aa7dab5784f792b187\n"]},"amount":{"type":"string","description":"Denomination of NEAR Protocol.","pattern":"^[1-9]\\d+$","examples":["100000000000000000000000000"]},"wallet_address":{"type":"string","description":"Base58 encoded public key or registered named account. [Accounts](https://docs.near.org/concepts/basics/accounts/account-id/).","pattern":"^([a-km-zA-HJ-NP-Z1-9]{22,44})|((([a-z\\d]+[-_])*[a-z\\d]+\\.)*([a-z\\d]+[-_])*[a-z\\d]+)$","examples":["alice.near"]},"public_key":{"type":"string","description":"Base58 encoded public key prefixed by ed25519, associated with the private key that will be used to sign the transaction.","pattern":"^ed25519:[a-km-zA-HJ-NP-Z1-9]{22,44}$","examples":["ed25519:Cxg2wgFYrdLTEkMu6j5D6aEZqTb3kXbmJygS48ZKbo1S"]},"expiration_time":{"type":"integer","description":"Transaction expiration time","format":"int64","examples":[1689939023],"minimum":-9223372036854776000,"maximum":9223372036854776000}}}},"customer_id":{"type":"string","description":"Unique identifier for a customer","minimum":1,"examples":["SatoshiNakamoto-xUYJbPw9hw"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"400":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[400],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["Detailed human-readable diagnostic message regarding any invalid request parameters"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"401":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[401],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A human-readable diagnostic message detailing any authorization failure"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"500":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[500],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A descriptive error message"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"}}} as const
;
const GetPolygonDeactivationIntents = {"metadata":{"allOf":[{"type":"object","properties":{"network":{"type":"string","description":"Polygon network","enum":["mainnet","goerli","prater"],"$schema":"https://json-schema.org/draft/2020-12/schema#"}},"required":["network"]},{"type":"object","properties":{"wallet_address":{"type":"string","description":"User wallet address.","format":"hex","pattern":"^0x[a-fA-F0-9]{40}$","examples":["0x00000000219ab540356cBB839Cbe05303d7705Fa"],"$schema":"https://json-schema.org/draft/2020-12/schema#"}},"required":[]}]},"response":{"200":{"type":"object","description":"Deactivation intents","required":["protocol","network","customer_id"],"properties":{"protocol":{"type":"string","description":"Polygon protocol\n\n`polygon`","enum":["polygon"]},"network":{"type":"string","description":"Polygon network\n\n`mainnet` `goerli` `prater`","enum":["mainnet","goerli","prater"]},"polygon":{"type":"object","required":["items","wallet_address"],"properties":{"items":{"type":"array","items":{"type":"object","description":"Unbond information","required":["nonce","amount","withdraw_epoch"],"properties":{"nonce":{"type":"integer","description":"Number for one use only","examples":[1]},"amount":{"type":"string","description":"Denomination of the cryptocurrency Polygon.","pattern":"^[1-9]\\d+$","examples":["100"]},"withdraw_epoch":{"type":"integer"}}}},"wallet_address":{"type":"string","description":"Hex-encoded Ethereum [account or smart contract address](https://ethereum.org/en/developers/docs/accounts/).","format":"hex","pattern":"^0x[a-fA-F0-9]{40}$","examples":["0x00000000219ab540356cBB839Cbe05303d7705Fa"]}}},"customer_id":{"type":"string","description":"Unique identifier for a customer","minimum":1,"examples":["SatoshiNakamoto-xUYJbPw9hw"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"400":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[400],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["Detailed human-readable diagnostic message regarding any invalid request parameters"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"401":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[401],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A human-readable diagnostic message detailing any authorization failure"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"500":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[500],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A descriptive error message"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"}}} as const
;
const GetSolanaDeactivatableAmount = {"metadata":{"allOf":[{"type":"object","properties":{"network":{"type":"string","description":"Solana network","enum":["mainnet","testnet"],"$schema":"https://json-schema.org/draft/2020-12/schema#"}},"required":["network"]},{"type":"object","properties":{"delegator_address":{"type":"string","description":"A filter on the delegator address","format":"base58","pattern":"^[1-9A-HJ-NP-Za-km-z]{44}$","examples":["5xot9PVkphiX2adznghwrAuxGs2zeWisNSxMW6hU6Hkj"],"$schema":"https://json-schema.org/draft/2020-12/schema#"},"withdrawal_authority":{"type":"string","description":"A filter on the withdrawal authority address","format":"base58","pattern":"^[1-9A-HJ-NP-Za-km-z]{44}$","examples":["5xot9PVkphiX2adznghwrAuxGs2zeWisNSxMW6hU6Hkj"],"$schema":"https://json-schema.org/draft/2020-12/schema#"},"staking_authority":{"type":"string","description":"A filter on the staking authority address","format":"base58","pattern":"^[1-9A-HJ-NP-Za-km-z]{44}$","examples":["5xot9PVkphiX2adznghwrAuxGs2zeWisNSxMW6hU6Hkj"],"$schema":"https://json-schema.org/draft/2020-12/schema#"}},"required":[]}]},"response":{"200":{"type":"object","description":"The deactivatable amount","required":["protocol","network","amount","currency"],"properties":{"protocol":{"type":"string","description":"Solana protocol\n\n`solana`","enum":["solana"]},"network":{"type":"string","description":"Solana network\n\n`mainnet` `testnet`","enum":["mainnet","testnet"]},"currency":{"type":"string","description":"Denomination of the cryptocurrency Solana.","pattern":"^[1-9]\\d+$","examples":["100"]},"amount":{"type":"string","pattern":"^[1-9]\\d+$","examples":["123456"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"400":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[400],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["Detailed human-readable diagnostic message regarding any invalid request parameters"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"401":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[401],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A human-readable diagnostic message detailing any authorization failure"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"500":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[500],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A descriptive error message"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"}}} as const
;
const GetSolanaDeactivationIntents = {"metadata":{"allOf":[{"type":"object","properties":{"network":{"type":"string","description":"Solana network","enum":["mainnet","testnet"],"$schema":"https://json-schema.org/draft/2020-12/schema#"}},"required":["network"]},{"type":"object","properties":{"wallet_address":{"type":"string","description":"User wallet address.","format":"hex","pattern":"^0x[a-fA-F0-9]{40}$","examples":["0x00000000219ab540356cBB839Cbe05303d7705Fa"],"$schema":"https://json-schema.org/draft/2020-12/schema#"}},"required":[]}]},"response":{"200":{"type":"object","description":"Deactivation intents","required":["protocol","network","customer_id"],"properties":{"protocol":{"type":"string","description":"Solana protocol\n\n`solana`","enum":["solana"]},"network":{"type":"string","description":"Solana network\n\n`mainnet` `testnet`","enum":["mainnet","testnet"]},"solana":{"description":"List of deactivation intents","type":"array","items":{"type":"object","required":["customer_id","deactivate_intent_id","network","protocol","solana"],"description":"Response to a new deactivation intent request.","properties":{"deactivate_intent_id":{"type":"string","format":"uuid","description":"Unique idenifier for deactivate intent.","examples":["4ba06e89-8c29-483e-ac36-318de5aa7364"]},"customer_id":{"type":"string","description":"Unique identifier for a customer","minimum":1,"examples":["SatoshiNakamoto-xUYJbPw9hw"]},"protocol":{"type":"string","description":"Solana protocol\n\n`solana`","enum":["solana"]},"network":{"type":"string","description":"Solana network\n\n`mainnet` `testnet`","enum":["mainnet","testnet"]},"solana":{"type":"object","description":"Result of the new Deactivate Intent request.","required":["total_deactivated_amount","deactivates","splits"],"properties":{"deactivates":{"type":"array","items":{"type":"object","description":"Result of the deactivation transaction request","required":["unsigned_transaction","stake_account_authority","stake_account_address","withdrawal_authority","stake_id","amount","expiration_time"],"properties":{"unsigned_transaction":{"type":"string","format":"base64","description":"Generated unsigned transaction smart contract call data.","examples":["0x22895118000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000120087fed394b43849eebef1e88873cd9efdbe33136656e5148e659b8b2f33625d40000000000000000000000000000000000000000000000000000000000000030b81748644e23c4d950f9dd709f3eb73d5eacd9657997e1d9dde7c4ebd8a6519ecb9d0a7fb603d3b68e023278f9650122000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020010000000000000000000000c509bb854c526af4cee5e037089f7aa8e091d8870000000000000000000000000000000000000000000000000000000000000060b36b79b4b206c0310472c117fa40c05342b5dc3e89f98f42c9da3ce6450d4c603cad55248017fd4eca3ab277cca64569193e4d487f5b2ea78a2bcdc81926c313c05842a3af318967a775783bba22519e8b8886587efa99aa7dab5784f792b187\n"]},"stake_account_authority":{"type":"string","description":"Public Key of an asymmetric key-pair.","format":"base58","pattern":"^[1-9A-HJ-NP-Za-km-z]{44}$","examples":["5xot9PVkphiX2adznghwrAuxGs2zeWisNSxMW6hU6Hkj"]},"stake_account_address":{"type":"string","description":"Public Key of an asymmetric key-pair.","format":"base58","pattern":"^[1-9A-HJ-NP-Za-km-z]{44}$","examples":["5xot9PVkphiX2adznghwrAuxGs2zeWisNSxMW6hU6Hkj"]},"withdrawal_authority":{"type":"string","description":"Public Key of an asymmetric key-pair.","format":"base58","pattern":"^[1-9A-HJ-NP-Za-km-z]{44}$","examples":["5xot9PVkphiX2adznghwrAuxGs2zeWisNSxMW6hU6Hkj"]},"stake_id":{"description":"Unique stake identifier.","type":"string","format":"base58","examples":["stake_Wgx98Rbi8nQuL9ddn3mTk1"]},"amount":{"type":"string","description":"Denomination of the cryptocurrency Solana.","pattern":"^[1-9]\\d+$","examples":["100"]},"expiration_time":{"type":"integer","description":"Transaction expiration time","format":"int64","examples":[1689939023],"minimum":-9223372036854776000,"maximum":9223372036854776000}}}},"splits":{"type":"array","items":{"type":"object","description":"Result of the split transaction request","required":["unsigned_transaction","stake_account_authority","new_stake_account_address","new_stake_id","splitted_stake_account_address","splitted_stake_id","amount"],"properties":{"unsigned_transaction":{"type":"string","format":"base64","description":"Generated unsigned transaction smart contract call data.","examples":["0x22895118000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000120087fed394b43849eebef1e88873cd9efdbe33136656e5148e659b8b2f33625d40000000000000000000000000000000000000000000000000000000000000030b81748644e23c4d950f9dd709f3eb73d5eacd9657997e1d9dde7c4ebd8a6519ecb9d0a7fb603d3b68e023278f9650122000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020010000000000000000000000c509bb854c526af4cee5e037089f7aa8e091d8870000000000000000000000000000000000000000000000000000000000000060b36b79b4b206c0310472c117fa40c05342b5dc3e89f98f42c9da3ce6450d4c603cad55248017fd4eca3ab277cca64569193e4d487f5b2ea78a2bcdc81926c313c05842a3af318967a775783bba22519e8b8886587efa99aa7dab5784f792b187\n"]},"stake_account_authority":{"type":"string","description":"Public Key of an asymmetric key-pair.","format":"base58","pattern":"^[1-9A-HJ-NP-Za-km-z]{44}$","examples":["5xot9PVkphiX2adznghwrAuxGs2zeWisNSxMW6hU6Hkj"]},"new_stake_account_address":{"type":"string","description":"Public Key of an asymmetric key-pair.","format":"base58","pattern":"^[1-9A-HJ-NP-Za-km-z]{44}$","examples":["5xot9PVkphiX2adznghwrAuxGs2zeWisNSxMW6hU6Hkj"]},"new_stake_id":{"description":"Unique stake identifier.","type":"string","format":"base58","examples":["stake_Wgx98Rbi8nQuL9ddn3mTk1"]},"splitted_stake_account_address":{"type":"string","description":"Public Key of an asymmetric key-pair.","format":"base58","pattern":"^[1-9A-HJ-NP-Za-km-z]{44}$","examples":["5xot9PVkphiX2adznghwrAuxGs2zeWisNSxMW6hU6Hkj"]},"splitted_stake_id":{"description":"Unique stake identifier.","type":"string","format":"base58","examples":["stake_Wgx98Rbi8nQuL9ddn3mTk1"]},"amount":{"type":"string","description":"Denomination of the cryptocurrency Solana.","pattern":"^[1-9]\\d+$","examples":["100"]}}}},"total_deactivated_amount":{"type":"string","description":"Denomination of the cryptocurrency Solana.","pattern":"^[1-9]\\d+$","examples":["100"]}}}}}},"customer_id":{"type":"string","description":"Unique identifier for a customer","minimum":1,"examples":["SatoshiNakamoto-xUYJbPw9hw"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"400":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[400],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["Detailed human-readable diagnostic message regarding any invalid request parameters"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"401":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[401],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A human-readable diagnostic message detailing any authorization failure"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"500":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[500],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A descriptive error message"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"}}} as const
;
const GetSolanaWithdrawableAmount = {"metadata":{"allOf":[{"type":"object","properties":{"network":{"type":"string","description":"Solana network","enum":["mainnet","testnet"],"$schema":"https://json-schema.org/draft/2020-12/schema#"}},"required":["network"]},{"type":"object","properties":{"delegator_address":{"type":"string","description":"A filter on the delegator address","format":"base58","pattern":"^[1-9A-HJ-NP-Za-km-z]{44}$","examples":["5xot9PVkphiX2adznghwrAuxGs2zeWisNSxMW6hU6Hkj"],"$schema":"https://json-schema.org/draft/2020-12/schema#"},"withdrawal_authority":{"type":"string","description":"A filter on the withdrawal authority address","format":"base58","pattern":"^[1-9A-HJ-NP-Za-km-z]{44}$","examples":["5xot9PVkphiX2adznghwrAuxGs2zeWisNSxMW6hU6Hkj"],"$schema":"https://json-schema.org/draft/2020-12/schema#"}},"required":[]}]},"response":{"200":{"type":"object","description":"Result of the get withdrawable amount","required":["protocol","network","amount","currency"],"properties":{"protocol":{"type":"string","description":"Solana protocol\n\n`solana`","enum":["solana"]},"network":{"type":"string","description":"Solana network\n\n`mainnet` `testnet`","enum":["mainnet","testnet"]},"currency":{"type":"string","description":"Denomination of the cryptocurrency Solana.","pattern":"^[1-9]\\d+$","examples":["100"]},"amount":{"type":"string","pattern":"^[1-9]\\d+$","examples":["123456"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"400":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[400],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["Detailed human-readable diagnostic message regarding any invalid request parameters"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"401":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[401],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A human-readable diagnostic message detailing any authorization failure"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"500":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[500],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A descriptive error message"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"}}} as const
;
const GetSolanaWithdrawalIntents = {"metadata":{"allOf":[{"type":"object","properties":{"network":{"type":"string","description":"Solana network","enum":["mainnet","testnet"],"$schema":"https://json-schema.org/draft/2020-12/schema#"}},"required":["network"]}]},"response":{"200":{"type":"object","description":"Withdrawal intents","required":["protocol","network","customer_id"],"properties":{"protocol":{"type":"string","description":"Solana protocol\n\n`solana`","enum":["solana"]},"network":{"type":"string","description":"Solana network\n\n`mainnet` `testnet`","enum":["mainnet","testnet"]},"solana":{"type":"array","description":"List of withdrawal intents","items":{"type":"object","required":["customer_id","network","protocol","solana","withdraw_intent_id"],"description":"Result of a new withdrawal intent request.","properties":{"withdraw_intent_id":{"type":"string","format":"uuid","description":"Unique idenifier for a withdrawal intent.","examples":["4ba06e89-8c29-483e-ac36-318de5aa7364"]},"customer_id":{"type":"string","description":"Unique identifier for a customer","minimum":1,"examples":["SatoshiNakamoto-xUYJbPw9hw"]},"protocol":{"type":"string","description":"Solana protocol\n\n`solana`","enum":["solana"]},"network":{"type":"string","description":"Solana network\n\n`mainnet` `testnet`","enum":["mainnet","testnet"]},"solana":{"type":"object","required":["withdraws","total_withdraw_amount"],"properties":{"withdraws":{"type":"array","items":{"type":"object","description":"Result of the withdraw transaction request","required":["unsigned_transaction","withdrawal_authority_public_key","stake_account_address","amount","stake_id","expiration_time"],"properties":{"unsigned_transaction":{"type":"string","format":"base64","description":"Generated unsigned transaction smart contract call data.","examples":["0x22895118000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000120087fed394b43849eebef1e88873cd9efdbe33136656e5148e659b8b2f33625d40000000000000000000000000000000000000000000000000000000000000030b81748644e23c4d950f9dd709f3eb73d5eacd9657997e1d9dde7c4ebd8a6519ecb9d0a7fb603d3b68e023278f9650122000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020010000000000000000000000c509bb854c526af4cee5e037089f7aa8e091d8870000000000000000000000000000000000000000000000000000000000000060b36b79b4b206c0310472c117fa40c05342b5dc3e89f98f42c9da3ce6450d4c603cad55248017fd4eca3ab277cca64569193e4d487f5b2ea78a2bcdc81926c313c05842a3af318967a775783bba22519e8b8886587efa99aa7dab5784f792b187\n"]},"withdrawal_authority_public_key":{"type":"string","description":"Public Key of an asymmetric key-pair.","format":"base58","pattern":"^[1-9A-HJ-NP-Za-km-z]{44}$","examples":["5xot9PVkphiX2adznghwrAuxGs2zeWisNSxMW6hU6Hkj"]},"stake_account_address":{"type":"string","description":"Public Key of an asymmetric key-pair.","format":"base58","pattern":"^[1-9A-HJ-NP-Za-km-z]{44}$","examples":["5xot9PVkphiX2adznghwrAuxGs2zeWisNSxMW6hU6Hkj"]},"stake_id":{"description":"Unique stake identifier.","type":"string","format":"base58","examples":["stake_Wgx98Rbi8nQuL9ddn3mTk1"]},"amount":{"type":"string","description":"Denomination of the cryptocurrency Solana.","pattern":"^[1-9]\\d+$","examples":["100"]},"expiration_time":{"type":"integer","description":"Transaction expiration time","format":"int64","examples":[1689939023],"minimum":-9223372036854776000,"maximum":9223372036854776000}}}},"total_withdraw_amount":{"type":"string","description":"Denomination of the cryptocurrency Solana.","pattern":"^[1-9]\\d+$","examples":["100"]}}}}}},"customer_id":{"type":"string","description":"Unique identifier for a customer","minimum":1,"examples":["SatoshiNakamoto-xUYJbPw9hw"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"400":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[400],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["Detailed human-readable diagnostic message regarding any invalid request parameters"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"401":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[401],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A human-readable diagnostic message detailing any authorization failure"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"500":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[500],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A descriptive error message"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"}}} as const
;
const GetStakeAccountsSolana = {"metadata":{"allOf":[{"type":"object","properties":{"network":{"type":"string","description":"Solana network","enum":["mainnet","testnet"],"$schema":"https://json-schema.org/draft/2020-12/schema#"}},"required":["network"]},{"type":"object","properties":{"page":{"type":"integer","format":"int64","minimum":1,"default":1,"maximum":9223372036854776000,"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"The result set page to view"},"per_page":{"type":"integer","format":"int64","minimum":1,"maximum":50,"default":50,"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"The number of items to include on a single page"}},"required":[]}]},"response":{"200":{"type":"object","required":["stake_accounts","pagination"],"properties":{"stake_accounts":{"type":"array","description":"List of stake accounts","items":{"type":"object","description":"Stake account","required":["status","amount","stake_account_address","stake_account_authority","withdrawal_authority","delegator_address","vote_account","network"],"properties":{"status":{"type":"string","description":"Solana stake account internal status based on the transaction intents that have been created against the stake accounts.\n\n`pending` `active` `activating` `deactivated` `deactivating` `withdrawing` `withdrawn`","enum":["pending","active","activating","deactivated","deactivating","withdrawing","withdrawn"]},"amount":{"type":"string","description":"Denomination of the cryptocurrency Solana.","pattern":"^[1-9]\\d+$","examples":["100"]},"stake_account_address":{"type":"string","description":"Public Key of an asymmetric key-pair.","format":"base58","pattern":"^[1-9A-HJ-NP-Za-km-z]{44}$","examples":["5xot9PVkphiX2adznghwrAuxGs2zeWisNSxMW6hU6Hkj"]},"stake_account_authority":{"type":"string","description":"Public Key of an asymmetric key-pair.","format":"base58","pattern":"^[1-9A-HJ-NP-Za-km-z]{44}$","examples":["5xot9PVkphiX2adznghwrAuxGs2zeWisNSxMW6hU6Hkj"]},"withdrawal_authority":{"type":"string","description":"Public Key of an asymmetric key-pair.","format":"base58","pattern":"^[1-9A-HJ-NP-Za-km-z]{44}$","examples":["5xot9PVkphiX2adznghwrAuxGs2zeWisNSxMW6hU6Hkj"]},"delegator_address":{"type":"string","description":"Public Key of an asymmetric key-pair.","format":"base58","pattern":"^[1-9A-HJ-NP-Za-km-z]{44}$","examples":["5xot9PVkphiX2adznghwrAuxGs2zeWisNSxMW6hU6Hkj"]},"vote_account":{"type":"string","description":"Public Key of an asymmetric key-pair.","format":"base58","pattern":"^[1-9A-HJ-NP-Za-km-z]{44}$","examples":["5xot9PVkphiX2adznghwrAuxGs2zeWisNSxMW6hU6Hkj"]},"network":{"type":"string","description":"Solana network\n\n`mainnet` `testnet`","enum":["mainnet","testnet"]}}}},"pagination":{"type":"object","description":"encapsulates pagination properties","required":["page","per_page","total"],"properties":{"page":{"description":"current page number","type":"integer","format":"int64","minimum":-9223372036854776000,"maximum":9223372036854776000},"per_page":{"description":"number of results per page","type":"integer","format":"int64","minimum":-9223372036854776000,"maximum":9223372036854776000},"total":{"description":"total number of results","type":"integer","format":"int64","minimum":-9223372036854776000,"maximum":9223372036854776000}}}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"400":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[400],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["Detailed human-readable diagnostic message regarding any invalid request parameters"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"401":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[401],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A human-readable diagnostic message detailing any authorization failure"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"500":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[500],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A descriptive error message"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"}}} as const
;
const ListCustomerPlans = {"metadata":{"allOf":[{"type":"object","properties":{"mev_enabled":{"type":"boolean","$schema":"https://json-schema.org/draft/2020-12/schema#","description":"A filter on MEV on/off"},"protocols":{"type":"array","items":{"type":"string","description":"Blockchain protocol.","enum":["ethereum","polkadot","solana","cosmos","polygon","near","cardano","avalanche","binance"]},"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"A filter on the type of protocols."},"networks":{"type":"array","items":{"type":"string","description":"Protocol-specific network.","enum":["mainnet","localnet","goerli","prater","holesky","testnet","devnet","kusama","westend","preprod","fuji","local"]},"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"A filter on the type of networks."},"providers":{"type":"array","items":{"description":"Cloud provider which will host the node.","x-go-type":"models.ProviderID","x-go-type-import":{"path":"go.blockdaemon.com/nodeq-server/pkg/models","name":"models"}},"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"A filter on the type of providers."},"regions":{"type":"array","items":{"description":"cloud provider's zone code","type":"string"},"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"A filter on the type of regions."},"page":{"type":"integer","format":"int64","minimum":1,"default":1,"maximum":9223372036854776000,"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"The result set page to view"},"per_page":{"type":"integer","format":"int64","minimum":1,"maximum":1000,"default":250,"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"The number of items to include on a single page"}},"required":[]},{"type":"object","properties":{"X-Client-ID":{"type":"string","minLength":1,"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"Unique ID of the client/customer"}},"required":["X-Client-ID"]}]},"response":{"200":{"type":"object","required":["plans","pagination"],"properties":{"pagination":{"type":"object","description":"encapsulates pagination properties","required":["page","per_page","total"],"properties":{"page":{"description":"current page number","type":"integer","format":"int64","minimum":-9223372036854776000,"maximum":9223372036854776000},"per_page":{"description":"number of results per page","type":"integer","format":"int64","minimum":-9223372036854776000,"maximum":9223372036854776000},"total":{"description":"total number of results","type":"integer","format":"int64","minimum":-9223372036854776000,"maximum":9223372036854776000}}},"plans":{"type":"array","items":{"type":"object","description":"staking plan for validators","required":["id","protocol","network","config","customer_id","staking_plan_type","title"],"properties":{"id":{"type":"string","description":"This feature enables you to stake to validators from the specified plan(s). When no plan id is specified, validators across all plans that match the API route will be available for staking. If it is a shared plan, you can to stake to validators on a shared node from the specified plan.","examples":["plan_Wgx98Rbi8nQuL9ddn3mTk1"]},"customer_id":{"type":"string","description":"Unique identifier for a customer","minimum":1,"examples":["SatoshiNakamoto-xUYJbPw9hw"]},"protocol":{"type":"string","description":"Blockchain protocol.\n\n`ethereum` `polkadot` `solana` `cosmos` `polygon` `near` `cardano` `avalanche` `binance`","enum":["ethereum","polkadot","solana","cosmos","polygon","near","cardano","avalanche","binance"]},"network":{"type":"string","description":"Protocol-specific network.\n\n`mainnet` `localnet` `goerli` `prater` `holesky` `testnet` `devnet` `kusama` `westend` `preprod` `fuji` `local`","enum":["mainnet","localnet","goerli","prater","holesky","testnet","devnet","kusama","westend","preprod","fuji","local"]},"provider":{"description":"Cloud provider which will host the node.","x-go-type":"models.ProviderID","x-go-type-import":{"path":"go.blockdaemon.com/nodeq-server/pkg/models","name":"models"}},"region":{"description":"cloud provider's zone code","type":"string"},"minimum":{"description":"minimum number of validators to be available. required for white label plans","type":"integer","format":"int64","minimum":-9223372036854776000,"maximum":9223372036854776000},"config":{"oneOf":[{"type":"object","description":"Ethereum staking plan config","required":["inventory_type"],"properties":{"suggested_fee_recipient":{"type":"string","description":"the suggested fee recipient address","minimum":1},"mev":{"type":"object","properties":{"id":{"type":"string","description":"ID of the MEV fee recipient. optional"},"enabled":{"type":"boolean"},"relays":{"type":"array","description":"List of Relay urls","items":{"type":"string","format":"uri","description":"Relay url"},"minItems":1}}},"inventory_type":{"type":"string","description":"Indicates if the quantity of validators for the staking plan is static or dynamic. Static is a once off deployment of a specified quantity of validators. Dynamic is where an initial quantity of validators is deployed with a threshold of available validators also configured. If the number of available validators within the validator inventory drops below the threshold (by being reserved as part of a stake intents API call) then the dynamic plan will automatically deploy the required infrastructure to bring the number of available validators above the threshold.\n\n`static` `dynamic`","enum":["static","dynamic"]},"execution_client":{"type":"string","description":"The execution client to use on the node\n\n`geth` `besu`","enum":["geth","besu"]}}},{"type":"object","description":"Solana staking plan config","required":["validator_address"],"properties":{"validator_address":{"type":"object","required":["mainnet","testnet"],"properties":{"mainnet":{"type":"string","description":"Public Key of an asymmetric key-pair.","format":"base58","pattern":"^[1-9A-HJ-NP-Za-km-z]{44}$","examples":["5xot9PVkphiX2adznghwrAuxGs2zeWisNSxMW6hU6Hkj"]},"testnet":{"type":"string","description":"Public Key of an asymmetric key-pair.","format":"base58","pattern":"^[1-9A-HJ-NP-Za-km-z]{44}$","examples":["5xot9PVkphiX2adznghwrAuxGs2zeWisNSxMW6hU6Hkj"]}}}}},{"type":"object","description":"Polygon staking plan config","required":["validator_share_address"],"properties":{"validator_share_address":{"type":"object","required":["mainnet","testnet"],"properties":{"mainnet":{"type":"string","description":"Hex-encoded Ethereum [account or smart contract address](https://ethereum.org/en/developers/docs/accounts/).","format":"hex","pattern":"^0x[a-fA-F0-9]{40}$","examples":["0x00000000219ab540356cBB839Cbe05303d7705Fa"]},"testnet":{"type":"string","description":"Hex-encoded Ethereum [account or smart contract address](https://ethereum.org/en/developers/docs/accounts/).","format":"hex","pattern":"^0x[a-fA-F0-9]{40}$","examples":["0x00000000219ab540356cBB839Cbe05303d7705Fa"]}}}}},{"type":"object","description":"Cardano staking plan config","required":["stake_pool_id"],"properties":{"stake_pool_id":{"type":"object","required":["mainnet","preprod"],"properties":{"mainnet":{"type":"string","description":"bech32 encoded pool id.","format":"bech32","examples":["pool1ev8fwfccn8gr0zcz3uyps0t0mcrefc6s95wjc6aed3ngc86y5rk"]},"preprod":{"type":"string","description":"bech32 encoded pool id.","format":"bech32","examples":["pool1ev8fwfccn8gr0zcz3uyps0t0mcrefc6s95wjc6aed3ngc86y5rk"]}}}}},{"type":"object","description":"Avalanche staking plan config","required":["validator_address"],"properties":{"validator_address":{"type":"object","required":["mainnet","fuji"],"properties":{"mainnet":{"type":"string","description":"Avalanche validator node address","pattern":"^NodeID-[A-Za-z0-9]{43}$","examples":["NodeID-B19uSxUKerjjnA215czAJLHMqNJMbsAMWuSxUKerjjW"]},"fuji":{"type":"string","description":"Avalanche validator node address","pattern":"^NodeID-[A-Za-z0-9]{43}$","examples":["NodeID-B19uSxUKerjjnA215czAJLHMqNJMbsAMWuSxUKerjjW"]}}}}},{"type":"object","description":"Cosmos staking plan config","required":["validator_address"],"properties":{"validator_address":{"type":"object","required":["mainnet","testnet"],"properties":{"mainnet":{"type":"string","description":"Public Key of an asymmetric key-pair.","format":"bech32","pattern":"^cosmos[1-9a-zA-Z]{39}$","examples":["cosmos1wvvhhfm387xvfnqshmdaunnpujjrdxznr5d5x9"]},"testnet":{"type":"string","description":"Public Key of an asymmetric key-pair.","format":"bech32","pattern":"^cosmos[1-9a-zA-Z]{39}$","examples":["cosmos1wvvhhfm387xvfnqshmdaunnpujjrdxznr5d5x9"]}}}}},{"type":"object","description":"Binance staking plan config","required":["validator_address"],"properties":{"validator_address":{"type":"object","required":["mainnet","testnet"],"properties":{"mainnet":{"type":"string","description":"Binance beacon chain validator address.","format":"bech32","pattern":"^bva[0-9a-zA-Z]*$","examples":["bva1mrpf5n5e5knn3z9qng5pnex3m9pvyhg6434j0t"]},"testnet":{"type":"string","description":"Binance beacon chain validator address.","format":"bech32","pattern":"^bva[0-9a-zA-Z]*$","examples":["bva1mrpf5n5e5knn3z9qng5pnex3m9pvyhg6434j0t"]}}}}}]},"total_pending":{"description":"total number of pending validators in a staking plan","type":"integer","format":"int64","minimum":-9223372036854776000,"maximum":9223372036854776000},"total_available":{"description":"total number of available validators in a staking plan","type":"integer","format":"int64","minimum":-9223372036854776000,"maximum":9223372036854776000},"total_active":{"description":"total number of active validators in a staking plan","type":"integer","format":"int64","minimum":-9223372036854776000,"maximum":9223372036854776000},"staking_plan_type":{"type":"string","description":"Indicates if the staking plan requires a Blockdaemon validator launch or it is associated to a public validator.\n\n`white_label` `public`","enum":["white_label","public"]},"title":{"type":"string","description":"Plan title for display purposes"},"total_reserved":{"description":"total number of reserved validators in a staking plan","type":"integer","format":"int64","minimum":-9223372036854776000,"maximum":9223372036854776000}}}}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"400":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[400],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["Detailed human-readable diagnostic message regarding any invalid request parameters"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"401":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[401],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A human-readable diagnostic message detailing any authorization failure"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"500":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[500],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A descriptive error message"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"}}} as const
;
const ListStakeIntents = {"metadata":{"allOf":[{"type":"object","properties":{"protocols":{"type":"array","items":{"type":"string","description":"Blockchain protocol.","enum":["ethereum","polkadot","solana","cosmos","polygon","near","cardano","avalanche","binance"]},"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"Protocol(s) to list stake intents for (one per argument)."},"networks":{"type":"array","items":{"type":"string","description":"Protocol-specific network.","enum":["mainnet","localnet","goerli","prater","holesky","testnet","devnet","kusama","westend","preprod","fuji","local"]},"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"Network(s) to list stake intents for (one per argument)."},"page":{"type":"integer","format":"int64","minimum":1,"default":1,"maximum":9223372036854776000,"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"The result set page to view"},"per_page":{"type":"integer","format":"int64","minimum":1,"maximum":1000,"default":250,"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"The number of items to include on a single page"},"from_time":{"description":"Filter stake intents created on or after this time.","type":"string","examples":["2023-01-11 06:22:46.182"],"$schema":"https://json-schema.org/draft/2020-12/schema#"},"to_time":{"description":"Filter stake intents created on or before this time.","type":"string","examples":["2023-01-11 06:22:46.182"],"$schema":"https://json-schema.org/draft/2020-12/schema#"}},"required":[]}]},"response":{"200":{"type":"object","required":["stake_intents","pagination"],"properties":{"stake_intents":{"type":"array","description":"List of stake intents","items":{"type":"object","required":["stake_intent_id","protocol","network","customer_id"],"properties":{"stake_intent_id":{"type":"string","format":"base58","description":"Unique idenifier for a group of stakes.","examples":["stake_intent_Wgx98Rbi8nQuL9ddn3mTk1"]},"protocol":{"type":"string","description":"Blockchain protocol.\n\n`ethereum` `polkadot` `solana` `cosmos` `polygon` `near` `cardano` `avalanche` `binance`","enum":["ethereum","polkadot","solana","cosmos","polygon","near","cardano","avalanche","binance"]},"network":{"type":"string","description":"Protocol-specific network.\n\n`mainnet` `localnet` `goerli` `prater` `holesky` `testnet` `devnet` `kusama` `westend` `preprod` `fuji` `local`","enum":["mainnet","localnet","goerli","prater","holesky","testnet","devnet","kusama","westend","preprod","fuji","local"]},"ethereum":{"type":"object","description":"Ethereum Stake Intent response","required":["stakes","contract_address","unsigned_transaction","estimated_gas","expiration_time"],"properties":{"stakes":{"description":"Stakes being made.","type":"array","items":{"type":"object","description":"Individual Ethereum Stake Response","required":["stake_id","amount","validator_public_key","withdrawal_credentials","fee_recipient"],"properties":{"stake_id":{"description":"Unique stake identifier.","type":"string","format":"base58","examples":["stake_Wgx98Rbi8nQuL9ddn3mTk1"]},"amount":{"type":"string","description":"Amount of ETH (denominated in Gwei).","pattern":"^[1-9]\\d{10,}$","examples":["32000000000"]},"validator_public_key":{"type":"string","description":"A BLS public Key.","format":"base64","examples":["0xa1d1ad0714035353258038e964ae9675dc0252ee22cea896825c01458e1807bfad2f9969338798548d9858a571f7425c"]},"withdrawal_credentials":{"type":"string","format":"hex","pattern":"^0x0(0|1)[a-fA-F0-9]{62}$","description":"Hexadecimal encoded [withdrawal credentials](https://github.com/ethereum/consensus-specs/blob/master/specs/phase0/validator.md#withdrawal-credentials) which can be either a BLS public key or an Ethereum account address.\n\nThis parameter currently accepts ETH1 and BLS withdrawal credentials, but it is considered deprecated after the Capella/Shanghai fork. All users are now advised to use an ETH1 withdrawal address, specified through the `withdrawal_address` parameter as this is required to enable the ongoing accrual of rewards.\n\nFor more information regarding creating withdrawal credentials, please see the official [Ethereum Launchpad FAQ](https://launchpad.ethereum.org/en/faq#withdrawal-credentials).","examples":["0x0092c20062cee70389f1cb4fa566a2be5e2319ff43965db26dbaa3ce90b9df99"]},"fee_recipient":{"type":"string","description":"An Ethereum address to receive transaction fees from published blocks. 20-bytes, hex encoded with 0x prefix, case insensitive.","pattern":"^0x[a-fA-F0-9]{40}$","examples":["0x93247f2209abcacf57b75a51dafae777f9dd38bc"]}}}},"contract_address":{"type":"string","description":"Hex-encoded Ethereum [account or smart contract address](https://ethereum.org/en/developers/docs/accounts/).","format":"hex","pattern":"^0x[a-fA-F0-9]{40}$","examples":["0x00000000219ab540356cBB839Cbe05303d7705Fa"]},"unsigned_transaction":{"type":"string","format":"base64","description":"Generated unsigned transaction smart contract call data.","examples":["0x22895118000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000120087fed394b43849eebef1e88873cd9efdbe33136656e5148e659b8b2f33625d40000000000000000000000000000000000000000000000000000000000000030b81748644e23c4d950f9dd709f3eb73d5eacd9657997e1d9dde7c4ebd8a6519ecb9d0a7fb603d3b68e023278f9650122000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020010000000000000000000000c509bb854c526af4cee5e037089f7aa8e091d8870000000000000000000000000000000000000000000000000000000000000060b36b79b4b206c0310472c117fa40c05342b5dc3e89f98f42c9da3ce6450d4c603cad55248017fd4eca3ab277cca64569193e4d487f5b2ea78a2bcdc81926c313c05842a3af318967a775783bba22519e8b8886587efa99aa7dab5784f792b187\n"]},"estimated_gas":{"type":"integer","description":"Gas estimation of the transaction","format":"uint64","examples":[1001],"minimum":0,"maximum":18446744073709552000},"expiration_time":{"type":"integer","description":"Transaction expiration time","format":"int64","examples":[1689939023],"minimum":-9223372036854776000,"maximum":9223372036854776000}}},"polkadot":{"type":"object","description":"Polkadot Stake Intent Response","required":["stake_id","unsigned_transaction","proxy_address"],"properties":{"unsigned_transaction":{"description":"Unsigned transaction that bonds a Blockdaemon's proxy account to the given customer account.\nOnce this transaction is signed, broadcasted to the network and included in the canonical history of the chain, the proxy account will be associated with the customer account.","type":"string","format":"base64","examples":["0xa4041601008c16e19e94328985d65cb7e3245213892730dd0e841f6511478cb12f23a178330100000000"]},"customer_address":{"description":"Address of the customer account to associate with the proxy account.","type":"string","format":"base58","pattern":"^[1-9A-HJ-NP-Za-km-z]{44}$","examples":["5xot9PVkphiX2adznghwrAuxGs2zeWisNSxMW6hU6Hkj"]},"controller_address":{"description":"Address of the customer account to associate with the proxy account.\nSame as customer_address. Deprecated - will be removed in a later version.","type":"string","format":"base58","pattern":"^[1-9A-HJ-NP-Za-km-z]{44}$","examples":["5xot9PVkphiX2adznghwrAuxGs2zeWisNSxMW6hU6Hkj"]},"proxy_address":{"description":"Address of the proxy account to associate with the customer account.","type":"string","format":"base58","pattern":"^[1-9A-HJ-NP-Za-km-z]{44}$","examples":["5xot9PVkphiX2adznghwrAuxGs2zeWisNSxMW6hU6Hkj"]}}},"solana":{"type":"object","description":"Solana Stake Intent response","required":["stake_id","amount","validator_public_key","withdrawal_authority","staking_authority","stake_account_public_key","unsigned_transaction","expiration_time"],"properties":{"stake_id":{"description":"Unique stake identifier.","type":"string","format":"base58","examples":["stake_Wgx98Rbi8nQuL9ddn3mTk1"]},"amount":{"type":"string","description":"Denomination of the cryptocurrency Solana.","pattern":"^[1-9]\\d+$","examples":["100"]},"validator_public_key":{"type":"string","description":"A BLS public Key.","format":"base64","examples":["0xa1d1ad0714035353258038e964ae9675dc0252ee22cea896825c01458e1807bfad2f9969338798548d9858a571f7425c"]},"staking_authority":{"type":"string","description":"Public Key of an asymmetric key-pair.","format":"base58","pattern":"^[1-9A-HJ-NP-Za-km-z]{44}$","examples":["5xot9PVkphiX2adznghwrAuxGs2zeWisNSxMW6hU6Hkj"]},"withdrawal_authority":{"type":"string","description":"A BLS public Key.","format":"base64","examples":["0xa1d1ad0714035353258038e964ae9675dc0252ee22cea896825c01458e1807bfad2f9969338798548d9858a571f7425c"]},"stake_account_public_key":{"type":"string","description":"Public Key of an asymmetric key-pair.","format":"base58","pattern":"^[1-9A-HJ-NP-Za-km-z]{44}$","examples":["5xot9PVkphiX2adznghwrAuxGs2zeWisNSxMW6hU6Hkj"]},"unsigned_transaction":{"type":"string","format":"base64","description":"Generated unsigned transaction smart contract call data.","examples":["0x22895118000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000120087fed394b43849eebef1e88873cd9efdbe33136656e5148e659b8b2f33625d40000000000000000000000000000000000000000000000000000000000000030b81748644e23c4d950f9dd709f3eb73d5eacd9657997e1d9dde7c4ebd8a6519ecb9d0a7fb603d3b68e023278f9650122000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020010000000000000000000000c509bb854c526af4cee5e037089f7aa8e091d8870000000000000000000000000000000000000000000000000000000000000060b36b79b4b206c0310472c117fa40c05342b5dc3e89f98f42c9da3ce6450d4c603cad55248017fd4eca3ab277cca64569193e4d487f5b2ea78a2bcdc81926c313c05842a3af318967a775783bba22519e8b8886587efa99aa7dab5784f792b187\n"]},"expiration_time":{"type":"integer","description":"Transaction expiration time","format":"int64","examples":[1689939023],"minimum":-9223372036854776000,"maximum":9223372036854776000}}},"cosmos":{"type":"object","description":"Cosmos Stake Intent response","required":["unsigned_transaction","amount","delegator_address","validator_address"],"properties":{"unsigned_transaction":{"type":"string","format":"base64","description":"Generated unsigned transaction smart contract call data.","examples":["0x22895118000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000120087fed394b43849eebef1e88873cd9efdbe33136656e5148e659b8b2f33625d40000000000000000000000000000000000000000000000000000000000000030b81748644e23c4d950f9dd709f3eb73d5eacd9657997e1d9dde7c4ebd8a6519ecb9d0a7fb603d3b68e023278f9650122000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020010000000000000000000000c509bb854c526af4cee5e037089f7aa8e091d8870000000000000000000000000000000000000000000000000000000000000060b36b79b4b206c0310472c117fa40c05342b5dc3e89f98f42c9da3ce6450d4c603cad55248017fd4eca3ab277cca64569193e4d487f5b2ea78a2bcdc81926c313c05842a3af318967a775783bba22519e8b8886587efa99aa7dab5784f792b187\n"]},"delegator_address":{"type":"string","description":"Public Key of an asymmetric key-pair.","format":"bech32","pattern":"^cosmos[1-9a-zA-Z]{39}$","examples":["cosmos1wvvhhfm387xvfnqshmdaunnpujjrdxznr5d5x9"]},"validator_address":{"type":"string","description":"Public Key of an asymmetric key-pair.","format":"bech32","pattern":"^cosmos[1-9a-zA-Z]{39}$","examples":["cosmos1wvvhhfm387xvfnqshmdaunnpujjrdxznr5d5x9"]},"amount":{"type":"string","description":"Denomination of the cryptocurrency Cosmos.","pattern":"^[1-9]\\d+$","examples":["100"]}}},"binance":{"type":"object","description":"Binance Stake Intent response","required":["unsigned_transaction","amount","delegator_address","validator_address"],"properties":{"unsigned_transaction":{"type":"string","format":"base64","description":"Generated unsigned transaction smart contract call data.","examples":["0x22895118000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000120087fed394b43849eebef1e88873cd9efdbe33136656e5148e659b8b2f33625d40000000000000000000000000000000000000000000000000000000000000030b81748644e23c4d950f9dd709f3eb73d5eacd9657997e1d9dde7c4ebd8a6519ecb9d0a7fb603d3b68e023278f9650122000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020010000000000000000000000c509bb854c526af4cee5e037089f7aa8e091d8870000000000000000000000000000000000000000000000000000000000000060b36b79b4b206c0310472c117fa40c05342b5dc3e89f98f42c9da3ce6450d4c603cad55248017fd4eca3ab277cca64569193e4d487f5b2ea78a2bcdc81926c313c05842a3af318967a775783bba22519e8b8886587efa99aa7dab5784f792b187\n"]},"delegator_address":{"type":"string","description":"Binance beacon chain address.","format":"bech32","pattern":"^bnb[0-9a-z]+$","examples":["bnb13ym5szfmwh0wz9j8wr2lu2gaml94h895u9el2e"]},"validator_address":{"type":"string","description":"Binance beacon chain validator address.","format":"bech32","pattern":"^bva[0-9a-zA-Z]*$","examples":["bva1mrpf5n5e5knn3z9qng5pnex3m9pvyhg6434j0t"]},"amount":{"type":"string","description":"The smallest denomination of Binance Coin (BNB) is called Jager. 1 Jager =0.00000001 BNB.","pattern":"^[1-9]\\d+$","examples":["10000000000"]}}},"polygon":{"type":"object","description":"Polygon Stake Intent","required":["to","unsigned_transaction","amount","wallet_address"],"properties":{"to":{"type":"string","description":"Hex-encoded Ethereum [account or smart contract address](https://ethereum.org/en/developers/docs/accounts/).","format":"hex","pattern":"^0x[a-fA-F0-9]{40}$","examples":["0x00000000219ab540356cBB839Cbe05303d7705Fa"]},"unsigned_transaction":{"type":"string","format":"base64","description":"Generated unsigned transaction smart contract call data.","examples":["0x22895118000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000120087fed394b43849eebef1e88873cd9efdbe33136656e5148e659b8b2f33625d40000000000000000000000000000000000000000000000000000000000000030b81748644e23c4d950f9dd709f3eb73d5eacd9657997e1d9dde7c4ebd8a6519ecb9d0a7fb603d3b68e023278f9650122000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020010000000000000000000000c509bb854c526af4cee5e037089f7aa8e091d8870000000000000000000000000000000000000000000000000000000000000060b36b79b4b206c0310472c117fa40c05342b5dc3e89f98f42c9da3ce6450d4c603cad55248017fd4eca3ab277cca64569193e4d487f5b2ea78a2bcdc81926c313c05842a3af318967a775783bba22519e8b8886587efa99aa7dab5784f792b187\n"]},"amount":{"type":"string","description":"Denomination of the cryptocurrency Polygon.","pattern":"^[1-9]\\d+$","examples":["100"]},"wallet_address":{"type":"string","description":"Hex-encoded Ethereum [account or smart contract address](https://ethereum.org/en/developers/docs/accounts/).","format":"hex","pattern":"^0x[a-fA-F0-9]{40}$","examples":["0x00000000219ab540356cBB839Cbe05303d7705Fa"]}}},"near":{"type":"object","description":"NEAR Protocol Stake Intent","required":["to","unsigned_transaction","amount","wallet_address","public_key","expiration_time"],"properties":{"to":{"type":"string","description":"Base58 encoded public key or registered named account. [Accounts](https://docs.near.org/concepts/basics/accounts/account-id/).","pattern":"^([a-km-zA-HJ-NP-Z1-9]{22,44})|((([a-z\\d]+[-_])*[a-z\\d]+\\.)*([a-z\\d]+[-_])*[a-z\\d]+)$","examples":["alice.near"]},"unsigned_transaction":{"type":"string","format":"base64","description":"Generated unsigned transaction smart contract call data.","examples":["0x22895118000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000120087fed394b43849eebef1e88873cd9efdbe33136656e5148e659b8b2f33625d40000000000000000000000000000000000000000000000000000000000000030b81748644e23c4d950f9dd709f3eb73d5eacd9657997e1d9dde7c4ebd8a6519ecb9d0a7fb603d3b68e023278f9650122000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020010000000000000000000000c509bb854c526af4cee5e037089f7aa8e091d8870000000000000000000000000000000000000000000000000000000000000060b36b79b4b206c0310472c117fa40c05342b5dc3e89f98f42c9da3ce6450d4c603cad55248017fd4eca3ab277cca64569193e4d487f5b2ea78a2bcdc81926c313c05842a3af318967a775783bba22519e8b8886587efa99aa7dab5784f792b187\n"]},"amount":{"type":"string","description":"Denomination of NEAR Protocol.","pattern":"^[1-9]\\d+$","examples":["100000000000000000000000000"]},"wallet_address":{"type":"string","description":"Base58 encoded public key or registered named account. [Accounts](https://docs.near.org/concepts/basics/accounts/account-id/).","pattern":"^([a-km-zA-HJ-NP-Z1-9]{22,44})|((([a-z\\d]+[-_])*[a-z\\d]+\\.)*([a-z\\d]+[-_])*[a-z\\d]+)$","examples":["alice.near"]},"public_key":{"type":"string","description":"Base58 encoded public key prefixed by ed25519, associated with the private key that will be used to sign the transaction.","pattern":"^ed25519:[a-km-zA-HJ-NP-Z1-9]{22,44}$","examples":["ed25519:Cxg2wgFYrdLTEkMu6j5D6aEZqTb3kXbmJygS48ZKbo1S"]},"expiration_time":{"type":"integer","description":"Transaction expiration time","format":"int64","examples":[1689939023],"minimum":-9223372036854776000,"maximum":9223372036854776000}}},"cardano":{"type":"object","description":"Cardano Protocol Stake Intent","required":["pool_id","unsigned_transaction","base_address"],"properties":{"pool_id":{"type":"string","description":"bech32 encoded pool id.","format":"bech32","examples":["pool1ev8fwfccn8gr0zcz3uyps0t0mcrefc6s95wjc6aed3ngc86y5rk"]},"unsigned_transaction":{"type":"string","format":"base64","description":"Generated unsigned transaction smart contract call data.","examples":["0x22895118000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000120087fed394b43849eebef1e88873cd9efdbe33136656e5148e659b8b2f33625d40000000000000000000000000000000000000000000000000000000000000030b81748644e23c4d950f9dd709f3eb73d5eacd9657997e1d9dde7c4ebd8a6519ecb9d0a7fb603d3b68e023278f9650122000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020010000000000000000000000c509bb854c526af4cee5e037089f7aa8e091d8870000000000000000000000000000000000000000000000000000000000000060b36b79b4b206c0310472c117fa40c05342b5dc3e89f98f42c9da3ce6450d4c603cad55248017fd4eca3ab277cca64569193e4d487f5b2ea78a2bcdc81926c313c05842a3af318967a775783bba22519e8b8886587efa99aa7dab5784f792b187\n"]},"base_address":{"type":"string","description":"bech32 encoded base address. [Accounts](https://cips.cardano.org/cips/cip19/).","format":"bech32","examples":["addr1vpu5vlrf4xkxv2qpwngf6cjhtw542ayty80v8dyr49rf5eg0yu80w"]}}},"avalanche":{"type":"object","description":"Avalanche Stake Intent","required":["validator_address","unsigned_transaction","amount","delegator_address","start_time","end_time"],"properties":{"validator_address":{"type":"string","description":"Avalanche validator node address","pattern":"^NodeID-[A-Za-z0-9]{43}$","examples":["NodeID-B19uSxUKerjjnA215czAJLHMqNJMbsAMWuSxUKerjjW"]},"unsigned_transaction":{"type":"string","format":"base64","description":"Generated unsigned transaction smart contract call data.","examples":["0x22895118000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000120087fed394b43849eebef1e88873cd9efdbe33136656e5148e659b8b2f33625d40000000000000000000000000000000000000000000000000000000000000030b81748644e23c4d950f9dd709f3eb73d5eacd9657997e1d9dde7c4ebd8a6519ecb9d0a7fb603d3b68e023278f9650122000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020010000000000000000000000c509bb854c526af4cee5e037089f7aa8e091d8870000000000000000000000000000000000000000000000000000000000000060b36b79b4b206c0310472c117fa40c05342b5dc3e89f98f42c9da3ce6450d4c603cad55248017fd4eca3ab277cca64569193e4d487f5b2ea78a2bcdc81926c313c05842a3af318967a775783bba22519e8b8886587efa99aa7dab5784f792b187\n"]},"amount":{"type":"string","description":"Denomination of Avalanche.","pattern":"^[1-9]\\d+$","examples":["10000000000"]},"delegator_address":{"type":"string","description":"Avalanche platform chain address","pattern":"^([P]|[a-km-zA-HJ-NP-Z1-9]{36,72})-[a-zA-Z]{1,83}1[qpzry9x8gf2tvdw0s3jn54khce6mua7l]{38}$","examples":["P-fuji1g2g0jxcfn5sp59ld7g0t0tp4jrqppvqcfqc7hy"]},"start_time":{"description":"Avalanche staking start time","type":"integer","format":"int64","examples":[1689939023],"minimum":-9223372036854776000,"maximum":9223372036854776000},"end_time":{"description":"Avalanche staking end time","type":"integer","format":"int64","examples":[1689939023],"minimum":-9223372036854776000,"maximum":9223372036854776000}}},"customer_id":{"type":"string","description":"Unique identifier for a customer","minimum":1,"examples":["SatoshiNakamoto-xUYJbPw9hw"]},"plan_id":{"type":"string","description":"This feature enables you to stake to validators from the specified plan(s). When no plan id is specified, validators across all plans that match the API route will be available for staking. If it is a shared plan, you can to stake to validators on a shared node from the specified plan.","examples":["plan_Wgx98Rbi8nQuL9ddn3mTk1"]},"created_at":{"description":"Timestamp","type":"string","examples":["2023-01-11 06:22:46.182"]},"updated_at":{"description":"Timestamp","type":"string","examples":["2023-01-11 06:22:46.182"]}}}},"pagination":{"type":"object","description":"encapsulates pagination properties","required":["page","per_page","total"],"properties":{"page":{"description":"current page number","type":"integer","format":"int64","minimum":-9223372036854776000,"maximum":9223372036854776000},"per_page":{"description":"number of results per page","type":"integer","format":"int64","minimum":-9223372036854776000,"maximum":9223372036854776000},"total":{"description":"total number of results","type":"integer","format":"int64","minimum":-9223372036854776000,"maximum":9223372036854776000}}}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"500":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[500],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A descriptive error message"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"}}} as const
;
const PendingQueuedProgress = {"body":{"type":"object","description":"List of Ethereum validator ids.","required":["public_keys"],"properties":{"public_keys":{"type":"array","items":{"type":"string","description":"Public Key of an asymmetric key-pair.","format":"hex","examples":["0xa1d1ad0714035353258038e964ae9675dc0252ee22cea896825c01458e1807bfad2f9969338798548d9858a571f7425c"]}}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"network":{"type":"string","description":"Ethereum network","enum":["mainnet","holesky"],"$schema":"https://json-schema.org/draft/2020-12/schema#"}},"required":["network"]}]},"response":{"200":{"type":"object","required":["validators","last_updated"],"properties":{"last_updated":{"type":"string","description":"Time validator state was recorded","examples":["2024-04-15 08:23:00"]},"validators":{"type":"array","items":{"type":"object","description":"Ethereum validator queue progress validator","required":["public_key","epochs_remaining"],"properties":{"public_key":{"type":"string","description":"Public Key of an asymmetric key-pair.","format":"hex","examples":["0xa1d1ad0714035353258038e964ae9675dc0252ee22cea896825c01458e1807bfad2f9969338798548d9858a571f7425c"]},"epochs_remaining":{"description":"the number of epochs remaining in the current queue","type":"integer","format":"int64","examples":[280312],"minimum":-9223372036854776000,"maximum":9223372036854776000}}}}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"400":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[400],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["Detailed human-readable diagnostic message regarding any invalid request parameters"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"401":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[401],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A human-readable diagnostic message detailing any authorization failure"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"500":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[500],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A descriptive error message"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"}}} as const
;
const PostAvaxStakeIntent = {"body":{"type":"object","description":"Request object to create a new Stake Intent for Avalanche","required":["delegator_address","amount"],"properties":{"validator_address":{"type":"string","description":"Avalanche validator address","pattern":"^NodeID-[A-Za-z0-9]{43}$","examples":["NodeID-B19uSxUKerjjnA215czAJLHMqNJMbsAMWuSxUKerjjW"]},"delegator_address":{"type":"string","description":"Avalanche delegator address","pattern":"^([P]|[a-km-zA-HJ-NP-Z1-9]{36,72})-[a-zA-Z]{1,83}1[qpzry9x8gf2tvdw0s3jn54khce6mua7l]{38}$","examples":["P-fuji1g2g0jxcfn5sp59ld7g0t0tp4jrqppvqcfqc7hy"]},"start_time":{"description":"Avalanche staking start time","type":"integer","format":"int64","examples":[1689939023],"minimum":-9223372036854776000,"maximum":9223372036854776000},"end_time":{"description":"Avalanche staking end time","type":"integer","format":"int64","examples":[1689939023],"minimum":-9223372036854776000,"maximum":9223372036854776000},"amount":{"type":"string","description":"Amount of nano-Avalanche to stake. 1 Avalanche = 1e9 nano-Avalanche.","pattern":"^[1-9]\\d+$","examples":["10000000000"]},"plan_id":{"type":"string","description":"This feature enables you to stake to validators from the specified plan(s). When no plan id is specified, validators across all plans that match the API route will be available for staking. If it is a shared plan, you can to stake to validators on a shared node from the specified plan.","examples":["plan_Wgx98Rbi8nQuL9ddn3mTk1"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"network":{"type":"string","description":"Avalanche network","enum":["mainnet","fuji","local"],"$schema":"https://json-schema.org/draft/2020-12/schema#"}},"required":["network"]},{"type":"object","properties":{"Idempotency-Key":{"type":"string","format":"uuid","examples":["f1c971b4-7114-4c4b-8ad2-a6f9e33e2cd0"],"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"the unique idempotency key for this request"}},"required":[]}]},"response":{"200":{"type":"object","required":["customer_id","network","protocol","stake_intent_id"],"properties":{"stake_intent_id":{"type":"string","format":"base58","description":"Unique idenifier for a group of stakes.","examples":["stake_intent_Wgx98Rbi8nQuL9ddn3mTk1"]},"customer_id":{"type":"string","description":"Unique identifier for a customer","minimum":1,"examples":["SatoshiNakamoto-xUYJbPw9hw"]},"plan_id":{"type":"string","description":"This feature enables you to stake to validators from the specified plan(s). When no plan id is specified, validators across all plans that match the API route will be available for staking. If it is a shared plan, you can to stake to validators on a shared node from the specified plan.","examples":["plan_Wgx98Rbi8nQuL9ddn3mTk1"]},"protocol":{"type":"string","description":"Avalanche protocol\n\n`avalanche`","enum":["avalanche"]},"network":{"type":"string","description":"Avalanche network\n\n`mainnet` `fuji` `local`","enum":["mainnet","fuji","local"]},"avalanche":{"type":"object","description":"Avalanche Stake Intent","required":["validator_address","unsigned_transaction","amount","delegator_address","start_time","end_time"],"properties":{"validator_address":{"type":"string","description":"Avalanche validator node address","pattern":"^NodeID-[A-Za-z0-9]{43}$","examples":["NodeID-B19uSxUKerjjnA215czAJLHMqNJMbsAMWuSxUKerjjW"]},"unsigned_transaction":{"type":"string","format":"base64","description":"Generated unsigned transaction smart contract call data.","examples":["0x22895118000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000120087fed394b43849eebef1e88873cd9efdbe33136656e5148e659b8b2f33625d40000000000000000000000000000000000000000000000000000000000000030b81748644e23c4d950f9dd709f3eb73d5eacd9657997e1d9dde7c4ebd8a6519ecb9d0a7fb603d3b68e023278f9650122000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020010000000000000000000000c509bb854c526af4cee5e037089f7aa8e091d8870000000000000000000000000000000000000000000000000000000000000060b36b79b4b206c0310472c117fa40c05342b5dc3e89f98f42c9da3ce6450d4c603cad55248017fd4eca3ab277cca64569193e4d487f5b2ea78a2bcdc81926c313c05842a3af318967a775783bba22519e8b8886587efa99aa7dab5784f792b187\n"]},"amount":{"type":"string","description":"Denomination of Avalanche.","pattern":"^[1-9]\\d+$","examples":["10000000000"]},"delegator_address":{"type":"string","description":"Avalanche platform chain address","pattern":"^([P]|[a-km-zA-HJ-NP-Z1-9]{36,72})-[a-zA-Z]{1,83}1[qpzry9x8gf2tvdw0s3jn54khce6mua7l]{38}$","examples":["P-fuji1g2g0jxcfn5sp59ld7g0t0tp4jrqppvqcfqc7hy"]},"start_time":{"description":"Avalanche staking start time","type":"integer","format":"int64","examples":[1689939023],"minimum":-9223372036854776000,"maximum":9223372036854776000},"end_time":{"description":"Avalanche staking end time","type":"integer","format":"int64","examples":[1689939023],"minimum":-9223372036854776000,"maximum":9223372036854776000}}}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"400":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[400],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["Detailed human-readable diagnostic message regarding any invalid request parameters"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"401":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[401],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A human-readable diagnostic message detailing any authorization failure"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"500":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[500],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A descriptive error message"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"}}} as const
;
const PostBinanceDeactivationIntent = {"body":{"type":"object","description":"Request object to create a new deactivation intent for Binance.","required":["delegator_address","amount"],"properties":{"delegator_address":{"type":"string","description":"Binance beacon chain address.","format":"bech32","pattern":"^bnb[0-9a-z]+$","examples":["bnb13ym5szfmwh0wz9j8wr2lu2gaml94h895u9el2e"]},"amount":{"type":"string","description":"The smallest denomination of Binance Coin (BNB) is called Jager. 1 Jager =0.00000001 BNB.","pattern":"^[1-9]\\d+$","examples":["10000000000"]},"plan_id":{"type":"string","description":"This feature enables you to stake to validators from the specified plan(s). When no plan id is specified, validators across all plans that match the API route will be available for staking. If it is a shared plan, you can to stake to validators on a shared node from the specified plan.","examples":["plan_Wgx98Rbi8nQuL9ddn3mTk1"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"network":{"type":"string","description":"Binance network","enum":["mainnet","testnet"],"$schema":"https://json-schema.org/draft/2020-12/schema#"}},"required":["network"]}]},"response":{"200":{"type":"object","required":["binance","customer_id","deactivate_intent_id","network","protocol"],"description":"Response to a new deactivation intent request.","properties":{"deactivate_intent_id":{"type":"string","format":"uuid","description":"Unique idenifier for deactivate intent.","examples":["4ba06e89-8c29-483e-ac36-318de5aa7364"]},"customer_id":{"type":"string","description":"Unique identifier for a customer","minimum":1,"examples":["SatoshiNakamoto-xUYJbPw9hw"]},"protocol":{"type":"string","description":"Binance beacon chain protocol\n\n`binance`","enum":["binance"]},"network":{"type":"string","description":"Binance beacon chain network\n\n`mainnet` `testnet`","enum":["mainnet","testnet"]},"binance":{"type":"object","description":"Binance Deactivate Intent","required":["unsigned_transaction","delegator_address","validator_address","amount"],"properties":{"unsigned_transaction":{"type":"string","format":"base64","description":"Generated unsigned transaction smart contract call data.","examples":["0x22895118000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000120087fed394b43849eebef1e88873cd9efdbe33136656e5148e659b8b2f33625d40000000000000000000000000000000000000000000000000000000000000030b81748644e23c4d950f9dd709f3eb73d5eacd9657997e1d9dde7c4ebd8a6519ecb9d0a7fb603d3b68e023278f9650122000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020010000000000000000000000c509bb854c526af4cee5e037089f7aa8e091d8870000000000000000000000000000000000000000000000000000000000000060b36b79b4b206c0310472c117fa40c05342b5dc3e89f98f42c9da3ce6450d4c603cad55248017fd4eca3ab277cca64569193e4d487f5b2ea78a2bcdc81926c313c05842a3af318967a775783bba22519e8b8886587efa99aa7dab5784f792b187\n"]},"delegator_address":{"type":"string","description":"Binance beacon chain address.","format":"bech32","pattern":"^bnb[0-9a-z]+$","examples":["bnb13ym5szfmwh0wz9j8wr2lu2gaml94h895u9el2e"]},"validator_address":{"type":"string","description":"Binance beacon chain validator address.","format":"bech32","pattern":"^bva[0-9a-zA-Z]*$","examples":["bva1mrpf5n5e5knn3z9qng5pnex3m9pvyhg6434j0t"]},"amount":{"type":"string","description":"The smallest denomination of Binance Coin (BNB) is called Jager. 1 Jager =0.00000001 BNB.","pattern":"^[1-9]\\d+$","examples":["10000000000"]}}}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"400":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[400],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["Detailed human-readable diagnostic message regarding any invalid request parameters"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"401":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[401],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A human-readable diagnostic message detailing any authorization failure"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"500":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[500],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A descriptive error message"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"}}} as const
;
const PostBinanceRestakeIntent = {"body":{"type":"object","description":"Request object to create a new restake intent for Binance.","required":["delegator_address","old_validator_address","amount"],"properties":{"delegator_address":{"type":"string","description":"Binance beacon chain address.","format":"bech32","pattern":"^bnb[0-9a-z]+$","examples":["bnb13ym5szfmwh0wz9j8wr2lu2gaml94h895u9el2e"]},"old_validator_address":{"type":"string","description":"Binance beacon chain validator address.","format":"bech32","pattern":"^bva[0-9a-zA-Z]*$","examples":["bva1mrpf5n5e5knn3z9qng5pnex3m9pvyhg6434j0t"]},"amount":{"type":"string","description":"The smallest denomination of Binance Coin (BNB) is called Jager. 1 Jager =0.00000001 BNB.","pattern":"^[1-9]\\d+$","examples":["10000000000"]},"plan_id":{"type":"string","description":"This feature enables you to stake to validators from the specified plan(s). When no plan id is specified, validators across all plans that match the API route will be available for staking. If it is a shared plan, you can to stake to validators on a shared node from the specified plan.","examples":["plan_Wgx98Rbi8nQuL9ddn3mTk1"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"network":{"type":"string","description":"Binance network","enum":["mainnet","testnet"],"$schema":"https://json-schema.org/draft/2020-12/schema#"}},"required":["network"]}]},"response":{"201":{"type":"object","required":["customer_id","network","protocol","restake_intent_id"],"description":"Request object to create a new restake intent.","properties":{"restake_intent_id":{"type":"string","format":"uuid","description":"Unique idenifier for a restake intent.","examples":["4ba06e89-8c29-483e-ac36-318de5aa7364"]},"customer_id":{"type":"string","description":"Unique identifier for a customer","minimum":1,"examples":["SatoshiNakamoto-xUYJbPw9hw"]},"protocol":{"type":"string","description":"Blockchain protocol.\n\n`ethereum` `polkadot` `solana` `cosmos` `polygon` `near` `cardano` `avalanche` `binance`","enum":["ethereum","polkadot","solana","cosmos","polygon","near","cardano","avalanche","binance"]},"network":{"type":"string","description":"Protocol-specific network.\n\n`mainnet` `localnet` `goerli` `prater` `holesky` `testnet` `devnet` `kusama` `westend` `preprod` `fuji` `local`","enum":["mainnet","localnet","goerli","prater","holesky","testnet","devnet","kusama","westend","preprod","fuji","local"]},"cosmos":{"type":"object","description":"Cosmos Restake Intent","required":["unsigned_transaction","delegator_address","old_validator_address","new_validator_address","amount"],"properties":{"unsigned_transaction":{"type":"string","format":"base64","description":"Generated unsigned transaction smart contract call data.","examples":["0x22895118000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000120087fed394b43849eebef1e88873cd9efdbe33136656e5148e659b8b2f33625d40000000000000000000000000000000000000000000000000000000000000030b81748644e23c4d950f9dd709f3eb73d5eacd9657997e1d9dde7c4ebd8a6519ecb9d0a7fb603d3b68e023278f9650122000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020010000000000000000000000c509bb854c526af4cee5e037089f7aa8e091d8870000000000000000000000000000000000000000000000000000000000000060b36b79b4b206c0310472c117fa40c05342b5dc3e89f98f42c9da3ce6450d4c603cad55248017fd4eca3ab277cca64569193e4d487f5b2ea78a2bcdc81926c313c05842a3af318967a775783bba22519e8b8886587efa99aa7dab5784f792b187\n"]},"delegator_address":{"type":"string","description":"Public Key of an asymmetric key-pair.","format":"bech32","pattern":"^cosmos[1-9a-zA-Z]{39}$","examples":["cosmos1wvvhhfm387xvfnqshmdaunnpujjrdxznr5d5x9"]},"old_validator_address":{"type":"string","description":"Public Key of an asymmetric key-pair.","format":"bech32","pattern":"^cosmos[1-9a-zA-Z]{39}$","examples":["cosmos1wvvhhfm387xvfnqshmdaunnpujjrdxznr5d5x9"]},"new_validator_address":{"type":"string","description":"Public Key of an asymmetric key-pair.","format":"bech32","pattern":"^cosmos[1-9a-zA-Z]{39}$","examples":["cosmos1wvvhhfm387xvfnqshmdaunnpujjrdxznr5d5x9"]},"amount":{"type":"string","description":"Denomination of the cryptocurrency Cosmos.","pattern":"^[1-9]\\d+$","examples":["100"]}}},"binance":{"type":"object","description":"Binance Restake Intent","required":["unsigned_transaction","delegator_address","old_validator_address","new_validator_address","amount"],"properties":{"unsigned_transaction":{"type":"string","format":"base64","description":"Generated unsigned transaction smart contract call data.","examples":["0x22895118000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000120087fed394b43849eebef1e88873cd9efdbe33136656e5148e659b8b2f33625d40000000000000000000000000000000000000000000000000000000000000030b81748644e23c4d950f9dd709f3eb73d5eacd9657997e1d9dde7c4ebd8a6519ecb9d0a7fb603d3b68e023278f9650122000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020010000000000000000000000c509bb854c526af4cee5e037089f7aa8e091d8870000000000000000000000000000000000000000000000000000000000000060b36b79b4b206c0310472c117fa40c05342b5dc3e89f98f42c9da3ce6450d4c603cad55248017fd4eca3ab277cca64569193e4d487f5b2ea78a2bcdc81926c313c05842a3af318967a775783bba22519e8b8886587efa99aa7dab5784f792b187\n"]},"delegator_address":{"type":"string","description":"Binance beacon chain address.","format":"bech32","pattern":"^bnb[0-9a-z]+$","examples":["bnb13ym5szfmwh0wz9j8wr2lu2gaml94h895u9el2e"]},"old_validator_address":{"type":"string","description":"Binance beacon chain validator address.","format":"bech32","pattern":"^bva[0-9a-zA-Z]*$","examples":["bva1mrpf5n5e5knn3z9qng5pnex3m9pvyhg6434j0t"]},"new_validator_address":{"type":"string","description":"Binance beacon chain validator address.","format":"bech32","pattern":"^bva[0-9a-zA-Z]*$","examples":["bva1mrpf5n5e5knn3z9qng5pnex3m9pvyhg6434j0t"]},"amount":{"type":"string","description":"The smallest denomination of Binance Coin (BNB) is called Jager. 1 Jager =0.00000001 BNB.","pattern":"^[1-9]\\d+$","examples":["10000000000"]}}}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"400":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[400],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["Detailed human-readable diagnostic message regarding any invalid request parameters"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"401":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[401],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A human-readable diagnostic message detailing any authorization failure"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"500":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[500],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A descriptive error message"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"}}} as const
;
const PostBinanceStakeIntent = {"body":{"type":"object","description":"Individual binance stake","required":["amount","delegator_address"],"properties":{"amount":{"type":"string","description":"The smallest denomination of Binance Coin (BNB) is called Jager. 1 Jager =0.00000001 BNB.","pattern":"^[1-9]\\d+$","examples":["10000000000"]},"delegator_address":{"type":"string","description":"Binance beacon chain address.","format":"bech32","pattern":"^bnb[0-9a-z]+$","examples":["bnb13ym5szfmwh0wz9j8wr2lu2gaml94h895u9el2e"]},"plan_id":{"type":"string","description":"This feature enables you to stake to validators from the specified plan(s). When no plan id is specified, validators across all plans that match the API route will be available for staking. If it is a shared plan, you can to stake to validators on a shared node from the specified plan.","examples":["plan_Wgx98Rbi8nQuL9ddn3mTk1"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"network":{"type":"string","description":"Binance network","enum":["mainnet","testnet"],"$schema":"https://json-schema.org/draft/2020-12/schema#"}},"required":["network"]},{"type":"object","properties":{"Idempotency-Key":{"type":"string","format":"uuid","examples":["f1c971b4-7114-4c4b-8ad2-a6f9e33e2cd0"],"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"the unique idempotency key for this request"}},"required":[]}]},"response":{"200":{"type":"object","required":["binance","customer_id","network","protocol","stake_intent_id"],"properties":{"stake_intent_id":{"type":"string","format":"base58","description":"Unique idenifier for a group of stakes.","examples":["stake_intent_Wgx98Rbi8nQuL9ddn3mTk1"]},"customer_id":{"type":"string","description":"Unique identifier for a customer","minimum":1,"examples":["SatoshiNakamoto-xUYJbPw9hw"]},"plan_id":{"type":"string","description":"This feature enables you to stake to validators from the specified plan(s). When no plan id is specified, validators across all plans that match the API route will be available for staking. If it is a shared plan, you can to stake to validators on a shared node from the specified plan.","examples":["plan_Wgx98Rbi8nQuL9ddn3mTk1"]},"protocol":{"type":"string","description":"Binance beacon chain protocol\n\n`binance`","enum":["binance"]},"network":{"type":"string","description":"Binance beacon chain network\n\n`mainnet` `testnet`","enum":["mainnet","testnet"]},"binance":{"type":"object","description":"Binance Stake Intent response","required":["unsigned_transaction","amount","delegator_address","validator_address"],"properties":{"unsigned_transaction":{"type":"string","format":"base64","description":"Generated unsigned transaction smart contract call data.","examples":["0x22895118000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000120087fed394b43849eebef1e88873cd9efdbe33136656e5148e659b8b2f33625d40000000000000000000000000000000000000000000000000000000000000030b81748644e23c4d950f9dd709f3eb73d5eacd9657997e1d9dde7c4ebd8a6519ecb9d0a7fb603d3b68e023278f9650122000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020010000000000000000000000c509bb854c526af4cee5e037089f7aa8e091d8870000000000000000000000000000000000000000000000000000000000000060b36b79b4b206c0310472c117fa40c05342b5dc3e89f98f42c9da3ce6450d4c603cad55248017fd4eca3ab277cca64569193e4d487f5b2ea78a2bcdc81926c313c05842a3af318967a775783bba22519e8b8886587efa99aa7dab5784f792b187\n"]},"delegator_address":{"type":"string","description":"Binance beacon chain address.","format":"bech32","pattern":"^bnb[0-9a-z]+$","examples":["bnb13ym5szfmwh0wz9j8wr2lu2gaml94h895u9el2e"]},"validator_address":{"type":"string","description":"Binance beacon chain validator address.","format":"bech32","pattern":"^bva[0-9a-zA-Z]*$","examples":["bva1mrpf5n5e5knn3z9qng5pnex3m9pvyhg6434j0t"]},"amount":{"type":"string","description":"The smallest denomination of Binance Coin (BNB) is called Jager. 1 Jager =0.00000001 BNB.","pattern":"^[1-9]\\d+$","examples":["10000000000"]}}}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"400":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[400],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["Detailed human-readable diagnostic message regarding any invalid request parameters"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"401":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[401],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A human-readable diagnostic message detailing any authorization failure"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"500":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[500],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A descriptive error message"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"503":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[500],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A descriptive error message"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"}}} as const
;
const PostCardanoDeactivationIntent = {"body":{"type":"object","description":"Request object to create a new deactivation intent for Cardano.","required":["base_address"],"properties":{"base_address":{"type":"string","description":"bech32 encoded base address. [Accounts](https://cips.cardano.org/cips/cip19/).","format":"bech32","examples":["addr1vpu5vlrf4xkxv2qpwngf6cjhtw542ayty80v8dyr49rf5eg0yu80w"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"network":{"type":"string","description":"Cardano network","enum":["mainnet","preprod","localnet"],"$schema":"https://json-schema.org/draft/2020-12/schema#"}},"required":["network"]}]},"response":{"200":{"type":"object","required":["cardano","customer_id","deactivate_intent_id","network","protocol"],"description":"Response to a new deactivation intent request.","properties":{"deactivate_intent_id":{"type":"string","format":"uuid","description":"Unique idenifier for deactivate intent.","examples":["4ba06e89-8c29-483e-ac36-318de5aa7364"]},"customer_id":{"type":"string","description":"Unique identifier for a customer","minimum":1,"examples":["SatoshiNakamoto-xUYJbPw9hw"]},"protocol":{"type":"string","description":"Cardano protocol\n\n`cardano`","enum":["cardano"]},"network":{"type":"string","description":"Cardano network\n\n`mainnet` `preprod` `localnet`","enum":["mainnet","preprod","localnet"]},"cardano":{"type":"object","description":"Result of the new Deactivate Intent request.","required":["base_address","unsigned_transaction"],"properties":{"base_address":{"type":"string","description":"bech32 encoded base address. [Accounts](https://cips.cardano.org/cips/cip19/).","format":"bech32","examples":["addr1vpu5vlrf4xkxv2qpwngf6cjhtw542ayty80v8dyr49rf5eg0yu80w"]},"unsigned_transaction":{"type":"string","format":"base64","description":"Generated unsigned transaction smart contract call data.","examples":["0x22895118000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000120087fed394b43849eebef1e88873cd9efdbe33136656e5148e659b8b2f33625d40000000000000000000000000000000000000000000000000000000000000030b81748644e23c4d950f9dd709f3eb73d5eacd9657997e1d9dde7c4ebd8a6519ecb9d0a7fb603d3b68e023278f9650122000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020010000000000000000000000c509bb854c526af4cee5e037089f7aa8e091d8870000000000000000000000000000000000000000000000000000000000000060b36b79b4b206c0310472c117fa40c05342b5dc3e89f98f42c9da3ce6450d4c603cad55248017fd4eca3ab277cca64569193e4d487f5b2ea78a2bcdc81926c313c05842a3af318967a775783bba22519e8b8886587efa99aa7dab5784f792b187\n"]}}}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"400":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[400],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["Detailed human-readable diagnostic message regarding any invalid request parameters"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"401":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[401],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A human-readable diagnostic message detailing any authorization failure"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"500":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[500],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A descriptive error message"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"}}} as const
;
const PostCardanoRewardsWithdrawalIntent = {"body":{"oneOf":[{"type":"object","description":"Request object to create a new rewards withdrawal intent for Cardano.","required":["base_address"],"properties":{"base_address":{"type":"string","description":"bech32 encoded base address. [Accounts](https://cips.cardano.org/cips/cip19/).","format":"bech32","examples":["addr1vpu5vlrf4xkxv2qpwngf6cjhtw542ayty80v8dyr49rf5eg0yu80w"]}}}],"$schema":"https://json-schema.org/draft/2020-12/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"network":{"type":"string","description":"Cardano network","enum":["mainnet","preprod","localnet"],"$schema":"https://json-schema.org/draft/2020-12/schema#"}},"required":["network"]}]},"response":{"200":{"type":"object","required":["protocol","network","cardano","customer_id"],"properties":{"protocol":{"type":"string","description":"Cardano protocol\n\n`cardano`","enum":["cardano"]},"network":{"type":"string","description":"Cardano network\n\n`mainnet` `preprod` `localnet`","enum":["mainnet","preprod","localnet"]},"cardano":{"type":"object","required":["base_address","rewards_amount","unsigned_transaction"],"properties":{"base_address":{"type":"string","description":"bech32 encoded base address. [Accounts](https://cips.cardano.org/cips/cip19/).","format":"bech32","examples":["addr1vpu5vlrf4xkxv2qpwngf6cjhtw542ayty80v8dyr49rf5eg0yu80w"]},"rewards_amount":{"type":"string","description":"Denomination of the cryptocurrency Cardano.","pattern":"^[1-9]\\d+$","examples":["100"]},"unsigned_transaction":{"type":"string","format":"base64","description":"Generated unsigned transaction smart contract call data.","examples":["0x22895118000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000120087fed394b43849eebef1e88873cd9efdbe33136656e5148e659b8b2f33625d40000000000000000000000000000000000000000000000000000000000000030b81748644e23c4d950f9dd709f3eb73d5eacd9657997e1d9dde7c4ebd8a6519ecb9d0a7fb603d3b68e023278f9650122000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020010000000000000000000000c509bb854c526af4cee5e037089f7aa8e091d8870000000000000000000000000000000000000000000000000000000000000060b36b79b4b206c0310472c117fa40c05342b5dc3e89f98f42c9da3ce6450d4c603cad55248017fd4eca3ab277cca64569193e4d487f5b2ea78a2bcdc81926c313c05842a3af318967a775783bba22519e8b8886587efa99aa7dab5784f792b187\n"]}}},"customer_id":{"type":"string","description":"Unique identifier for a customer","minimum":1,"examples":["SatoshiNakamoto-xUYJbPw9hw"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"400":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[400],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["Detailed human-readable diagnostic message regarding any invalid request parameters"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"401":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[401],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A human-readable diagnostic message detailing any authorization failure"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"500":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[500],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A descriptive error message"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"}}} as const
;
const PostCardanoStakeIntent = {"body":{"type":"object","description":"Request object to create a new stake intent for Cardano protocol","required":["base_address"],"properties":{"base_address":{"type":"string","description":"bech32 encoded base address. [Accounts](https://cips.cardano.org/cips/cip19/).","format":"bech32","examples":["addr1vpu5vlrf4xkxv2qpwngf6cjhtw542ayty80v8dyr49rf5eg0yu80w"]},"plan_id":{"type":"string","description":"This feature enables you to stake to validators from the specified plan(s). When no plan id is specified, validators across all plans that match the API route will be available for staking. If it is a shared plan, you can to stake to validators on a shared node from the specified plan.","examples":["plan_Wgx98Rbi8nQuL9ddn3mTk1"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"network":{"type":"string","description":"Cardano network","enum":["mainnet","preprod","localnet"],"$schema":"https://json-schema.org/draft/2020-12/schema#"}},"required":["network"]},{"type":"object","properties":{"Idempotency-Key":{"type":"string","format":"uuid","examples":["f1c971b4-7114-4c4b-8ad2-a6f9e33e2cd0"],"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"the unique idempotency key for this request"}},"required":[]}]},"response":{"200":{"type":"object","required":["customer_id","network","protocol","stake_intent_id"],"properties":{"stake_intent_id":{"type":"string","format":"base58","description":"Unique idenifier for a group of stakes.","examples":["stake_intent_Wgx98Rbi8nQuL9ddn3mTk1"]},"customer_id":{"type":"string","description":"Unique identifier for a customer","minimum":1,"examples":["SatoshiNakamoto-xUYJbPw9hw"]},"plan_id":{"type":"string","description":"This feature enables you to stake to validators from the specified plan(s). When no plan id is specified, validators across all plans that match the API route will be available for staking. If it is a shared plan, you can to stake to validators on a shared node from the specified plan.","examples":["plan_Wgx98Rbi8nQuL9ddn3mTk1"]},"protocol":{"type":"string","description":"Cardano protocol\n\n`cardano`","enum":["cardano"]},"network":{"type":"string","description":"Cardano network\n\n`mainnet` `preprod` `localnet`","enum":["mainnet","preprod","localnet"]},"cardano":{"type":"object","description":"Cardano Protocol Stake Intent","required":["pool_id","unsigned_transaction","base_address"],"properties":{"pool_id":{"type":"string","description":"bech32 encoded pool id.","format":"bech32","examples":["pool1ev8fwfccn8gr0zcz3uyps0t0mcrefc6s95wjc6aed3ngc86y5rk"]},"unsigned_transaction":{"type":"string","format":"base64","description":"Generated unsigned transaction smart contract call data.","examples":["0x22895118000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000120087fed394b43849eebef1e88873cd9efdbe33136656e5148e659b8b2f33625d40000000000000000000000000000000000000000000000000000000000000030b81748644e23c4d950f9dd709f3eb73d5eacd9657997e1d9dde7c4ebd8a6519ecb9d0a7fb603d3b68e023278f9650122000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020010000000000000000000000c509bb854c526af4cee5e037089f7aa8e091d8870000000000000000000000000000000000000000000000000000000000000060b36b79b4b206c0310472c117fa40c05342b5dc3e89f98f42c9da3ce6450d4c603cad55248017fd4eca3ab277cca64569193e4d487f5b2ea78a2bcdc81926c313c05842a3af318967a775783bba22519e8b8886587efa99aa7dab5784f792b187\n"]},"base_address":{"type":"string","description":"bech32 encoded base address. [Accounts](https://cips.cardano.org/cips/cip19/).","format":"bech32","examples":["addr1vpu5vlrf4xkxv2qpwngf6cjhtw542ayty80v8dyr49rf5eg0yu80w"]}}}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"400":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[400],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["Detailed human-readable diagnostic message regarding any invalid request parameters"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"401":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[401],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A human-readable diagnostic message detailing any authorization failure"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"500":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[500],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A descriptive error message"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"503":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[500],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A descriptive error message"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"}}} as const
;
const PostCosmosDeactivationIntent = {"body":{"type":"object","description":"Request object to create a new deactivation intent for Cosmos.","required":["delegator_address","amount"],"properties":{"delegator_address":{"type":"string","description":"Public Key of an asymmetric key-pair.","format":"bech32","pattern":"^cosmos[1-9a-zA-Z]{39}$","examples":["cosmos1wvvhhfm387xvfnqshmdaunnpujjrdxznr5d5x9"]},"amount":{"type":"string","description":"Denomination of the cryptocurrency Cosmos.","pattern":"^[1-9]\\d+$","examples":["100"]},"plan_id":{"type":"string","description":"This feature enables you to stake to validators from the specified plan(s). When no plan id is specified, validators across all plans that match the API route will be available for staking. If it is a shared plan, you can to stake to validators on a shared node from the specified plan.","examples":["plan_Wgx98Rbi8nQuL9ddn3mTk1"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"network":{"type":"string","description":"Cosmos network","enum":["mainnet","testnet"],"$schema":"https://json-schema.org/draft/2020-12/schema#"}},"required":["network"]}]},"response":{"200":{"type":"object","required":["cosmos","customer_id","deactivate_intent_id","network","protocol"],"description":"Response to a new deactivation intent request.","properties":{"deactivate_intent_id":{"type":"string","format":"uuid","description":"Unique idenifier for deactivate intent.","examples":["4ba06e89-8c29-483e-ac36-318de5aa7364"]},"customer_id":{"type":"string","description":"Unique identifier for a customer","minimum":1,"examples":["SatoshiNakamoto-xUYJbPw9hw"]},"protocol":{"type":"string","description":"Cosmos protocol\n\n`cosmos`","enum":["cosmos"]},"network":{"type":"string","description":"Cosmos network\n\n`mainnet` `testnet`","enum":["mainnet","testnet"]},"cosmos":{"type":"object","description":"Cosmos Deactivate Intent","required":["unsigned_transaction","delegator_address","validator_address","amount"],"properties":{"unsigned_transaction":{"type":"string","format":"base64","description":"Generated unsigned transaction smart contract call data.","examples":["0x22895118000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000120087fed394b43849eebef1e88873cd9efdbe33136656e5148e659b8b2f33625d40000000000000000000000000000000000000000000000000000000000000030b81748644e23c4d950f9dd709f3eb73d5eacd9657997e1d9dde7c4ebd8a6519ecb9d0a7fb603d3b68e023278f9650122000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020010000000000000000000000c509bb854c526af4cee5e037089f7aa8e091d8870000000000000000000000000000000000000000000000000000000000000060b36b79b4b206c0310472c117fa40c05342b5dc3e89f98f42c9da3ce6450d4c603cad55248017fd4eca3ab277cca64569193e4d487f5b2ea78a2bcdc81926c313c05842a3af318967a775783bba22519e8b8886587efa99aa7dab5784f792b187\n"]},"delegator_address":{"type":"string","description":"Public Key of an asymmetric key-pair.","format":"bech32","pattern":"^cosmos[1-9a-zA-Z]{39}$","examples":["cosmos1wvvhhfm387xvfnqshmdaunnpujjrdxznr5d5x9"]},"validator_address":{"type":"string","description":"Public Key of an asymmetric key-pair.","format":"bech32","pattern":"^cosmos[1-9a-zA-Z]{39}$","examples":["cosmos1wvvhhfm387xvfnqshmdaunnpujjrdxznr5d5x9"]},"amount":{"type":"string","description":"Denomination of the cryptocurrency Cosmos.","pattern":"^[1-9]\\d+$","examples":["100"]}}}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"400":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[400],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["Detailed human-readable diagnostic message regarding any invalid request parameters"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"401":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[401],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A human-readable diagnostic message detailing any authorization failure"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"500":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[500],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A descriptive error message"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"}}} as const
;
const PostCosmosRestakeIntent = {"body":{"type":"object","description":"Request object to create a new restake intent for Cosmos.","required":["delegator_address","old_validator_address","amount"],"properties":{"delegator_address":{"type":"string","description":"Public Key of an asymmetric key-pair.","format":"bech32","pattern":"^cosmos[1-9a-zA-Z]{39}$","examples":["cosmos1wvvhhfm387xvfnqshmdaunnpujjrdxznr5d5x9"]},"old_validator_address":{"type":"string","description":"Public Key of an asymmetric key-pair.","format":"bech32","pattern":"^cosmos[1-9a-zA-Z]{39}$","examples":["cosmos1wvvhhfm387xvfnqshmdaunnpujjrdxznr5d5x9"]},"amount":{"type":"string","description":"Denomination of the cryptocurrency Cosmos.","pattern":"^[1-9]\\d+$","examples":["100"]},"plan_id":{"type":"string","description":"This feature enables you to stake to validators from the specified plan(s). When no plan id is specified, validators across all plans that match the API route will be available for staking. If it is a shared plan, you can to stake to validators on a shared node from the specified plan.","examples":["plan_Wgx98Rbi8nQuL9ddn3mTk1"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"network":{"type":"string","description":"Cosmos network","enum":["mainnet","testnet"],"$schema":"https://json-schema.org/draft/2020-12/schema#"}},"required":["network"]}]},"response":{"201":{"type":"object","required":["customer_id","network","protocol","restake_intent_id"],"description":"Request object to create a new restake intent.","properties":{"restake_intent_id":{"type":"string","format":"uuid","description":"Unique idenifier for a restake intent.","examples":["4ba06e89-8c29-483e-ac36-318de5aa7364"]},"customer_id":{"type":"string","description":"Unique identifier for a customer","minimum":1,"examples":["SatoshiNakamoto-xUYJbPw9hw"]},"protocol":{"type":"string","description":"Blockchain protocol.\n\n`ethereum` `polkadot` `solana` `cosmos` `polygon` `near` `cardano` `avalanche` `binance`","enum":["ethereum","polkadot","solana","cosmos","polygon","near","cardano","avalanche","binance"]},"network":{"type":"string","description":"Protocol-specific network.\n\n`mainnet` `localnet` `goerli` `prater` `holesky` `testnet` `devnet` `kusama` `westend` `preprod` `fuji` `local`","enum":["mainnet","localnet","goerli","prater","holesky","testnet","devnet","kusama","westend","preprod","fuji","local"]},"cosmos":{"type":"object","description":"Cosmos Restake Intent","required":["unsigned_transaction","delegator_address","old_validator_address","new_validator_address","amount"],"properties":{"unsigned_transaction":{"type":"string","format":"base64","description":"Generated unsigned transaction smart contract call data.","examples":["0x22895118000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000120087fed394b43849eebef1e88873cd9efdbe33136656e5148e659b8b2f33625d40000000000000000000000000000000000000000000000000000000000000030b81748644e23c4d950f9dd709f3eb73d5eacd9657997e1d9dde7c4ebd8a6519ecb9d0a7fb603d3b68e023278f9650122000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020010000000000000000000000c509bb854c526af4cee5e037089f7aa8e091d8870000000000000000000000000000000000000000000000000000000000000060b36b79b4b206c0310472c117fa40c05342b5dc3e89f98f42c9da3ce6450d4c603cad55248017fd4eca3ab277cca64569193e4d487f5b2ea78a2bcdc81926c313c05842a3af318967a775783bba22519e8b8886587efa99aa7dab5784f792b187\n"]},"delegator_address":{"type":"string","description":"Public Key of an asymmetric key-pair.","format":"bech32","pattern":"^cosmos[1-9a-zA-Z]{39}$","examples":["cosmos1wvvhhfm387xvfnqshmdaunnpujjrdxznr5d5x9"]},"old_validator_address":{"type":"string","description":"Public Key of an asymmetric key-pair.","format":"bech32","pattern":"^cosmos[1-9a-zA-Z]{39}$","examples":["cosmos1wvvhhfm387xvfnqshmdaunnpujjrdxznr5d5x9"]},"new_validator_address":{"type":"string","description":"Public Key of an asymmetric key-pair.","format":"bech32","pattern":"^cosmos[1-9a-zA-Z]{39}$","examples":["cosmos1wvvhhfm387xvfnqshmdaunnpujjrdxznr5d5x9"]},"amount":{"type":"string","description":"Denomination of the cryptocurrency Cosmos.","pattern":"^[1-9]\\d+$","examples":["100"]}}},"binance":{"type":"object","description":"Binance Restake Intent","required":["unsigned_transaction","delegator_address","old_validator_address","new_validator_address","amount"],"properties":{"unsigned_transaction":{"type":"string","format":"base64","description":"Generated unsigned transaction smart contract call data.","examples":["0x22895118000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000120087fed394b43849eebef1e88873cd9efdbe33136656e5148e659b8b2f33625d40000000000000000000000000000000000000000000000000000000000000030b81748644e23c4d950f9dd709f3eb73d5eacd9657997e1d9dde7c4ebd8a6519ecb9d0a7fb603d3b68e023278f9650122000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020010000000000000000000000c509bb854c526af4cee5e037089f7aa8e091d8870000000000000000000000000000000000000000000000000000000000000060b36b79b4b206c0310472c117fa40c05342b5dc3e89f98f42c9da3ce6450d4c603cad55248017fd4eca3ab277cca64569193e4d487f5b2ea78a2bcdc81926c313c05842a3af318967a775783bba22519e8b8886587efa99aa7dab5784f792b187\n"]},"delegator_address":{"type":"string","description":"Binance beacon chain address.","format":"bech32","pattern":"^bnb[0-9a-z]+$","examples":["bnb13ym5szfmwh0wz9j8wr2lu2gaml94h895u9el2e"]},"old_validator_address":{"type":"string","description":"Binance beacon chain validator address.","format":"bech32","pattern":"^bva[0-9a-zA-Z]*$","examples":["bva1mrpf5n5e5knn3z9qng5pnex3m9pvyhg6434j0t"]},"new_validator_address":{"type":"string","description":"Binance beacon chain validator address.","format":"bech32","pattern":"^bva[0-9a-zA-Z]*$","examples":["bva1mrpf5n5e5knn3z9qng5pnex3m9pvyhg6434j0t"]},"amount":{"type":"string","description":"The smallest denomination of Binance Coin (BNB) is called Jager. 1 Jager =0.00000001 BNB.","pattern":"^[1-9]\\d+$","examples":["10000000000"]}}}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"400":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[400],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["Detailed human-readable diagnostic message regarding any invalid request parameters"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"401":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[401],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A human-readable diagnostic message detailing any authorization failure"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"500":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[500],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A descriptive error message"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"}}} as const
;
const PostCosmosRewardsWithdrawalIntent = {"body":{"oneOf":[{"type":"object","description":"Request object to create a new rewards withdrawal intent for Cardano.","required":["delegator_address"],"properties":{"delegator_address":{"type":"string","description":"Public Key of an asymmetric key-pair.","format":"bech32","pattern":"^cosmos[1-9a-zA-Z]{39}$","examples":["cosmos1wvvhhfm387xvfnqshmdaunnpujjrdxznr5d5x9"]},"plan_id":{"type":"string","description":"This feature enables you to stake to validators from the specified plan(s). When no plan id is specified, validators across all plans that match the API route will be available for staking. If it is a shared plan, you can to stake to validators on a shared node from the specified plan.","examples":["plan_Wgx98Rbi8nQuL9ddn3mTk1"]}}}],"$schema":"https://json-schema.org/draft/2020-12/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"network":{"type":"string","description":"Cosmos network","enum":["mainnet","testnet"],"$schema":"https://json-schema.org/draft/2020-12/schema#"}},"required":["network"]}]},"response":{"200":{"type":"object","required":["protocol","network","cosmos","customer_id"],"properties":{"protocol":{"type":"string","description":"Cosmos protocol\n\n`cosmos`","enum":["cosmos"]},"network":{"type":"string","description":"Cosmos network\n\n`mainnet` `testnet`","enum":["mainnet","testnet"]},"cosmos":{"type":"object","required":["unsigned_transaction","delegator_address","validator_address","amount"],"properties":{"unsigned_transaction":{"type":"string","format":"base64","description":"Generated unsigned transaction smart contract call data.","examples":["0x22895118000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000120087fed394b43849eebef1e88873cd9efdbe33136656e5148e659b8b2f33625d40000000000000000000000000000000000000000000000000000000000000030b81748644e23c4d950f9dd709f3eb73d5eacd9657997e1d9dde7c4ebd8a6519ecb9d0a7fb603d3b68e023278f9650122000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020010000000000000000000000c509bb854c526af4cee5e037089f7aa8e091d8870000000000000000000000000000000000000000000000000000000000000060b36b79b4b206c0310472c117fa40c05342b5dc3e89f98f42c9da3ce6450d4c603cad55248017fd4eca3ab277cca64569193e4d487f5b2ea78a2bcdc81926c313c05842a3af318967a775783bba22519e8b8886587efa99aa7dab5784f792b187\n"]},"delegator_address":{"type":"string","description":"Public Key of an asymmetric key-pair.","format":"bech32","pattern":"^cosmos[1-9a-zA-Z]{39}$","examples":["cosmos1wvvhhfm387xvfnqshmdaunnpujjrdxznr5d5x9"]},"validator_address":{"type":"string","description":"Public Key of an asymmetric key-pair.","format":"bech32","pattern":"^cosmos[1-9a-zA-Z]{39}$","examples":["cosmos1wvvhhfm387xvfnqshmdaunnpujjrdxznr5d5x9"]},"amount":{"type":"string","description":"Denomination of the cryptocurrency Cosmos.","pattern":"^[1-9]\\d+$","examples":["100"]}}},"customer_id":{"type":"string","description":"Unique identifier for a customer","minimum":1,"examples":["SatoshiNakamoto-xUYJbPw9hw"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"400":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[400],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["Detailed human-readable diagnostic message regarding any invalid request parameters"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"401":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[401],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A human-readable diagnostic message detailing any authorization failure"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"500":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[500],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A descriptive error message"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"}}} as const
;
const PostCosmosStakeIntent = {"body":{"type":"object","description":"Individual cosmos stake","required":["amount","delegator_address"],"properties":{"amount":{"type":"string","description":"Denomination of the cryptocurrency Cosmos.","pattern":"^[1-9]\\d+$","examples":["100"]},"delegator_address":{"type":"string","description":"Public Key of an asymmetric key-pair.","format":"bech32","pattern":"^cosmos[1-9a-zA-Z]{39}$","examples":["cosmos1wvvhhfm387xvfnqshmdaunnpujjrdxznr5d5x9"]},"public_key":{"type":"object","description":"Cosmos public key description","required":["value","type"],"properties":{"value":{"type":"string","description":"Public Key of an asymmetric key-pair.","format":"base64","examples":["MTIzMDl3c2hka2Fqc2RoYXNramQ4OTEyM25oamtzaGRrcWplZ"]},"type":{"type":"string","description":"Cosmos public key types","enum":["ed25519","secp256k1"]}}},"plan_id":{"type":"string","description":"This feature enables you to stake to validators from the specified plan(s). When no plan id is specified, validators across all plans that match the API route will be available for staking. If it is a shared plan, you can to stake to validators on a shared node from the specified plan.","examples":["plan_Wgx98Rbi8nQuL9ddn3mTk1"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"network":{"type":"string","description":"Cosmos network","enum":["mainnet","testnet"],"$schema":"https://json-schema.org/draft/2020-12/schema#"}},"required":["network"]},{"type":"object","properties":{"Idempotency-Key":{"type":"string","format":"uuid","examples":["f1c971b4-7114-4c4b-8ad2-a6f9e33e2cd0"],"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"the unique idempotency key for this request"}},"required":[]}]},"response":{"200":{"type":"object","required":["customer_id","network","protocol","stake_intent_id"],"properties":{"stake_intent_id":{"type":"string","format":"base58","description":"Unique idenifier for a group of stakes.","examples":["stake_intent_Wgx98Rbi8nQuL9ddn3mTk1"]},"customer_id":{"type":"string","description":"Unique identifier for a customer","minimum":1,"examples":["SatoshiNakamoto-xUYJbPw9hw"]},"plan_id":{"type":"string","description":"This feature enables you to stake to validators from the specified plan(s). When no plan id is specified, validators across all plans that match the API route will be available for staking. If it is a shared plan, you can to stake to validators on a shared node from the specified plan.","examples":["plan_Wgx98Rbi8nQuL9ddn3mTk1"]},"protocol":{"type":"string","description":"Cosmos protocol\n\n`cosmos`","enum":["cosmos"]},"network":{"type":"string","description":"Cosmos network\n\n`mainnet` `testnet`","enum":["mainnet","testnet"]},"cosmos":{"type":"object","description":"Cosmos Stake Intent response","required":["unsigned_transaction","amount","delegator_address","validator_address"],"properties":{"unsigned_transaction":{"type":"string","format":"base64","description":"Generated unsigned transaction smart contract call data.","examples":["0x22895118000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000120087fed394b43849eebef1e88873cd9efdbe33136656e5148e659b8b2f33625d40000000000000000000000000000000000000000000000000000000000000030b81748644e23c4d950f9dd709f3eb73d5eacd9657997e1d9dde7c4ebd8a6519ecb9d0a7fb603d3b68e023278f9650122000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020010000000000000000000000c509bb854c526af4cee5e037089f7aa8e091d8870000000000000000000000000000000000000000000000000000000000000060b36b79b4b206c0310472c117fa40c05342b5dc3e89f98f42c9da3ce6450d4c603cad55248017fd4eca3ab277cca64569193e4d487f5b2ea78a2bcdc81926c313c05842a3af318967a775783bba22519e8b8886587efa99aa7dab5784f792b187\n"]},"delegator_address":{"type":"string","description":"Public Key of an asymmetric key-pair.","format":"bech32","pattern":"^cosmos[1-9a-zA-Z]{39}$","examples":["cosmos1wvvhhfm387xvfnqshmdaunnpujjrdxznr5d5x9"]},"validator_address":{"type":"string","description":"Public Key of an asymmetric key-pair.","format":"bech32","pattern":"^cosmos[1-9a-zA-Z]{39}$","examples":["cosmos1wvvhhfm387xvfnqshmdaunnpujjrdxznr5d5x9"]},"amount":{"type":"string","description":"Denomination of the cryptocurrency Cosmos.","pattern":"^[1-9]\\d+$","examples":["100"]}}}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"400":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[400],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["Detailed human-readable diagnostic message regarding any invalid request parameters"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"401":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[401],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A human-readable diagnostic message detailing any authorization failure"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"500":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[500],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A descriptive error message"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"503":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[500],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A descriptive error message"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"}}} as const
;
const PostEthereumStakeIntent = {"body":{"type":"object","description":"Stake intent for the Ethereum protocol.","required":["stakes"],"properties":{"stakes":{"type":"array","description":"Stakes for the Ethereum protocol.","minItems":1,"maxItems":250,"additionalProperties":false,"items":{"type":"object","description":"Details of a individual Ethereum Stake request.","required":["amount","withdrawal_address"],"properties":{"amount":{"type":"string","description":"Amount of ETH (denominated in Gwei).","pattern":"^[1-9]\\d{10,}$","examples":["32000000000"]},"withdrawal_address":{"type":"string","description":"Hex-encoded Ethereum [account or smart contract address](https://ethereum.org/en/developers/docs/accounts/).","format":"hex","pattern":"^0x[a-fA-F0-9]{40}$","examples":["0x00000000219ab540356cBB839Cbe05303d7705Fa"]},"quantity":{"type":"integer","format":"int32","description":"Number of validators to create that will share the same withdrawal credentials.","minimum":1,"maximum":2147483647},"fee_recipient":{"type":"string","description":"An Ethereum address to receive transaction fees from published blocks. 20-bytes, hex encoded with 0x prefix, case insensitive.","pattern":"^0x[a-fA-F0-9]{40}$","examples":["0x93247f2209abcacf57b75a51dafae777f9dd38bc"]}}}},"plan_id":{"type":"string","description":"This feature enables you to stake to validators from the specified plan(s). When no plan id is specified, validators across all plans that match the API route will be available for staking. If it is a shared plan, you can to stake to validators on a shared node from the specified plan.","examples":["plan_Wgx98Rbi8nQuL9ddn3mTk1"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"network":{"type":"string","description":"Ethereum network","enum":["mainnet","holesky"],"$schema":"https://json-schema.org/draft/2020-12/schema#"}},"required":["network"]},{"type":"object","properties":{"Idempotency-Key":{"type":"string","format":"uuid","examples":["f1c971b4-7114-4c4b-8ad2-a6f9e33e2cd0"],"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"the unique idempotency key for this request"}},"required":[]}]},"response":{"200":{"type":"object","required":["customer_id","network","protocol","stake_intent_id"],"properties":{"stake_intent_id":{"type":"string","format":"base58","description":"Unique idenifier for a group of stakes.","examples":["stake_intent_Wgx98Rbi8nQuL9ddn3mTk1"]},"customer_id":{"type":"string","description":"Unique identifier for a customer","minimum":1,"examples":["SatoshiNakamoto-xUYJbPw9hw"]},"plan_id":{"type":"string","description":"This feature enables you to stake to validators from the specified plan(s). When no plan id is specified, validators across all plans that match the API route will be available for staking. If it is a shared plan, you can to stake to validators on a shared node from the specified plan.","examples":["plan_Wgx98Rbi8nQuL9ddn3mTk1"]},"protocol":{"type":"string","description":"Ethereum protocol\n\n`ethereum`","enum":["ethereum"]},"network":{"type":"string","description":"Ethereum network\n\n`mainnet` `holesky`","enum":["mainnet","holesky"]},"ethereum":{"type":"object","description":"Ethereum Stake Intent response","required":["stakes","contract_address","unsigned_transaction","estimated_gas","expiration_time"],"properties":{"stakes":{"description":"Stakes being made.","type":"array","items":{"type":"object","description":"Individual Ethereum Stake Response","required":["stake_id","amount","validator_public_key","withdrawal_credentials","fee_recipient"],"properties":{"stake_id":{"description":"Unique stake identifier.","type":"string","format":"base58","examples":["stake_Wgx98Rbi8nQuL9ddn3mTk1"]},"amount":{"type":"string","description":"Amount of ETH (denominated in Gwei).","pattern":"^[1-9]\\d{10,}$","examples":["32000000000"]},"validator_public_key":{"type":"string","description":"A BLS public Key.","format":"base64","examples":["0xa1d1ad0714035353258038e964ae9675dc0252ee22cea896825c01458e1807bfad2f9969338798548d9858a571f7425c"]},"withdrawal_credentials":{"type":"string","format":"hex","pattern":"^0x0(0|1)[a-fA-F0-9]{62}$","description":"Hexadecimal encoded [withdrawal credentials](https://github.com/ethereum/consensus-specs/blob/master/specs/phase0/validator.md#withdrawal-credentials) which can be either a BLS public key or an Ethereum account address.\n\nThis parameter currently accepts ETH1 and BLS withdrawal credentials, but it is considered deprecated after the Capella/Shanghai fork. All users are now advised to use an ETH1 withdrawal address, specified through the `withdrawal_address` parameter as this is required to enable the ongoing accrual of rewards.\n\nFor more information regarding creating withdrawal credentials, please see the official [Ethereum Launchpad FAQ](https://launchpad.ethereum.org/en/faq#withdrawal-credentials).","examples":["0x0092c20062cee70389f1cb4fa566a2be5e2319ff43965db26dbaa3ce90b9df99"]},"fee_recipient":{"type":"string","description":"An Ethereum address to receive transaction fees from published blocks. 20-bytes, hex encoded with 0x prefix, case insensitive.","pattern":"^0x[a-fA-F0-9]{40}$","examples":["0x93247f2209abcacf57b75a51dafae777f9dd38bc"]}}}},"contract_address":{"type":"string","description":"Hex-encoded Ethereum [account or smart contract address](https://ethereum.org/en/developers/docs/accounts/).","format":"hex","pattern":"^0x[a-fA-F0-9]{40}$","examples":["0x00000000219ab540356cBB839Cbe05303d7705Fa"]},"unsigned_transaction":{"type":"string","format":"base64","description":"Generated unsigned transaction smart contract call data.","examples":["0x22895118000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000120087fed394b43849eebef1e88873cd9efdbe33136656e5148e659b8b2f33625d40000000000000000000000000000000000000000000000000000000000000030b81748644e23c4d950f9dd709f3eb73d5eacd9657997e1d9dde7c4ebd8a6519ecb9d0a7fb603d3b68e023278f9650122000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020010000000000000000000000c509bb854c526af4cee5e037089f7aa8e091d8870000000000000000000000000000000000000000000000000000000000000060b36b79b4b206c0310472c117fa40c05342b5dc3e89f98f42c9da3ce6450d4c603cad55248017fd4eca3ab277cca64569193e4d487f5b2ea78a2bcdc81926c313c05842a3af318967a775783bba22519e8b8886587efa99aa7dab5784f792b187\n"]},"estimated_gas":{"type":"integer","description":"Gas estimation of the transaction","format":"uint64","examples":[1001],"minimum":0,"maximum":18446744073709552000},"expiration_time":{"type":"integer","description":"Transaction expiration time","format":"int64","examples":[1689939023],"minimum":-9223372036854776000,"maximum":9223372036854776000}}}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"400":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[400],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["Detailed human-readable diagnostic message regarding any invalid request parameters"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"401":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[401],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A human-readable diagnostic message detailing any authorization failure"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"500":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[500],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A descriptive error message"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"503":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[500],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A descriptive error message"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"}}} as const
;
const PostNearDeactivationIntent = {"body":{"type":"object","description":"Request object to create a new deactivation intent for NEAR Protocol.","required":["amount","wallet_address","public_key"],"properties":{"amount":{"type":"string","description":"Amount of yoctoNEAR to deactivate. 1 NEAR = 1e24 yoctoNEAR","pattern":"^[1-9]\\d+$","examples":["100000000000000000000000000"]},"wallet_address":{"type":"string","description":"Base58 encoded public key or registered named account. [Accounts](https://docs.near.org/concepts/basics/accounts/account-id/).","pattern":"^([a-km-zA-HJ-NP-Z1-9]{22,44})|((([a-z\\d]+[-_])*[a-z\\d]+\\.)*([a-z\\d]+[-_])*[a-z\\d]+)$","examples":["alice.near"]},"public_key":{"type":"string","description":"Base58 encoded public key prefixed by ed25519, associated with the private key that will be used to sign the transaction.","pattern":"^ed25519:[a-km-zA-HJ-NP-Z1-9]{22,44}$","examples":["ed25519:Cxg2wgFYrdLTEkMu6j5D6aEZqTb3kXbmJygS48ZKbo1S"]},"to":{"type":"string","description":"Specifies the validator the stake was delegated to. Please note that specifying this parameter is only allowed for the `testnet` network.","pattern":"^([a-km-zA-HJ-NP-Z1-9]{22,44})|((([a-z\\d]+[-_])*[a-z\\d]+\\.)*([a-z\\d]+[-_])*[a-z\\d]+)$","examples":["alice.near"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"network":{"type":"string","description":"NEAR network","enum":["mainnet","testnet","localnet"],"$schema":"https://json-schema.org/draft/2020-12/schema#"}},"required":["network"]}]},"response":{"200":{"type":"object","required":["customer_id","deactivate_intent_id","near","network","protocol"],"description":"Response to a new deactivation intent request.","properties":{"deactivate_intent_id":{"type":"string","format":"uuid","description":"Unique idenifier for deactivate intent.","examples":["4ba06e89-8c29-483e-ac36-318de5aa7364"]},"customer_id":{"type":"string","description":"Unique identifier for a customer","minimum":1,"examples":["SatoshiNakamoto-xUYJbPw9hw"]},"protocol":{"type":"string","description":"Near protocol\n\n`near`","enum":["near"]},"network":{"type":"string","description":"NEAR network\n\n`mainnet` `testnet` `localnet`","enum":["mainnet","testnet","localnet"]},"near":{"type":"object","description":"NEAR Protocol Deactivate Intent","required":["to","unsigned_transaction","amount","wallet_address","public_key","expiration_time"],"properties":{"to":{"type":"string","description":"Base58 encoded public key or registered named account. [Accounts](https://docs.near.org/concepts/basics/accounts/account-id/).","pattern":"^([a-km-zA-HJ-NP-Z1-9]{22,44})|((([a-z\\d]+[-_])*[a-z\\d]+\\.)*([a-z\\d]+[-_])*[a-z\\d]+)$","examples":["alice.near"]},"unsigned_transaction":{"type":"string","format":"base64","description":"Generated unsigned transaction smart contract call data.","examples":["0x22895118000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000120087fed394b43849eebef1e88873cd9efdbe33136656e5148e659b8b2f33625d40000000000000000000000000000000000000000000000000000000000000030b81748644e23c4d950f9dd709f3eb73d5eacd9657997e1d9dde7c4ebd8a6519ecb9d0a7fb603d3b68e023278f9650122000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020010000000000000000000000c509bb854c526af4cee5e037089f7aa8e091d8870000000000000000000000000000000000000000000000000000000000000060b36b79b4b206c0310472c117fa40c05342b5dc3e89f98f42c9da3ce6450d4c603cad55248017fd4eca3ab277cca64569193e4d487f5b2ea78a2bcdc81926c313c05842a3af318967a775783bba22519e8b8886587efa99aa7dab5784f792b187\n"]},"amount":{"type":"string","description":"Denomination of NEAR Protocol.","pattern":"^[1-9]\\d+$","examples":["100000000000000000000000000"]},"wallet_address":{"type":"string","description":"Base58 encoded public key or registered named account. [Accounts](https://docs.near.org/concepts/basics/accounts/account-id/).","pattern":"^([a-km-zA-HJ-NP-Z1-9]{22,44})|((([a-z\\d]+[-_])*[a-z\\d]+\\.)*([a-z\\d]+[-_])*[a-z\\d]+)$","examples":["alice.near"]},"public_key":{"type":"string","description":"Base58 encoded public key prefixed by ed25519, associated with the private key that will be used to sign the transaction.","pattern":"^ed25519:[a-km-zA-HJ-NP-Z1-9]{22,44}$","examples":["ed25519:Cxg2wgFYrdLTEkMu6j5D6aEZqTb3kXbmJygS48ZKbo1S"]},"expiration_time":{"type":"integer","description":"Transaction expiration time","format":"int64","examples":[1689939023],"minimum":-9223372036854776000,"maximum":9223372036854776000}}}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"400":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[400],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["Detailed human-readable diagnostic message regarding any invalid request parameters"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"401":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[401],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A human-readable diagnostic message detailing any authorization failure"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"500":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[500],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A descriptive error message"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"}}} as const
;
const PostNearStakeIntent = {"body":{"type":"object","description":"Request object to create a new Stake Intent for NEAR Protocol","required":["amount","wallet_address","public_key"],"properties":{"amount":{"type":"string","description":"Amount of yoctoNEAR to stake. 1 NEAR = 1e24 yoctoNEAR.","pattern":"^[1-9]\\d+$","examples":["100000000000000000000000000"]},"wallet_address":{"type":"string","description":"Account to stake from (can be either [named account or implicit account](https://docs.near.org/concepts/basics/accounts/account-id/))","pattern":"^([a-km-zA-HJ-NP-Z1-9]{22,44})|((([a-z\\d]+[-_])*[a-z\\d]+\\.)*([a-z\\d]+[-_])*[a-z\\d]+)$","examples":["alice.near"]},"public_key":{"type":"string","description":"Must be the public key of the private key that will be used to sign the returned transaction. The public key must also be added as [FullAccess](https://docs.near.org/concepts/basics/accounts/access-keys#full-access-keys) key to the `wallet_address` account.","pattern":"^ed25519:[a-km-zA-HJ-NP-Z1-9]{22,44}$","examples":["ed25519:Cxg2wgFYrdLTEkMu6j5D6aEZqTb3kXbmJygS48ZKbo1S"]},"to":{"type":"string","description":"Specifies validator to delegate to. Please note that specifying this parameter is only allowed for the `testnet` network.","pattern":"^([a-km-zA-HJ-NP-Z1-9]{22,44})|((([a-z\\d]+[-_])*[a-z\\d]+\\.)*([a-z\\d]+[-_])*[a-z\\d]+)$","examples":["alice.near"]},"plan_id":{"type":"string","description":"This feature enables you to stake to validators from the specified plan(s). When no plan id is specified, validators across all plans that match the API route will be available for staking. If it is a shared plan, you can to stake to validators on a shared node from the specified plan.","examples":["plan_Wgx98Rbi8nQuL9ddn3mTk1"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"network":{"type":"string","description":"NEAR network","enum":["mainnet","testnet","localnet"],"$schema":"https://json-schema.org/draft/2020-12/schema#"}},"required":["network"]},{"type":"object","properties":{"Idempotency-Key":{"type":"string","format":"uuid","examples":["f1c971b4-7114-4c4b-8ad2-a6f9e33e2cd0"],"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"the unique idempotency key for this request"}},"required":[]}]},"response":{"200":{"type":"object","required":["customer_id","network","protocol","stake_intent_id"],"properties":{"stake_intent_id":{"type":"string","format":"base58","description":"Unique idenifier for a group of stakes.","examples":["stake_intent_Wgx98Rbi8nQuL9ddn3mTk1"]},"customer_id":{"type":"string","description":"Unique identifier for a customer","minimum":1,"examples":["SatoshiNakamoto-xUYJbPw9hw"]},"plan_id":{"type":"string","description":"This feature enables you to stake to validators from the specified plan(s). When no plan id is specified, validators across all plans that match the API route will be available for staking. If it is a shared plan, you can to stake to validators on a shared node from the specified plan.","examples":["plan_Wgx98Rbi8nQuL9ddn3mTk1"]},"protocol":{"type":"string","description":"Near protocol\n\n`near`","enum":["near"]},"network":{"type":"string","description":"NEAR network\n\n`mainnet` `testnet` `localnet`","enum":["mainnet","testnet","localnet"]},"near":{"type":"object","description":"NEAR Protocol Stake Intent","required":["to","unsigned_transaction","amount","wallet_address","public_key","expiration_time"],"properties":{"to":{"type":"string","description":"Base58 encoded public key or registered named account. [Accounts](https://docs.near.org/concepts/basics/accounts/account-id/).","pattern":"^([a-km-zA-HJ-NP-Z1-9]{22,44})|((([a-z\\d]+[-_])*[a-z\\d]+\\.)*([a-z\\d]+[-_])*[a-z\\d]+)$","examples":["alice.near"]},"unsigned_transaction":{"type":"string","format":"base64","description":"Generated unsigned transaction smart contract call data.","examples":["0x22895118000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000120087fed394b43849eebef1e88873cd9efdbe33136656e5148e659b8b2f33625d40000000000000000000000000000000000000000000000000000000000000030b81748644e23c4d950f9dd709f3eb73d5eacd9657997e1d9dde7c4ebd8a6519ecb9d0a7fb603d3b68e023278f9650122000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020010000000000000000000000c509bb854c526af4cee5e037089f7aa8e091d8870000000000000000000000000000000000000000000000000000000000000060b36b79b4b206c0310472c117fa40c05342b5dc3e89f98f42c9da3ce6450d4c603cad55248017fd4eca3ab277cca64569193e4d487f5b2ea78a2bcdc81926c313c05842a3af318967a775783bba22519e8b8886587efa99aa7dab5784f792b187\n"]},"amount":{"type":"string","description":"Denomination of NEAR Protocol.","pattern":"^[1-9]\\d+$","examples":["100000000000000000000000000"]},"wallet_address":{"type":"string","description":"Base58 encoded public key or registered named account. [Accounts](https://docs.near.org/concepts/basics/accounts/account-id/).","pattern":"^([a-km-zA-HJ-NP-Z1-9]{22,44})|((([a-z\\d]+[-_])*[a-z\\d]+\\.)*([a-z\\d]+[-_])*[a-z\\d]+)$","examples":["alice.near"]},"public_key":{"type":"string","description":"Base58 encoded public key prefixed by ed25519, associated with the private key that will be used to sign the transaction.","pattern":"^ed25519:[a-km-zA-HJ-NP-Z1-9]{22,44}$","examples":["ed25519:Cxg2wgFYrdLTEkMu6j5D6aEZqTb3kXbmJygS48ZKbo1S"]},"expiration_time":{"type":"integer","description":"Transaction expiration time","format":"int64","examples":[1689939023],"minimum":-9223372036854776000,"maximum":9223372036854776000}}}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"400":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[400],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["Detailed human-readable diagnostic message regarding any invalid request parameters"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"401":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[401],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A human-readable diagnostic message detailing any authorization failure"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"500":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[500],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A descriptive error message"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"503":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[500],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A descriptive error message"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"}}} as const
;
const PostNearWithdrawalIntent = {"body":{"type":"object","description":"Request object to create a new withdrawal intent for NEAR.","required":["wallet_address","public_key"],"properties":{"wallet_address":{"type":"string","description":"Base58 encoded public key or registered named account. [Accounts](https://docs.near.org/concepts/basics/accounts/account-id/).","pattern":"^([a-km-zA-HJ-NP-Z1-9]{22,44})|((([a-z\\d]+[-_])*[a-z\\d]+\\.)*([a-z\\d]+[-_])*[a-z\\d]+)$","examples":["alice.near"]},"public_key":{"type":"string","description":"Base58 encoded public key prefixed by ed25519, associated with the private key that will be used to sign the transaction.","pattern":"^ed25519:[a-km-zA-HJ-NP-Z1-9]{22,44}$","examples":["ed25519:Cxg2wgFYrdLTEkMu6j5D6aEZqTb3kXbmJygS48ZKbo1S"]},"to":{"type":"string","description":"Specifies the validator the stake was delegated to. Please note that specifying this parameter is only allowed for the `testnet` network.","pattern":"^([a-km-zA-HJ-NP-Z1-9]{22,44})|((([a-z\\d]+[-_])*[a-z\\d]+\\.)*([a-z\\d]+[-_])*[a-z\\d]+)$","examples":["alice.near"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"network":{"type":"string","description":"NEAR network","enum":["mainnet","testnet","localnet"],"$schema":"https://json-schema.org/draft/2020-12/schema#"}},"required":["network"]}]},"response":{"200":{"type":"object","required":["customer_id","network","protocol","withdraw_intent_id"],"description":"Result of a new withdrawal intent request.","properties":{"withdraw_intent_id":{"type":"string","format":"uuid","description":"Unique idenifier for a withdrawal intent.","examples":["4ba06e89-8c29-483e-ac36-318de5aa7364"]},"customer_id":{"type":"string","description":"Unique identifier for a customer","minimum":1,"examples":["SatoshiNakamoto-xUYJbPw9hw"]},"protocol":{"type":"string","description":"Near protocol\n\n`near`","enum":["near"]},"network":{"type":"string","description":"NEAR network\n\n`mainnet` `testnet` `localnet`","enum":["mainnet","testnet","localnet"]},"near":{"type":"object","description":"NEAR Protocol Withdrawal Intent","required":["to","unsigned_transaction","wallet_address","public_key","withdrawal_intent_id","expiration_time"],"properties":{"withdrawal_intent_id":{"type":"string","format":"uuid","description":"Unique idenifier for deactivate intent.","examples":["4ba06e89-8c29-483e-ac36-318de5aa7364"]},"to":{"type":"string","description":"Base58 encoded public key or registered named account. [Accounts](https://docs.near.org/concepts/basics/accounts/account-id/).","pattern":"^([a-km-zA-HJ-NP-Z1-9]{22,44})|((([a-z\\d]+[-_])*[a-z\\d]+\\.)*([a-z\\d]+[-_])*[a-z\\d]+)$","examples":["alice.near"]},"unsigned_transaction":{"type":"string","format":"base64","description":"Generated unsigned transaction smart contract call data.","examples":["0x22895118000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000120087fed394b43849eebef1e88873cd9efdbe33136656e5148e659b8b2f33625d40000000000000000000000000000000000000000000000000000000000000030b81748644e23c4d950f9dd709f3eb73d5eacd9657997e1d9dde7c4ebd8a6519ecb9d0a7fb603d3b68e023278f9650122000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020010000000000000000000000c509bb854c526af4cee5e037089f7aa8e091d8870000000000000000000000000000000000000000000000000000000000000060b36b79b4b206c0310472c117fa40c05342b5dc3e89f98f42c9da3ce6450d4c603cad55248017fd4eca3ab277cca64569193e4d487f5b2ea78a2bcdc81926c313c05842a3af318967a775783bba22519e8b8886587efa99aa7dab5784f792b187\n"]},"amount":{"type":"string","description":"Denomination of NEAR Protocol.","pattern":"^[1-9]\\d+$","examples":["100000000000000000000000000"]},"wallet_address":{"type":"string","description":"Base58 encoded public key or registered named account. [Accounts](https://docs.near.org/concepts/basics/accounts/account-id/).","pattern":"^([a-km-zA-HJ-NP-Z1-9]{22,44})|((([a-z\\d]+[-_])*[a-z\\d]+\\.)*([a-z\\d]+[-_])*[a-z\\d]+)$","examples":["alice.near"]},"public_key":{"type":"string","description":"Base58 encoded public key prefixed by ed25519, associated with the private key that will be used to sign the transaction.","pattern":"^ed25519:[a-km-zA-HJ-NP-Z1-9]{22,44}$","examples":["ed25519:Cxg2wgFYrdLTEkMu6j5D6aEZqTb3kXbmJygS48ZKbo1S"]},"expiration_time":{"type":"integer","description":"Transaction expiration time","format":"int64","examples":[1689939023],"minimum":-9223372036854776000,"maximum":9223372036854776000}}}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"400":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[400],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["Detailed human-readable diagnostic message regarding any invalid request parameters"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"401":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[401],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A human-readable diagnostic message detailing any authorization failure"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"500":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[500],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A descriptive error message"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"}}} as const
;
const PostPolkadotDeactivateIntent = {"body":{"type":"object","description":"Request object to create a new deactivation intent for Polkadot.","properties":{"customer_address":{"description":"Address of the customer account to deactivate.","type":"string","format":"base58","pattern":"^[1-9A-HJ-NP-Za-km-z]{44}$","examples":["5xot9PVkphiX2adznghwrAuxGs2zeWisNSxMW6hU6Hkj"]},"controller_address":{"description":"Address of the customer account to deactivate.\nSame as customer_address. Deprecated - will be removed in a later version.","type":"string","format":"base58","pattern":"^[1-9A-HJ-NP-Za-km-z]{44}$","examples":["5xot9PVkphiX2adznghwrAuxGs2zeWisNSxMW6hU6Hkj"]},"amount":{"description":"Amount of DOT to unbond. If not supplied, the entire active stake is unbonded.","type":"string","pattern":"^[1-9]\\d+$","examples":["100"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"network":{"type":"string","description":"Polkadot network","enum":["mainnet","kusama","westend"],"$schema":"https://json-schema.org/draft/2020-12/schema#"}},"required":["network"]}]},"response":{"200":{"type":"object","required":["customer_id","deactivate_intent_id","network","polkadot","protocol"],"description":"Response to a new deactivation intent request.","properties":{"deactivate_intent_id":{"type":"string","format":"uuid","description":"Unique idenifier for deactivate intent.","examples":["4ba06e89-8c29-483e-ac36-318de5aa7364"]},"customer_id":{"type":"string","description":"Unique identifier for a customer","minimum":1,"examples":["SatoshiNakamoto-xUYJbPw9hw"]},"protocol":{"type":"string","description":"Polkadot protocol\n\n`polkadot`","enum":["polkadot"]},"network":{"type":"string","description":"Coin network\n\n`mainnet` `kusama` `westend`","enum":["mainnet","kusama","westend"]},"polkadot":{"type":"object","description":"Polkadot Deactivate Intent Response","required":["unsigned_transaction","proxy_address","amount","deactivationType"],"properties":{"unsigned_transaction":{"description":"Unsigned remove proxy transaction.\nOnce this transaction is signed, broadcasted to the network and included in the canonical history of the chain, the specified amount will be removed from the staked amount. If the amount is the entire stake, the proxy account of Blockdaemon will be unbound from the customer account.","type":"string","format":"base64","examples":["0xd00410020c0606060202286bee1602008c16e19e94328985d65cb7e3245213892730dd0e841f6511478cb12f23a178330100000000"]},"customer_address":{"description":"Address of the customer account from which the proxy will be removed.","type":"string","format":"base58","pattern":"^[1-9A-HJ-NP-Za-km-z]{44}$","examples":["5xot9PVkphiX2adznghwrAuxGs2zeWisNSxMW6hU6Hkj"]},"controller_address":{"description":"Address of the customer account from which the proxy will be removed.\nSame as customer_address. Deprecated - will be removed in a later version.","type":"string","format":"base58","pattern":"^[1-9A-HJ-NP-Za-km-z]{44}$","examples":["5xot9PVkphiX2adznghwrAuxGs2zeWisNSxMW6hU6Hkj"]},"proxy_address":{"description":"Address of the proxy account that will be removed from the customer account.","type":"string","format":"base58","pattern":"^[1-9A-HJ-NP-Za-km-z]{44}$","examples":["5xot9PVkphiX2adznghwrAuxGs2zeWisNSxMW6hU6Hkj"]},"amount":{"description":"Amount of DOT that will be unbond.","type":"string","pattern":"^[1-9]\\d+$","examples":["100"]},"deactivationType":{"description":"Type of deactivation.\nThis can be either \"full\" or \"partial\". If \"full\" is specified, the entire stake will be removed from the proxy account. If \"partial\" is specified, the amount specified in the amount field will be removed from the proxy account.\n\n`full` `partial`","type":"string","enum":["full","partial"]}}}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"400":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[400],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["Detailed human-readable diagnostic message regarding any invalid request parameters"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"401":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[401],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A human-readable diagnostic message detailing any authorization failure"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"500":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[500],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A descriptive error message"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"}}} as const
;
const PostPolkadotStakeIntent = {"body":{"type":"object","description":"Request object to create a new Stake Intent for Polkadot.","properties":{"customer_address":{"description":"Address of the customer account whose DOT will be staked.","type":"string","format":"base58","pattern":"^[1-9A-HJ-NP-Za-km-z]{44}$","examples":["5xot9PVkphiX2adznghwrAuxGs2zeWisNSxMW6hU6Hkj"]},"controller_address":{"description":"Address of the customer account whose DOT will be staked.\nSame as customer_address. Deprecated - will be removed in a later version.","type":"string","format":"base58","pattern":"^[1-9A-HJ-NP-Za-km-z]{44}$","examples":["5xot9PVkphiX2adznghwrAuxGs2zeWisNSxMW6hU6Hkj"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"network":{"type":"string","description":"Polkadot network","enum":["mainnet","kusama","westend"],"$schema":"https://json-schema.org/draft/2020-12/schema#"}},"required":["network"]},{"type":"object","properties":{"Idempotency-Key":{"type":"string","format":"uuid","examples":["f1c971b4-7114-4c4b-8ad2-a6f9e33e2cd0"],"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"the unique idempotency key for this request"}},"required":[]}]},"response":{"200":{"type":"object","required":["customer_id","network","protocol","stake_intent_id"],"properties":{"stake_intent_id":{"type":"string","format":"base58","description":"Unique idenifier for a group of stakes.","examples":["stake_intent_Wgx98Rbi8nQuL9ddn3mTk1"]},"customer_id":{"type":"string","description":"Unique identifier for a customer","minimum":1,"examples":["SatoshiNakamoto-xUYJbPw9hw"]},"plan_id":{"type":"string","description":"This feature enables you to stake to validators from the specified plan(s). When no plan id is specified, validators across all plans that match the API route will be available for staking. If it is a shared plan, you can to stake to validators on a shared node from the specified plan.","examples":["plan_Wgx98Rbi8nQuL9ddn3mTk1"]},"protocol":{"type":"string","description":"Polkadot protocol\n\n`polkadot`","enum":["polkadot"]},"network":{"type":"string","description":"Coin network\n\n`mainnet` `kusama` `westend`","enum":["mainnet","kusama","westend"]},"polkadot":{"type":"object","description":"Polkadot Stake Intent Response","required":["stake_id","unsigned_transaction","proxy_address"],"properties":{"unsigned_transaction":{"description":"Unsigned transaction that bonds a Blockdaemon's proxy account to the given customer account.\nOnce this transaction is signed, broadcasted to the network and included in the canonical history of the chain, the proxy account will be associated with the customer account.","type":"string","format":"base64","examples":["0xa4041601008c16e19e94328985d65cb7e3245213892730dd0e841f6511478cb12f23a178330100000000"]},"customer_address":{"description":"Address of the customer account to associate with the proxy account.","type":"string","format":"base58","pattern":"^[1-9A-HJ-NP-Za-km-z]{44}$","examples":["5xot9PVkphiX2adznghwrAuxGs2zeWisNSxMW6hU6Hkj"]},"controller_address":{"description":"Address of the customer account to associate with the proxy account.\nSame as customer_address. Deprecated - will be removed in a later version.","type":"string","format":"base58","pattern":"^[1-9A-HJ-NP-Za-km-z]{44}$","examples":["5xot9PVkphiX2adznghwrAuxGs2zeWisNSxMW6hU6Hkj"]},"proxy_address":{"description":"Address of the proxy account to associate with the customer account.","type":"string","format":"base58","pattern":"^[1-9A-HJ-NP-Za-km-z]{44}$","examples":["5xot9PVkphiX2adznghwrAuxGs2zeWisNSxMW6hU6Hkj"]}}}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"400":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[400],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["Detailed human-readable diagnostic message regarding any invalid request parameters"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"401":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[401],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A human-readable diagnostic message detailing any authorization failure"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"500":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[500],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A descriptive error message"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"503":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[500],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A descriptive error message"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"}}} as const
;
const PostPolkadotWithdrawalIntent = {"body":{"type":"object","description":"Request object to create a new withdrawal intent for Polkadot.","properties":{"customer_address":{"description":"Address of the customer account that will be affected by the withdrawal intent.","type":"string","format":"base58","pattern":"^[1-9A-HJ-NP-Za-km-z]{44}$","examples":["5xot9PVkphiX2adznghwrAuxGs2zeWisNSxMW6hU6Hkj"]},"controller_address":{"description":"Address of the customer account that will be affected by the withdrawal intent.\nSame as customer_address. Deprecated - will be removed in a later version.","type":"string","format":"base58","pattern":"^[1-9A-HJ-NP-Za-km-z]{44}$","examples":["5xot9PVkphiX2adznghwrAuxGs2zeWisNSxMW6hU6Hkj"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"network":{"type":"string","description":"Polkadot network","enum":["mainnet","kusama","westend"],"$schema":"https://json-schema.org/draft/2020-12/schema#"}},"required":["network"]}]},"response":{"200":{"type":"object","description":"Result of a new withdrawal intent request.","required":["withdraw_intent_id"],"properties":{"protocol":{"type":"string","enum":["polkadot"],"description":"`polkadot`"},"network":{"type":"string","description":"Coin network\n\n`mainnet` `kusama` `westend`","enum":["mainnet","kusama","westend"]},"customer_id":{"type":"string","description":"Unique identifier for a customer","minimum":1,"examples":["SatoshiNakamoto-xUYJbPw9hw"]},"withdraw_intent_id":{"type":"string","format":"uuid","description":"Unique idenifier for a withdrawal intent.","examples":["4ba06e89-8c29-483e-ac36-318de5aa7364"]},"polkadot":{"type":"object","description":"Polkadot withdrawal intent response","required":["unsigned_transaction"],"properties":{"unsigned_transaction":{"type":"string","format":"base64","description":"Unsigned withdraw intent transaction.\nOnce this transaction is signed, broadcasted to the network and included in the canonical history of the chain, the unbonded stake controlled by this customer account will be withdrawn from its stake pool.","examples":["0x1c04060301000000"]},"customer_address":{"description":"Address of the customer account whose unbonded stake will be withdrawn.","type":"string","format":"base58","pattern":"^[1-9A-HJ-NP-Za-km-z]{44}$","examples":["5xot9PVkphiX2adznghwrAuxGs2zeWisNSxMW6hU6Hkj"]},"controller_address":{"description":"Address of the customer account whose unbonded stake will be withdrawn.\nSame as customer_address. Deprecated - will be removed in a later version.","type":"string","format":"base58","pattern":"^[1-9A-HJ-NP-Za-km-z]{44}$","examples":["5xot9PVkphiX2adznghwrAuxGs2zeWisNSxMW6hU6Hkj"]}}}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"400":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[400],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["Detailed human-readable diagnostic message regarding any invalid request parameters"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"401":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[401],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A human-readable diagnostic message detailing any authorization failure"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"500":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[500],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A descriptive error message"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"}}} as const
;
const PostPolygonBootstrappingIntent = {"body":{"type":"object","description":"Request object to create a new Bootstrapping Intent for Polygon.","required":["wallet_address"],"properties":{"wallet_address":{"type":"string","description":"Hex-encoded Ethereum [account or smart contract address](https://ethereum.org/en/developers/docs/accounts/).","format":"hex","pattern":"^0x[a-fA-F0-9]{40}$","examples":["0x00000000219ab540356cBB839Cbe05303d7705Fa"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"network":{"type":"string","description":"Polygon network","enum":["mainnet","goerli","prater"],"$schema":"https://json-schema.org/draft/2020-12/schema#"}},"required":["network"]}]},"response":{"200":{"type":"object","required":["protocol","network","customer_id"],"properties":{"protocol":{"type":"string","description":"Blockchain protocol.\n\n`ethereum` `polkadot` `solana` `cosmos` `polygon` `near` `cardano` `avalanche` `binance`","enum":["ethereum","polkadot","solana","cosmos","polygon","near","cardano","avalanche","binance"],"examples":["polygon"]},"network":{"type":"string","description":"Protocol-specific network.\n\n`mainnet` `localnet` `goerli` `prater` `holesky` `testnet` `devnet` `kusama` `westend` `preprod` `fuji` `local`","enum":["mainnet","localnet","goerli","prater","holesky","testnet","devnet","kusama","westend","preprod","fuji","local"]},"polygon":{"type":"object","description":"Polygon Bootstrapping Intent","required":["to","unsigned_transaction","wallet_address"],"properties":{"to":{"type":"string","description":"Hex-encoded Ethereum [account or smart contract address](https://ethereum.org/en/developers/docs/accounts/).","format":"hex","pattern":"^0x[a-fA-F0-9]{40}$","examples":["0x00000000219ab540356cBB839Cbe05303d7705Fa"]},"unsigned_transaction":{"type":"string","format":"base64","description":"Generated unsigned transaction smart contract call data.","examples":["0x22895118000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000120087fed394b43849eebef1e88873cd9efdbe33136656e5148e659b8b2f33625d40000000000000000000000000000000000000000000000000000000000000030b81748644e23c4d950f9dd709f3eb73d5eacd9657997e1d9dde7c4ebd8a6519ecb9d0a7fb603d3b68e023278f9650122000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020010000000000000000000000c509bb854c526af4cee5e037089f7aa8e091d8870000000000000000000000000000000000000000000000000000000000000060b36b79b4b206c0310472c117fa40c05342b5dc3e89f98f42c9da3ce6450d4c603cad55248017fd4eca3ab277cca64569193e4d487f5b2ea78a2bcdc81926c313c05842a3af318967a775783bba22519e8b8886587efa99aa7dab5784f792b187\n"]},"wallet_address":{"type":"string","description":"Hex-encoded Ethereum [account or smart contract address](https://ethereum.org/en/developers/docs/accounts/).","format":"hex","pattern":"^0x[a-fA-F0-9]{40}$","examples":["0x00000000219ab540356cBB839Cbe05303d7705Fa"]}}},"customer_id":{"type":"string","description":"Unique identifier for a customer","minimum":1,"examples":["SatoshiNakamoto-xUYJbPw9hw"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"400":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[400],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["Detailed human-readable diagnostic message regarding any invalid request parameters"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"401":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[401],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A human-readable diagnostic message detailing any authorization failure"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"500":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[500],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A descriptive error message"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"}}} as const
;
const PostPolygonDeactivationIntent = {"body":{"type":"object","description":"Request object to create a new deactivation intent for Polygon.","required":["amount","wallet_address"],"properties":{"amount":{"type":"string","description":"Denomination of the cryptocurrency Polygon.","pattern":"^[1-9]\\d+$","examples":["100"]},"wallet_address":{"type":"string","description":"Hex-encoded Ethereum [account or smart contract address](https://ethereum.org/en/developers/docs/accounts/).","format":"hex","pattern":"^0x[a-fA-F0-9]{40}$","examples":["0x00000000219ab540356cBB839Cbe05303d7705Fa"]},"validator_share_address":{"type":"string","description":"Hex-encoded Ethereum [account or smart contract address](https://ethereum.org/en/developers/docs/accounts/).","format":"hex","pattern":"^0x[a-fA-F0-9]{40}$","examples":["0x00000000219ab540356cBB839Cbe05303d7705Fa"]},"plan_id":{"type":"string","description":"This feature enables you to stake to validators from the specified plan(s). When no plan id is specified, validators across all plans that match the API route will be available for staking. If it is a shared plan, you can to stake to validators on a shared node from the specified plan.","examples":["plan_Wgx98Rbi8nQuL9ddn3mTk1"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"network":{"type":"string","description":"Polygon network","enum":["mainnet","goerli","prater"],"$schema":"https://json-schema.org/draft/2020-12/schema#"}},"required":["network"]}]},"response":{"200":{"type":"object","required":["customer_id","deactivate_intent_id","network","polygon","protocol"],"description":"Response to a new deactivation intent request.","properties":{"deactivate_intent_id":{"type":"string","format":"uuid","description":"Unique idenifier for deactivate intent.","examples":["4ba06e89-8c29-483e-ac36-318de5aa7364"]},"customer_id":{"type":"string","description":"Unique identifier for a customer","minimum":1,"examples":["SatoshiNakamoto-xUYJbPw9hw"]},"protocol":{"type":"string","description":"Polygon protocol\n\n`polygon`","enum":["polygon"]},"network":{"type":"string","description":"Polygon network\n\n`mainnet` `goerli` `prater`","enum":["mainnet","goerli","prater"]},"polygon":{"type":"object","description":"Polygon Deactivate Intent","required":["to","unsigned_transaction","amount","wallet_address"],"properties":{"to":{"type":"string","description":"Hex-encoded Ethereum [account or smart contract address](https://ethereum.org/en/developers/docs/accounts/).","format":"hex","pattern":"^0x[a-fA-F0-9]{40}$","examples":["0x00000000219ab540356cBB839Cbe05303d7705Fa"]},"unsigned_transaction":{"type":"string","format":"base64","description":"Generated unsigned transaction smart contract call data.","examples":["0x22895118000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000120087fed394b43849eebef1e88873cd9efdbe33136656e5148e659b8b2f33625d40000000000000000000000000000000000000000000000000000000000000030b81748644e23c4d950f9dd709f3eb73d5eacd9657997e1d9dde7c4ebd8a6519ecb9d0a7fb603d3b68e023278f9650122000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020010000000000000000000000c509bb854c526af4cee5e037089f7aa8e091d8870000000000000000000000000000000000000000000000000000000000000060b36b79b4b206c0310472c117fa40c05342b5dc3e89f98f42c9da3ce6450d4c603cad55248017fd4eca3ab277cca64569193e4d487f5b2ea78a2bcdc81926c313c05842a3af318967a775783bba22519e8b8886587efa99aa7dab5784f792b187\n"]},"amount":{"type":"string","description":"Denomination of the cryptocurrency Polygon.","pattern":"^[1-9]\\d+$","examples":["100"]},"wallet_address":{"type":"string","description":"Hex-encoded Ethereum [account or smart contract address](https://ethereum.org/en/developers/docs/accounts/).","format":"hex","pattern":"^0x[a-fA-F0-9]{40}$","examples":["0x00000000219ab540356cBB839Cbe05303d7705Fa"]}}}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"400":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[400],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["Detailed human-readable diagnostic message regarding any invalid request parameters"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"401":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[401],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A human-readable diagnostic message detailing any authorization failure"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"500":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[500],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A descriptive error message"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"}}} as const
;
const PostPolygonRewardsRestakeIntent = {"body":{"type":"object","description":"Request object to create a new Rewards Restake Intent for Polygon","required":["wallet_address"],"properties":{"wallet_address":{"type":"string","description":"Hex-encoded Ethereum [account or smart contract address](https://ethereum.org/en/developers/docs/accounts/).","format":"hex","pattern":"^0x[a-fA-F0-9]{40}$","examples":["0x00000000219ab540356cBB839Cbe05303d7705Fa"]},"validator_share_address":{"type":"string","description":"Hex-encoded Ethereum [account or smart contract address](https://ethereum.org/en/developers/docs/accounts/).","format":"hex","pattern":"^0x[a-fA-F0-9]{40}$","examples":["0x00000000219ab540356cBB839Cbe05303d7705Fa"]},"plan_id":{"type":"string","description":"This feature enables you to stake to validators from the specified plan(s). When no plan id is specified, validators across all plans that match the API route will be available for staking. If it is a shared plan, you can to stake to validators on a shared node from the specified plan.","examples":["plan_Wgx98Rbi8nQuL9ddn3mTk1"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"network":{"type":"string","description":"Polygon network","enum":["mainnet","goerli","prater"],"$schema":"https://json-schema.org/draft/2020-12/schema#"}},"required":["network"]}]},"response":{"200":{"type":"object","required":["protocol","network","customer_id"],"properties":{"protocol":{"type":"string","description":"Blockchain protocol.\n\n`ethereum` `polkadot` `solana` `cosmos` `polygon` `near` `cardano` `avalanche` `binance`","enum":["ethereum","polkadot","solana","cosmos","polygon","near","cardano","avalanche","binance"]},"network":{"type":"string","description":"Protocol-specific network.\n\n`mainnet` `localnet` `goerli` `prater` `holesky` `testnet` `devnet` `kusama` `westend` `preprod` `fuji` `local`","enum":["mainnet","localnet","goerli","prater","holesky","testnet","devnet","kusama","westend","preprod","fuji","local"]},"polygon":{"type":"object","required":["to","unsigned_transaction","wallet_address"],"properties":{"to":{"type":"string","description":"Hex-encoded Ethereum [account or smart contract address](https://ethereum.org/en/developers/docs/accounts/).","format":"hex","pattern":"^0x[a-fA-F0-9]{40}$","examples":["0x00000000219ab540356cBB839Cbe05303d7705Fa"]},"unsigned_transaction":{"type":"string","format":"base64","description":"Generated unsigned transaction smart contract call data.","examples":["0x22895118000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000120087fed394b43849eebef1e88873cd9efdbe33136656e5148e659b8b2f33625d40000000000000000000000000000000000000000000000000000000000000030b81748644e23c4d950f9dd709f3eb73d5eacd9657997e1d9dde7c4ebd8a6519ecb9d0a7fb603d3b68e023278f9650122000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020010000000000000000000000c509bb854c526af4cee5e037089f7aa8e091d8870000000000000000000000000000000000000000000000000000000000000060b36b79b4b206c0310472c117fa40c05342b5dc3e89f98f42c9da3ce6450d4c603cad55248017fd4eca3ab277cca64569193e4d487f5b2ea78a2bcdc81926c313c05842a3af318967a775783bba22519e8b8886587efa99aa7dab5784f792b187\n"]},"wallet_address":{"type":"string","description":"Hex-encoded Ethereum [account or smart contract address](https://ethereum.org/en/developers/docs/accounts/).","format":"hex","pattern":"^0x[a-fA-F0-9]{40}$","examples":["0x00000000219ab540356cBB839Cbe05303d7705Fa"]}}},"customer_id":{"type":"string","description":"Unique identifier for a customer","minimum":1,"examples":["SatoshiNakamoto-xUYJbPw9hw"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"400":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[400],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["Detailed human-readable diagnostic message regarding any invalid request parameters"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"401":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[401],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A human-readable diagnostic message detailing any authorization failure"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"500":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[500],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A descriptive error message"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"}}} as const
;
const PostPolygonRewardsWithdrawalIntent = {"body":{"oneOf":[{"type":"object","description":"Request object to create a new rewards withdrawal intent for Polygon.","required":["wallet_address"],"properties":{"wallet_address":{"type":"string","description":"Hex-encoded Ethereum [account or smart contract address](https://ethereum.org/en/developers/docs/accounts/).","format":"hex","pattern":"^0x[a-fA-F0-9]{40}$","examples":["0x00000000219ab540356cBB839Cbe05303d7705Fa"]},"validator_share_address":{"type":"string","description":"Hex-encoded Ethereum [account or smart contract address](https://ethereum.org/en/developers/docs/accounts/).","format":"hex","pattern":"^0x[a-fA-F0-9]{40}$","examples":["0x00000000219ab540356cBB839Cbe05303d7705Fa"]},"plan_id":{"type":"string","description":"This feature enables you to stake to validators from the specified plan(s). When no plan id is specified, validators across all plans that match the API route will be available for staking. If it is a shared plan, you can to stake to validators on a shared node from the specified plan.","examples":["plan_Wgx98Rbi8nQuL9ddn3mTk1"]}}}],"$schema":"https://json-schema.org/draft/2020-12/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"network":{"type":"string","description":"Polygon network","enum":["mainnet","goerli","prater"],"$schema":"https://json-schema.org/draft/2020-12/schema#"}},"required":["network"]}]},"response":{"200":{"type":"object","required":["protocol","network","polygon","customer_id"],"properties":{"protocol":{"type":"string","description":"Polygon protocol\n\n`polygon`","enum":["polygon"]},"network":{"type":"string","description":"Polygon network\n\n`mainnet` `goerli` `prater`","enum":["mainnet","goerli","prater"]},"polygon":{"type":"object","required":["to","unsigned_transaction","wallet_address"],"properties":{"to":{"type":"string","description":"Hex-encoded Ethereum [account or smart contract address](https://ethereum.org/en/developers/docs/accounts/).","format":"hex","pattern":"^0x[a-fA-F0-9]{40}$","examples":["0x00000000219ab540356cBB839Cbe05303d7705Fa"]},"unsigned_transaction":{"type":"string","format":"base64","description":"Generated unsigned transaction smart contract call data.","examples":["0x22895118000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000120087fed394b43849eebef1e88873cd9efdbe33136656e5148e659b8b2f33625d40000000000000000000000000000000000000000000000000000000000000030b81748644e23c4d950f9dd709f3eb73d5eacd9657997e1d9dde7c4ebd8a6519ecb9d0a7fb603d3b68e023278f9650122000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020010000000000000000000000c509bb854c526af4cee5e037089f7aa8e091d8870000000000000000000000000000000000000000000000000000000000000060b36b79b4b206c0310472c117fa40c05342b5dc3e89f98f42c9da3ce6450d4c603cad55248017fd4eca3ab277cca64569193e4d487f5b2ea78a2bcdc81926c313c05842a3af318967a775783bba22519e8b8886587efa99aa7dab5784f792b187\n"]},"wallet_address":{"type":"string","description":"Hex-encoded Ethereum [account or smart contract address](https://ethereum.org/en/developers/docs/accounts/).","format":"hex","pattern":"^0x[a-fA-F0-9]{40}$","examples":["0x00000000219ab540356cBB839Cbe05303d7705Fa"]}}},"customer_id":{"type":"string","description":"Unique identifier for a customer","minimum":1,"examples":["SatoshiNakamoto-xUYJbPw9hw"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"400":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[400],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["Detailed human-readable diagnostic message regarding any invalid request parameters"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"401":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[401],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A human-readable diagnostic message detailing any authorization failure"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"500":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[500],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A descriptive error message"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"}}} as const
;
const PostPolygonStakeIntent = {"body":{"type":"object","description":"Request object to create a new Stake Intent for Polygon","required":["amount","wallet_address"],"properties":{"amount":{"type":"string","description":"The amount of MATIC (in Wei) you want to stake.","pattern":"^[1-9]\\d+$","examples":["100"]},"wallet_address":{"type":"string","description":"Hex-encoded Ethereum [account or smart contract address](https://ethereum.org/en/developers/docs/accounts/).","format":"hex","pattern":"^0x[a-fA-F0-9]{40}$","examples":["0x00000000219ab540356cBB839Cbe05303d7705Fa"]},"validator_share_address":{"type":"string","description":"Hex-encoded Ethereum [account or smart contract address](https://ethereum.org/en/developers/docs/accounts/).","format":"hex","pattern":"^0x[a-fA-F0-9]{40}$","examples":["0x00000000219ab540356cBB839Cbe05303d7705Fa"]},"plan_id":{"type":"string","description":"This feature enables you to stake to validators from the specified plan(s). When no plan id is specified, validators across all plans that match the API route will be available for staking. If it is a shared plan, you can to stake to validators on a shared node from the specified plan.","examples":["plan_Wgx98Rbi8nQuL9ddn3mTk1"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"network":{"type":"string","description":"Polygon network","enum":["mainnet","goerli","prater"],"$schema":"https://json-schema.org/draft/2020-12/schema#"}},"required":["network"]},{"type":"object","properties":{"Idempotency-Key":{"type":"string","format":"uuid","examples":["f1c971b4-7114-4c4b-8ad2-a6f9e33e2cd0"],"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"the unique idempotency key for this request"}},"required":[]}]},"response":{"200":{"type":"object","required":["customer_id","network","protocol","stake_intent_id"],"properties":{"stake_intent_id":{"type":"string","format":"base58","description":"Unique idenifier for a group of stakes.","examples":["stake_intent_Wgx98Rbi8nQuL9ddn3mTk1"]},"customer_id":{"type":"string","description":"Unique identifier for a customer","minimum":1,"examples":["SatoshiNakamoto-xUYJbPw9hw"]},"plan_id":{"type":"string","description":"This feature enables you to stake to validators from the specified plan(s). When no plan id is specified, validators across all plans that match the API route will be available for staking. If it is a shared plan, you can to stake to validators on a shared node from the specified plan.","examples":["plan_Wgx98Rbi8nQuL9ddn3mTk1"]},"protocol":{"type":"string","description":"Polygon protocol\n\n`polygon`","enum":["polygon"]},"network":{"type":"string","description":"Polygon network\n\n`mainnet` `goerli` `prater`","enum":["mainnet","goerli","prater"]},"polygon":{"type":"object","description":"Polygon Stake Intent","required":["to","unsigned_transaction","amount","wallet_address"],"properties":{"to":{"type":"string","description":"Hex-encoded Ethereum [account or smart contract address](https://ethereum.org/en/developers/docs/accounts/).","format":"hex","pattern":"^0x[a-fA-F0-9]{40}$","examples":["0x00000000219ab540356cBB839Cbe05303d7705Fa"]},"unsigned_transaction":{"type":"string","format":"base64","description":"Generated unsigned transaction smart contract call data.","examples":["0x22895118000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000120087fed394b43849eebef1e88873cd9efdbe33136656e5148e659b8b2f33625d40000000000000000000000000000000000000000000000000000000000000030b81748644e23c4d950f9dd709f3eb73d5eacd9657997e1d9dde7c4ebd8a6519ecb9d0a7fb603d3b68e023278f9650122000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020010000000000000000000000c509bb854c526af4cee5e037089f7aa8e091d8870000000000000000000000000000000000000000000000000000000000000060b36b79b4b206c0310472c117fa40c05342b5dc3e89f98f42c9da3ce6450d4c603cad55248017fd4eca3ab277cca64569193e4d487f5b2ea78a2bcdc81926c313c05842a3af318967a775783bba22519e8b8886587efa99aa7dab5784f792b187\n"]},"amount":{"type":"string","description":"Denomination of the cryptocurrency Polygon.","pattern":"^[1-9]\\d+$","examples":["100"]},"wallet_address":{"type":"string","description":"Hex-encoded Ethereum [account or smart contract address](https://ethereum.org/en/developers/docs/accounts/).","format":"hex","pattern":"^0x[a-fA-F0-9]{40}$","examples":["0x00000000219ab540356cBB839Cbe05303d7705Fa"]}}}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"400":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[400],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["Detailed human-readable diagnostic message regarding any invalid request parameters"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"401":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[401],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A human-readable diagnostic message detailing any authorization failure"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"500":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[500],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A descriptive error message"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"503":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[500],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A descriptive error message"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"}}} as const
;
const PostPolygonWithdrawalIntent = {"body":{"type":"object","description":"Request object to create a new withdrawal intent for Polygon.","required":["wallet_address"],"properties":{"unbond_nonces":{"type":"array","items":{"type":"integer","description":"Number for one use only","examples":[1]}},"wallet_address":{"type":"string","description":"An array of unbond nonces.","format":"hex","pattern":"^0x[a-fA-F0-9]{40}$","examples":["0x00000000219ab540356cBB839Cbe05303d7705Fa"]},"validator_share_address":{"type":"string","description":"Hex-encoded Ethereum [account or smart contract address](https://ethereum.org/en/developers/docs/accounts/).","format":"hex","pattern":"^0x[a-fA-F0-9]{40}$","examples":["0x00000000219ab540356cBB839Cbe05303d7705Fa"]},"plan_id":{"type":"string","description":"This feature enables you to stake to validators from the specified plan(s). When no plan id is specified, validators across all plans that match the API route will be available for staking. If it is a shared plan, you can to stake to validators on a shared node from the specified plan.","examples":["plan_Wgx98Rbi8nQuL9ddn3mTk1"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"network":{"type":"string","description":"Polygon network","enum":["mainnet","goerli","prater"],"$schema":"https://json-schema.org/draft/2020-12/schema#"}},"required":["network"]}]},"response":{"200":{"type":"object","required":["customer_id","network","protocol","withdraw_intent_id"],"description":"Result of a new withdrawal intent request.","properties":{"withdraw_intent_id":{"type":"string","format":"uuid","description":"Unique idenifier for a withdrawal intent.","examples":["4ba06e89-8c29-483e-ac36-318de5aa7364"]},"customer_id":{"type":"string","description":"Unique identifier for a customer","minimum":1,"examples":["SatoshiNakamoto-xUYJbPw9hw"]},"protocol":{"type":"string","description":"Polygon protocol\n\n`polygon`","enum":["polygon"]},"network":{"type":"string","description":"Polygon network\n\n`mainnet` `goerli` `prater`","enum":["mainnet","goerli","prater"]},"polygon":{"type":"array","items":{"type":"object","required":["to","unsigned_transaction","unbond_nonce","wallet_address"],"properties":{"to":{"type":"string","description":"Hex-encoded Ethereum [account or smart contract address](https://ethereum.org/en/developers/docs/accounts/).","format":"hex","pattern":"^0x[a-fA-F0-9]{40}$","examples":["0x00000000219ab540356cBB839Cbe05303d7705Fa"]},"unsigned_transaction":{"type":"string","format":"base64","description":"Generated unsigned transaction smart contract call data.","examples":["0x22895118000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000120087fed394b43849eebef1e88873cd9efdbe33136656e5148e659b8b2f33625d40000000000000000000000000000000000000000000000000000000000000030b81748644e23c4d950f9dd709f3eb73d5eacd9657997e1d9dde7c4ebd8a6519ecb9d0a7fb603d3b68e023278f9650122000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020010000000000000000000000c509bb854c526af4cee5e037089f7aa8e091d8870000000000000000000000000000000000000000000000000000000000000060b36b79b4b206c0310472c117fa40c05342b5dc3e89f98f42c9da3ce6450d4c603cad55248017fd4eca3ab277cca64569193e4d487f5b2ea78a2bcdc81926c313c05842a3af318967a775783bba22519e8b8886587efa99aa7dab5784f792b187\n"]},"unbond_nonce":{"type":"integer","description":"Number for one use only","examples":[1]},"wallet_address":{"type":"string","description":"Hex-encoded Ethereum [account or smart contract address](https://ethereum.org/en/developers/docs/accounts/).","format":"hex","pattern":"^0x[a-fA-F0-9]{40}$","examples":["0x00000000219ab540356cBB839Cbe05303d7705Fa"]}}}}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"400":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[400],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["Detailed human-readable diagnostic message regarding any invalid request parameters"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"401":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[401],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A human-readable diagnostic message detailing any authorization failure"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"500":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[500],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A descriptive error message"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"}}} as const
;
const PostSolanaDeactivationIntent = {"body":{"type":"object","description":"Request object to create a new deactivation intent for Solana.","required":["amount"],"properties":{"amount":{"type":"string","description":"The amount of funds you want to deactivate (in Lamports).","pattern":"^[1-9]\\d+$","examples":["100"]},"delegator_address":{"type":"string","description":"Public Key of an asymmetric key-pair.","format":"base58","pattern":"^[1-9A-HJ-NP-Za-km-z]{44}$","examples":["5xot9PVkphiX2adznghwrAuxGs2zeWisNSxMW6hU6Hkj"]},"staking_authority":{"type":"string","description":"Public Key of an asymmetric key-pair.","format":"base58","pattern":"^[1-9A-HJ-NP-Za-km-z]{44}$","examples":["5xot9PVkphiX2adznghwrAuxGs2zeWisNSxMW6hU6Hkj"]},"withdrawal_authority":{"type":"string","description":"Public Key of an asymmetric key-pair.","format":"base58","pattern":"^[1-9A-HJ-NP-Za-km-z]{44}$","examples":["5xot9PVkphiX2adznghwrAuxGs2zeWisNSxMW6hU6Hkj"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"network":{"type":"string","description":"Solana network","enum":["mainnet","testnet"],"$schema":"https://json-schema.org/draft/2020-12/schema#"}},"required":["network"]}]},"response":{"200":{"type":"object","required":["customer_id","deactivate_intent_id","network","protocol","solana"],"description":"Response to a new deactivation intent request.","properties":{"deactivate_intent_id":{"type":"string","format":"uuid","description":"Unique idenifier for deactivate intent.","examples":["4ba06e89-8c29-483e-ac36-318de5aa7364"]},"customer_id":{"type":"string","description":"Unique identifier for a customer","minimum":1,"examples":["SatoshiNakamoto-xUYJbPw9hw"]},"protocol":{"type":"string","description":"Solana protocol\n\n`solana`","enum":["solana"]},"network":{"type":"string","description":"Solana network\n\n`mainnet` `testnet`","enum":["mainnet","testnet"]},"solana":{"type":"object","description":"Result of the new Deactivate Intent request.","required":["total_deactivated_amount","deactivates","splits"],"properties":{"deactivates":{"type":"array","items":{"type":"object","description":"Result of the deactivation transaction request","required":["unsigned_transaction","stake_account_authority","stake_account_address","withdrawal_authority","stake_id","amount","expiration_time"],"properties":{"unsigned_transaction":{"type":"string","format":"base64","description":"Generated unsigned transaction smart contract call data.","examples":["0x22895118000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000120087fed394b43849eebef1e88873cd9efdbe33136656e5148e659b8b2f33625d40000000000000000000000000000000000000000000000000000000000000030b81748644e23c4d950f9dd709f3eb73d5eacd9657997e1d9dde7c4ebd8a6519ecb9d0a7fb603d3b68e023278f9650122000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020010000000000000000000000c509bb854c526af4cee5e037089f7aa8e091d8870000000000000000000000000000000000000000000000000000000000000060b36b79b4b206c0310472c117fa40c05342b5dc3e89f98f42c9da3ce6450d4c603cad55248017fd4eca3ab277cca64569193e4d487f5b2ea78a2bcdc81926c313c05842a3af318967a775783bba22519e8b8886587efa99aa7dab5784f792b187\n"]},"stake_account_authority":{"type":"string","description":"Public Key of an asymmetric key-pair.","format":"base58","pattern":"^[1-9A-HJ-NP-Za-km-z]{44}$","examples":["5xot9PVkphiX2adznghwrAuxGs2zeWisNSxMW6hU6Hkj"]},"stake_account_address":{"type":"string","description":"Public Key of an asymmetric key-pair.","format":"base58","pattern":"^[1-9A-HJ-NP-Za-km-z]{44}$","examples":["5xot9PVkphiX2adznghwrAuxGs2zeWisNSxMW6hU6Hkj"]},"withdrawal_authority":{"type":"string","description":"Public Key of an asymmetric key-pair.","format":"base58","pattern":"^[1-9A-HJ-NP-Za-km-z]{44}$","examples":["5xot9PVkphiX2adznghwrAuxGs2zeWisNSxMW6hU6Hkj"]},"stake_id":{"description":"Unique stake identifier.","type":"string","format":"base58","examples":["stake_Wgx98Rbi8nQuL9ddn3mTk1"]},"amount":{"type":"string","description":"Denomination of the cryptocurrency Solana.","pattern":"^[1-9]\\d+$","examples":["100"]},"expiration_time":{"type":"integer","description":"Transaction expiration time","format":"int64","examples":[1689939023],"minimum":-9223372036854776000,"maximum":9223372036854776000}}}},"splits":{"type":"array","items":{"type":"object","description":"Result of the split transaction request","required":["unsigned_transaction","stake_account_authority","new_stake_account_address","new_stake_id","splitted_stake_account_address","splitted_stake_id","amount"],"properties":{"unsigned_transaction":{"type":"string","format":"base64","description":"Generated unsigned transaction smart contract call data.","examples":["0x22895118000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000120087fed394b43849eebef1e88873cd9efdbe33136656e5148e659b8b2f33625d40000000000000000000000000000000000000000000000000000000000000030b81748644e23c4d950f9dd709f3eb73d5eacd9657997e1d9dde7c4ebd8a6519ecb9d0a7fb603d3b68e023278f9650122000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020010000000000000000000000c509bb854c526af4cee5e037089f7aa8e091d8870000000000000000000000000000000000000000000000000000000000000060b36b79b4b206c0310472c117fa40c05342b5dc3e89f98f42c9da3ce6450d4c603cad55248017fd4eca3ab277cca64569193e4d487f5b2ea78a2bcdc81926c313c05842a3af318967a775783bba22519e8b8886587efa99aa7dab5784f792b187\n"]},"stake_account_authority":{"type":"string","description":"Public Key of an asymmetric key-pair.","format":"base58","pattern":"^[1-9A-HJ-NP-Za-km-z]{44}$","examples":["5xot9PVkphiX2adznghwrAuxGs2zeWisNSxMW6hU6Hkj"]},"new_stake_account_address":{"type":"string","description":"Public Key of an asymmetric key-pair.","format":"base58","pattern":"^[1-9A-HJ-NP-Za-km-z]{44}$","examples":["5xot9PVkphiX2adznghwrAuxGs2zeWisNSxMW6hU6Hkj"]},"new_stake_id":{"description":"Unique stake identifier.","type":"string","format":"base58","examples":["stake_Wgx98Rbi8nQuL9ddn3mTk1"]},"splitted_stake_account_address":{"type":"string","description":"Public Key of an asymmetric key-pair.","format":"base58","pattern":"^[1-9A-HJ-NP-Za-km-z]{44}$","examples":["5xot9PVkphiX2adznghwrAuxGs2zeWisNSxMW6hU6Hkj"]},"splitted_stake_id":{"description":"Unique stake identifier.","type":"string","format":"base58","examples":["stake_Wgx98Rbi8nQuL9ddn3mTk1"]},"amount":{"type":"string","description":"Denomination of the cryptocurrency Solana.","pattern":"^[1-9]\\d+$","examples":["100"]}}}},"total_deactivated_amount":{"type":"string","description":"Denomination of the cryptocurrency Solana.","pattern":"^[1-9]\\d+$","examples":["100"]}}}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"400":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[400],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["Detailed human-readable diagnostic message regarding any invalid request parameters"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"401":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[401],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A human-readable diagnostic message detailing any authorization failure"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"500":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[500],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A descriptive error message"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"}}} as const
;
const PostSolanaStakeIntent = {"body":{"type":"object","description":"Individual solana stake","required":["amount","delegator_address"],"properties":{"amount":{"type":"string","description":"The amount of funds you want to stake (in Lamports)","pattern":"^[1-9]\\d+$","examples":["100"]},"validator_address":{"type":"string","description":"The public address of the validator node that you intend to delegate your tokens to","format":"base58","pattern":"^[1-9A-HJ-NP-Za-km-z]{44}$","examples":["5xot9PVkphiX2adznghwrAuxGs2zeWisNSxMW6hU6Hkj"]},"delegator_address":{"type":"string","description":"The address sending the funds to be staked","format":"base58","pattern":"^[1-9A-HJ-NP-Za-km-z]{44}$","examples":["5xot9PVkphiX2adznghwrAuxGs2zeWisNSxMW6hU6Hkj"]},"staking_authority":{"type":"string","description":"The stake authority can be considered the manager of the stake account. It is used to sign transactions for the following operations but doesn’t have control over the funds:\n* Delegating stake\n* Deactivating the stake delegation\n* Splitting the stake account (creating a new stake account with a portion of the funds)\n* Merging two stake accounts into one\n* Setting a new stake authority\n* **Note:** When not specified, this will default to the delegator_address","format":"base58","pattern":"^[1-9A-HJ-NP-Za-km-z]{44}$","examples":["5xot9PVkphiX2adznghwrAuxGs2zeWisNSxMW6hU6Hkj"]},"withdrawal_authority":{"type":"string","description":"The withdraw authority is used to sign transactions for the following operations:\n* Withdrawing an un-delegated stake into a wallet address\n* Setting a new withdrawal authority\n* Setting a new stake authority (thus, the withdrawal authority is the ultimate owner of the account)\n* **Note:** When not specified, this will default to the delegator_address","format":"base58","pattern":"^[1-9A-HJ-NP-Za-km-z]{44}$","examples":["5xot9PVkphiX2adznghwrAuxGs2zeWisNSxMW6hU6Hkj"]},"plan_id":{"type":"string","description":"This feature enables you to stake to validators from the specified plan(s). When no plan id is specified, validators across all plans that match the API route will be available for staking. If it is a shared plan, you can to stake to validators on a shared node from the specified plan.","examples":["plan_Wgx98Rbi8nQuL9ddn3mTk1"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"network":{"type":"string","description":"Solana network","enum":["mainnet","testnet"],"$schema":"https://json-schema.org/draft/2020-12/schema#"}},"required":["network"]},{"type":"object","properties":{"Idempotency-Key":{"type":"string","format":"uuid","examples":["f1c971b4-7114-4c4b-8ad2-a6f9e33e2cd0"],"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"the unique idempotency key for this request"}},"required":[]}]},"response":{"200":{"type":"object","required":["customer_id","network","protocol","stake_intent_id"],"properties":{"stake_intent_id":{"type":"string","format":"base58","description":"Unique idenifier for a group of stakes.","examples":["stake_intent_Wgx98Rbi8nQuL9ddn3mTk1"]},"customer_id":{"type":"string","description":"Unique identifier for a customer","minimum":1,"examples":["SatoshiNakamoto-xUYJbPw9hw"]},"plan_id":{"type":"string","description":"This feature enables you to stake to validators from the specified plan(s). When no plan id is specified, validators across all plans that match the API route will be available for staking. If it is a shared plan, you can to stake to validators on a shared node from the specified plan.","examples":["plan_Wgx98Rbi8nQuL9ddn3mTk1"]},"protocol":{"type":"string","description":"Solana protocol\n\n`solana`","enum":["solana"]},"network":{"type":"string","description":"Solana network\n\n`mainnet` `testnet`","enum":["mainnet","testnet"]},"solana":{"type":"object","description":"Solana Stake Intent response","required":["stake_id","amount","validator_public_key","withdrawal_authority","staking_authority","stake_account_public_key","unsigned_transaction","expiration_time"],"properties":{"stake_id":{"description":"Unique stake identifier.","type":"string","format":"base58","examples":["stake_Wgx98Rbi8nQuL9ddn3mTk1"]},"amount":{"type":"string","description":"Denomination of the cryptocurrency Solana.","pattern":"^[1-9]\\d+$","examples":["100"]},"validator_public_key":{"type":"string","description":"A BLS public Key.","format":"base64","examples":["0xa1d1ad0714035353258038e964ae9675dc0252ee22cea896825c01458e1807bfad2f9969338798548d9858a571f7425c"]},"staking_authority":{"type":"string","description":"Public Key of an asymmetric key-pair.","format":"base58","pattern":"^[1-9A-HJ-NP-Za-km-z]{44}$","examples":["5xot9PVkphiX2adznghwrAuxGs2zeWisNSxMW6hU6Hkj"]},"withdrawal_authority":{"type":"string","description":"A BLS public Key.","format":"base64","examples":["0xa1d1ad0714035353258038e964ae9675dc0252ee22cea896825c01458e1807bfad2f9969338798548d9858a571f7425c"]},"stake_account_public_key":{"type":"string","description":"Public Key of an asymmetric key-pair.","format":"base58","pattern":"^[1-9A-HJ-NP-Za-km-z]{44}$","examples":["5xot9PVkphiX2adznghwrAuxGs2zeWisNSxMW6hU6Hkj"]},"unsigned_transaction":{"type":"string","format":"base64","description":"Generated unsigned transaction smart contract call data.","examples":["0x22895118000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000120087fed394b43849eebef1e88873cd9efdbe33136656e5148e659b8b2f33625d40000000000000000000000000000000000000000000000000000000000000030b81748644e23c4d950f9dd709f3eb73d5eacd9657997e1d9dde7c4ebd8a6519ecb9d0a7fb603d3b68e023278f9650122000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020010000000000000000000000c509bb854c526af4cee5e037089f7aa8e091d8870000000000000000000000000000000000000000000000000000000000000060b36b79b4b206c0310472c117fa40c05342b5dc3e89f98f42c9da3ce6450d4c603cad55248017fd4eca3ab277cca64569193e4d487f5b2ea78a2bcdc81926c313c05842a3af318967a775783bba22519e8b8886587efa99aa7dab5784f792b187\n"]},"expiration_time":{"type":"integer","description":"Transaction expiration time","format":"int64","examples":[1689939023],"minimum":-9223372036854776000,"maximum":9223372036854776000}}}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"400":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[400],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["Detailed human-readable diagnostic message regarding any invalid request parameters"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"401":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[401],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A human-readable diagnostic message detailing any authorization failure"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"500":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[500],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A descriptive error message"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"503":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[500],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A descriptive error message"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"}}} as const
;
const PostSolanaWithdrawalIntent = {"body":{"type":"object","description":"Request object to create a new withdrawal intent for Solana.","required":["amount","withdrawal_address"],"properties":{"amount":{"type":"string","description":"The amount of funds you want to withdraw (in Lamports). If the value is 0 or unspecified it will be set to current balance.","pattern":"^[1-9]\\d+$","examples":["100"]},"withdrawal_address":{"type":"string","description":"The receiving address – i.e. where the withdrawn funds should go.","format":"base58","pattern":"^[1-9A-HJ-NP-Za-km-z]{44}$","examples":["5xot9PVkphiX2adznghwrAuxGs2zeWisNSxMW6hU6Hkj"]},"delegator_address":{"type":"string","description":"Public Key of an asymmetric key-pair.","format":"base58","pattern":"^[1-9A-HJ-NP-Za-km-z]{44}$","examples":["5xot9PVkphiX2adznghwrAuxGs2zeWisNSxMW6hU6Hkj"]},"withdrawal_authority":{"type":"string","description":"Public Key of an asymmetric key-pair.","format":"base58","pattern":"^[1-9A-HJ-NP-Za-km-z]{44}$","examples":["5xot9PVkphiX2adznghwrAuxGs2zeWisNSxMW6hU6Hkj"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"network":{"type":"string","description":"Solana network","enum":["mainnet","testnet"],"$schema":"https://json-schema.org/draft/2020-12/schema#"}},"required":["network"]}]},"response":{"200":{"type":"object","required":["customer_id","network","protocol","solana","withdraw_intent_id"],"description":"Result of a new withdrawal intent request.","properties":{"withdraw_intent_id":{"type":"string","format":"uuid","description":"Unique idenifier for a withdrawal intent.","examples":["4ba06e89-8c29-483e-ac36-318de5aa7364"]},"customer_id":{"type":"string","description":"Unique identifier for a customer","minimum":1,"examples":["SatoshiNakamoto-xUYJbPw9hw"]},"protocol":{"type":"string","description":"Solana protocol\n\n`solana`","enum":["solana"]},"network":{"type":"string","description":"Solana network\n\n`mainnet` `testnet`","enum":["mainnet","testnet"]},"solana":{"type":"object","required":["withdraws","total_withdraw_amount"],"properties":{"withdraws":{"type":"array","items":{"type":"object","description":"Result of the withdraw transaction request","required":["unsigned_transaction","withdrawal_authority_public_key","stake_account_address","amount","stake_id","expiration_time"],"properties":{"unsigned_transaction":{"type":"string","format":"base64","description":"Generated unsigned transaction smart contract call data.","examples":["0x22895118000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000120087fed394b43849eebef1e88873cd9efdbe33136656e5148e659b8b2f33625d40000000000000000000000000000000000000000000000000000000000000030b81748644e23c4d950f9dd709f3eb73d5eacd9657997e1d9dde7c4ebd8a6519ecb9d0a7fb603d3b68e023278f9650122000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020010000000000000000000000c509bb854c526af4cee5e037089f7aa8e091d8870000000000000000000000000000000000000000000000000000000000000060b36b79b4b206c0310472c117fa40c05342b5dc3e89f98f42c9da3ce6450d4c603cad55248017fd4eca3ab277cca64569193e4d487f5b2ea78a2bcdc81926c313c05842a3af318967a775783bba22519e8b8886587efa99aa7dab5784f792b187\n"]},"withdrawal_authority_public_key":{"type":"string","description":"Public Key of an asymmetric key-pair.","format":"base58","pattern":"^[1-9A-HJ-NP-Za-km-z]{44}$","examples":["5xot9PVkphiX2adznghwrAuxGs2zeWisNSxMW6hU6Hkj"]},"stake_account_address":{"type":"string","description":"Public Key of an asymmetric key-pair.","format":"base58","pattern":"^[1-9A-HJ-NP-Za-km-z]{44}$","examples":["5xot9PVkphiX2adznghwrAuxGs2zeWisNSxMW6hU6Hkj"]},"stake_id":{"description":"Unique stake identifier.","type":"string","format":"base58","examples":["stake_Wgx98Rbi8nQuL9ddn3mTk1"]},"amount":{"type":"string","description":"Denomination of the cryptocurrency Solana.","pattern":"^[1-9]\\d+$","examples":["100"]},"expiration_time":{"type":"integer","description":"Transaction expiration time","format":"int64","examples":[1689939023],"minimum":-9223372036854776000,"maximum":9223372036854776000}}}},"total_withdraw_amount":{"type":"string","description":"Denomination of the cryptocurrency Solana.","pattern":"^[1-9]\\d+$","examples":["100"]}}}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"400":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[400],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["Detailed human-readable diagnostic message regarding any invalid request parameters"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"401":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[401],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A human-readable diagnostic message detailing any authorization failure"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"500":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[500],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A descriptive error message"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"}}} as const
;
const SubmitTransaction = {"body":{"type":"object","description":"Transaction for submission","required":["signed_transaction"],"properties":{"signed_transaction":{"type":"string","format":"base64","description":"Hex-encoded raw bytes of a protocol-specific signed transaction.","examples":["0x22895118000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000120087fed394b43849eebef1e88873cd9efdbe33136656e5148e659b8b2f33625d40000000000000000000000000000000000000000000000000000000000000030b81748644e23c4d950f9dd709f3eb73d5eacd9657997e1d9dde7c4ebd8a6519ecb9d0a7fb603d3b68e023278f9650122000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020010000000000000000000000c509bb854c526af4cee5e037089f7aa8e091d8870000000000000000000000000000000000000000000000000000000000000060b36b79b4b206c0310472c117fa40c05342b5dc3e89f98f42c9da3ce6450d4c603cad55248017fd4eca3ab277cca64569193e4d487f5b2ea78a2bcdc81926c313c05842a3af318967a775783bba22519e8b8886587efa99aa7dab5784f792b187\n"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"network":{"type":"string","description":"Cardano network","enum":["mainnet","preprod","localnet"],"$schema":"https://json-schema.org/draft/2020-12/schema#"}},"required":["network"]}]},"response":{"200":{"type":"object","description":"Transaction for submission response","required":["protocol","network","transaction_id","customer_id"],"properties":{"protocol":{"type":"string","description":"Cardano protocol\n\n`cardano`","enum":["cardano"]},"network":{"type":"string","description":"Cardano network\n\n`mainnet` `preprod` `localnet`","enum":["mainnet","preprod","localnet"]},"transaction_id":{"type":"string","description":"Unique identifier for a transaction","format":"base58","examples":["transaction_Wgx98Rbi8nQuL9ddn3mTk1"]},"customer_id":{"type":"string","description":"Unique identifier for a customer","minimum":1,"examples":["SatoshiNakamoto-xUYJbPw9hw"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"400":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[400],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["Detailed human-readable diagnostic message regarding any invalid request parameters"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"401":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[401],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A human-readable diagnostic message detailing any authorization failure"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"500":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[500],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A descriptive error message"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"503":{"type":"object","description":"Error response envelope","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32","description":"Error code","examples":[500],"minimum":-2147483648,"maximum":2147483647},"message":{"type":"string","description":"Error Message","examples":["A descriptive error message"]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"}}} as const
;
export { ActiveExitingQueueProgress, CancelNearDeactivationIntent, CancelPolygonDeactivationIntent, CancelSolanaDeactivationIntent, CancelSolanaWithdrawalIntent, ExitEthereumValidator, ExitEthereumValidators, GenerateEthereumLaunchpadDeposit, GenerateSignedVoluntaryExit, GetBinanceDeactivatableAmount, GetBinanceDeactivationIntents, GetBinanceRestakeIntents, GetCardanoDeactivationIntents, GetCardanoRewardsWithdrawalIntents, GetCosmosDeactivatableAmount, GetCosmosDeactivationIntents, GetCosmosRestakeIntents, GetCosmosWithdrawableRewardsAmount, GetNearDeactivatableAmount, GetNearDeactivationIntents, GetNearWithdrawableAmount, GetNearWithdrawalIntents, GetPolygonDeactivationIntents, GetSolanaDeactivatableAmount, GetSolanaDeactivationIntents, GetSolanaWithdrawableAmount, GetSolanaWithdrawalIntents, GetStakeAccountsSolana, ListCustomerPlans, ListStakeIntents, PendingQueuedProgress, PostAvaxStakeIntent, PostBinanceDeactivationIntent, PostBinanceRestakeIntent, PostBinanceStakeIntent, PostCardanoDeactivationIntent, PostCardanoRewardsWithdrawalIntent, PostCardanoStakeIntent, PostCosmosDeactivationIntent, PostCosmosRestakeIntent, PostCosmosRewardsWithdrawalIntent, PostCosmosStakeIntent, PostEthereumStakeIntent, PostNearDeactivationIntent, PostNearStakeIntent, PostNearWithdrawalIntent, PostPolkadotDeactivateIntent, PostPolkadotStakeIntent, PostPolkadotWithdrawalIntent, PostPolygonBootstrappingIntent, PostPolygonDeactivationIntent, PostPolygonRewardsRestakeIntent, PostPolygonRewardsWithdrawalIntent, PostPolygonStakeIntent, PostPolygonWithdrawalIntent, PostSolanaDeactivationIntent, PostSolanaStakeIntent, PostSolanaWithdrawalIntent, SubmitTransaction }
